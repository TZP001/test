//-------------------------------------------------------------------------
// Resource file for modules mkodtM et CATODTManager
// dmh - Sept 2001
//-------------------------------------------------------------------------
CATmkodt.NoLicense="No license available for this product.";
CATmkodt.NoPdt="The required product is not present in the installation.";
CATmkodt.UnrecoPdt="Unrecognized product.";
mkodt.Line1="## ------------------------------------------------------------";
mkodt.Null="## ";


// INFO MESSAGES:

mkodt.InfoTimeDSCov="## mode DSCov         : the max_time is modified for this mode (*3)";
mkodt.InfoTimeFlag="## Time Option selected";
mkodt.InfoTypeODT="## mode Switch selected";
mkodt.InfoAllOdtFlag="## Automatic mode selected";
mkodt.InfoOMLeaks="## OMLeaks mode selected";
mkodt.InfoMLKTracker="## MLKTracker mode selected";
mkodt.InfoRecCapture="## mode Record         : Capture";
mkodt.InfoRecJavaCapture="## mode Record Java        : Capture";
mkodt.InfoCoverage="## mode COUVERTURE";
mkodt.InfoKeepFlag="## Keep mode Selected";
mkodt.InfoLoadToDbg="## mode debug : /P1";
mkodt.InfoDebugger="## debugger         : /P1";
mkodt.InfoNoMaxTime="## mode NO MAX_TIME";
mkodt.InfoNoPert="## mode No Pertinence";
mkodt.InfoUpdate="## mode Update ODTInit";
mkodt.InfoInit="## mode Init";
mkodt.SearchImpact="## Research of impacted ODT list...";
mkodt.NoODTsImpacted="## ++ No ODTs to replay.";
mkodt.NoODTsImpacted2="## ++ No ODTs are impacted by your modification.";
mkodt.NbODTsImpacted="## ++ /P1 ODTs to replay.";
mkodt.WSROOT="## Workspace Directory : /P1";
mkodt.Concatenation="## Concatenation : /P1";
mkodt.OS="## OS : /P1";
mkodt.Machine="## Machine : /P1";
mkodt.Display="## Display : /P1";
mkodt.NbODTToReplay="## /P1 ODT to replay";
mkodt.NbInit="## /P1 Init to do";
mkodt.RunningODT="## RUNNING ODT [/P1 /P2] (/P3 / /P4)";
mkodt.Resum="## /P1 ODT replayed, /P2 KO.";
mkodt.ImpactUpdate="## /P1  : Start to update the DataBase ...";
mkodt.ImpactGeneration="## /P1  : Start of DataBase generation...";
mkodt.ImpactGenerationOK="## DataBase successfully generated.";
mkodt.Interrupted="## /P1 Interrupted by user.";
mkodt.StartInit="## Start update Init : #############################################";
mkodt.EndInit="## End update Init : #############################################";
mkodt.DirDeleted="## Directory /P1 and its content is deleted.";
mkodt.InfoSupEnv="## Using environment extension [/P1]";
mkodt.InfoInteractWin="## Opening interactive window...";
mkodt.InfoNoInteractWin="## Unknown -D parameter for /P1 System";
mkodt.max_time="max_time: /P1 min.";
mkodt.Elapsed_Time="elapsed_time: /P1 min /P2 sec";
mkodt.ODTOK="## ++ /P1.sh : Shell script execution successful code 0";
mkodt.ODTOKQuiet="## /P1 : OK";
mkodt.Basic="## /P1";
mkodt.InfoEnoviaSet="## Setting the ENOVIA environment for the replay...";
mkodt.InfoEnovEnvUsed="## IT ENOVIA already defined in: /P1";
mkodt.InfoEnoviaCreate="## Creating the temporary /P1 ENOVIA environment for the replay...";
mkodt.InfoEnovEnvCreate="## IT ENOVIA created in : /P1";
mkodt.InfoSettings="## Generating connection settings :";
mkodt.InfoSettingsOK="## connection settings successfully generated.";
mkodt.InfoKillEnovEnv="## Killing the ENOVIA server launched for the replay...";
mkodt.InfoKillEnovEnvOK="## ENOVIA server successfully killed.";
mkodt.InfoLaunchEnovEnv="## Launching the ENOVIA server launched for the replay...";
mkodt.InfoLaunchEnovEnvOK="## ENOVIA server successfully launched.";
mkodt.DISPLAYDROP="## ODT not Replayed due to DROP parameter:\n## Current DROP           = /P1\n## Target Correction DROP = /P2";
mkodt.ODTManaged="## ++ /P1 replay : rc=/P2";
mkodt.RemoveLockFile="## Removing lock file";

mkodt.ENOVENVNAME="## IT ENOVIA Environment name    : /P1";	
mkodt.ENOVDesc="## Description                   : /P1";	
mkodt.ENOVServer="## ENOVIA server hostname        : /P1";	
mkodt.ENOVPort="##               port            : /P1";	
mkodt.ENOVVaultServer="## ENOVIA vault server hostname  : /P1";	
mkodt.ENOVVaultPort="##                     port      : /P1";	
mkodt.ENOVENV="## ENOVIA Environment used       : /P1";
mkodt.ENOCONFIG="## ENOVIA Config                 : /P1";
mkodt.ENOSERVERSTATUS="## ENOVIA Server Status          : /P1";

mkodt.ENOVSERVERPORT="## ODTEnoviaServer                : /P1";	
mkodt.ENOVUSER="## ODTEnoviaUser                  : /P1";	
mkodt.ENOVVAULTPATH="## VaultClient_PropertiesFilePath : /P1";
mkodt.ENOVVAULTFILE="## VaultClient_PropertiesFileName : /P1";
mkodt.mkodtXMLizerLocationFile="## mkodt xml output is in /P1";	
mkodt.mkodtXMLizerLocationHtmlFile="## Check results in /P1";	
// ERROR MESSAGES: 

mkodt.NotExist="## ++ ERROR : /P1 does not exists.";
mkodt.IsEmpty="## ++ ERROR : File /P1 is empty.";
mkodt.BadFormat="## ++ ERROR : File /P1 has not the good format.";
mkodt.NotAFWTest="## ++ ERROR : /P1 is not a test framework.";
mkodt.NoODTs="## ++ ERROR : No ODT found in given Path.";
mkodt.SthNotFound="## ++ ERROR : Given ODT not found: Verify that your ODT is in an existing test framework and that this framework contains an IdentityCard.";
mkodt.MkmkROOT_PATH="## ++ ERROR : Environmemt variable MkmkROOT_PATH must be evaluated.";
mkodt.MkmkOS_VAR="## ++ ERROR : Environmemt variable MkmkOS_VAR must be evaluated.";
mkodt.MkmkOS_NAME="## ++ ERROR : Environmemt variable MkmkOS_NAME must be evaluated.";
mkodt.OptionWOnWindows="## ++ ERROR : Option -W not available on /P1.";
mkodt.OptionBuildImpactOnUnix="## ++ ERROR : Options -BuildImpact not available on /P1.";
mkodt.OptionDSCovOnUnix="## ++ ERROR : Options -DSCov not available on /P1.";
mkodt.OptionImpactListOnUnix="## ++ ERROR : Options -ImpactList not available on /P1.";
mkodt.OptionWAndd="## ++ ERROR : Impossible to have -W and -d options.";
mkodt.OptionIncompatible="## ++ ERROR : Incompatible options (-a, -s, -l, -L).";
mkodt.OptionIncompatibleEnov="## ++ ERROR : Incompatible options -EnoviaEnv and -LocalSrvEnovia.";
mkodt.GiveOption="## ++ ERROR : Give -a, -s, -l or -L options.";
mkodt.OptionRestricted="## ++ ERROR : To use the -RestrictedProduct option you must give the Workspace where to find the packaging (option -WSPack).";
mkodt.OptionWSPack="## ++ ERROR : To use the -WSPack option you must give the restricted product list (option -RestrictedProduct).";
mkodt.OptionNoCaptureNT="## ++ RECORD: NO Capture Record on Windows NT\n## ++ RECORD: Capture on Unix\n## ++ -C option unavailable";
mkodt.OptionNoCaptureJavaNT="## ++ RECORD JAVA: NO Capture Record on UNIX\n## ++ RECORD JAVA: Capture on Windows NT\n## ++ -CJ option unavailable";
mkodt.OptionNoFile="## ++ ERROR : Couldn't read /P1.";

mkodt.OptionBuildImpactFWLst="## ++ ERREUR : Impossible to read /P1.";
mkodt.CantCreateFile="## ++ ERROR : Impossible to create file /P1.";
mkodt.DSCovComputeKO="## ++ ERROR : Problem during DSCovComputeM of /P1.";
mkodt.DSCovComputeNotFound="## ++ ERROR : Problem during Database generation (DSCovComputeM.exe not found), aborted...";
mkodt.FindImpactKO="## ++ ERROR : Problem during Impact Search of source/methods in /P1.";
mkodt.Reg="## ++ ERROR : Impossible to detect /P1 in the registry.";
mkodt.RegKey="## ++ ERROR : Impossible to get the key ( for the /P1) in the registry.";
mkodt.LoadNotFound="## ++ ERROR : Load to debug /P1 not found.";
mkodt.CantStartProc="## ++ ERROR : Failed to start ODT process with CATSTART:\n## ++ ERROR : /P1";
mkodt.KilledMaxTime="## ++ ERROR : /P1 => process killed in max_time.";
mkodt.KilledMaxTimeQuiet="## /P1   /P2 : Killed in max-time ";
mkodt.ODTKO="## ++ ERROR : /P1.sh : Shell script execution failed code /P2";
mkodt.ODTKOOutput="## ++ ERROR : see Output file in /P1";
mkodt.ODTKOQuiet="## /P1 : KO, rc = /P2";
mkodt.SettingsError="## ++ ERROR : Impossible to create the connection settings.";
mkodt.DSCovDeprec="## ++ ERROR : The -DSCov option is deprecated on the tool level... Use the -B MemoryCheck option.";
mkodt.InfoKillEnovEnvKO="## ++ ERROR : ENOVIA server coud not be killed.";
mkodt.InfoLaunchEnovEnvKO="## ++ ERROR : ENOVIA server could not be launched.";
mkodt.NoTypeMode="## ERROR : No TYPE CLIENT, SERVER, COMMON found in the ODT...\n## ERROR : Add this type in your shell-script...";
mkodt.Deprecatedoption="## ERROR : The /P1 option is deprecated. Use the /P2 option.\n";
mkodt.ConfigNotFound="## ERROR : Config /P1 does not exist in E4ALL catalog.";
mkodt.ConfigNotFound2="## ERROR : Official E4ALL configs are: /P1";
mkodt.ERRORNoCopy="## ERROR :  Failed to copy /P1 to /P2.";

// WARNING MESSAGES:

mkodt.KillWR="## WARNING : TAKillWRM.exe not found.";
mkodt.Optionc="## WARNING : Option -c is not available on /P1, doing normal run.";
mkodt.OptionOMLeaks="## WARNING : Option -OMLeaks is not available on /P1, doing normal run.";
mkodt.Debugger="## WARNING : Debugger /P1 is not available on /P2, doing normal run.";
mkodt.NoEnvForOMLeaks="## WARNING : /P1 were not found, doing normal run.";
mkodt.NoVarOMLeaks="## WARNING : The environment variable /P1 can not be set with the -OMLeaks option.";
mkodt.NoVarmoleFinder="## WARNING : The environment variable /P1 can not be set with the moleFinder or mipmip debugger.";
mkodt.DirNotW="## WARNING : Directory /P1 not writable.";
mkodt.NewADL_ODT_Var="## WARNING : /P1 is set to /P2";
mkodt.InfoOutput="## WARNING : Output will be lost\n## WARNING : Set the /P1 variable to a writable directory";
mkodt.ImpactNoODTKOFile="## WARNING : /P1 can not be created; DataBase will be incomplete.";
mkodt.NoDeletion="## WARNING : Impossible to delete /P1.";
mkodt.NoDeletionDirPert="## WARNING : Impossible to delete /P1 created by pertinence replay.";
mkodt.MaxTimeNotSet="## WARNING : max_time is not correctly set.";
mkodt.MaxTime60="## WARNING : max_time can not exceed 60 min";
mkodt.War_Reg="## ++ WARNING : Impossible to detect /P1 in the registry, doing normal run.";
mkodt.War_RegKey="## ++ WARNING : Impossible to get the key ( for the /P1) in the registry, doing normal run.";
mkodt.setcatenvNotFound="## WARNING : Failed to initialize the Environment : setcatenv not found in the given concatenation...";
mkodt.setcatenvNoFile="## WARNING : Failed to initialize the Environment : The environment file had not been generated by setcatenv...";
mkodt.setcatenvExecution="## WARNING : Failed to initialize the Environment : Problem during setcatenv execution...";
mkodt.chcatenvNotFound="## WARNING : Failed to modify /P1 : chcatenv not found in the given concatenation...";
mkodt.chcatenvExecution="## WARNING :  Failed to modify /P1 : Problem during chcatenv execution...";
mkodt.readcatenvNotFound="## WARNING : Failed to read /P1 : readcatenv not found in the given concatenation...";
mkodt.readcatenvExecution="## WARNING :  Failed to read /P1 : Problem during readcatenv execution...";
mkodt.CATSTARTNotFound="## WARNING : CATSTART not found in the given concatenation...";
mkodt.WSPackNotAvailable="## WARNING : Options -WSPack and -RestrictedProduct are not available on UNIX.";
mkodt.jreNotFound="## WARNING : Failed to get the JRE in the RunTime View.\n## WARNING :  If you need the java RunTime in your ODT(s), add the JavaRuntime framework in your prerequisites to get the current JRE.";
mkodt.DarwinjreNotFound="## WARNING : Failed to get the JRE from JavaROOT_PATH.";
mkodt.CantCreateFileWarning="## WARNING : Impossible to create file /P1.";

mkodt.LaunchODTNotFound="## WARNING : LaunchODT.sh not found in MkmkROOT_PATH.";
mkodt.NotPert="## WARNING : Your ODT is not pertinent on /P1\n## WARNING : It produces a 0 CC without any CNEXT module available ....";
mkodt.NotPertQuiet="## /P1 : Not pertinent";
mkodt.CMD_POST_ODT_KO="## WARNING : Problem during execution of the CMD_POST_ODT.";
mkodt.NoITEnovia="## WARNING : The IT ENOVIA environment is not defined.";
mkodt.NoBootstrapFile="## WARNING : ENOVIA BOOTSTRAP file is not generated.";
mkodt.NoITEnoviaToolsData="## WARNING : The IT ENOVIA environment is not defined in /P1.";
mkodt.NoOraEnv="## WARNING : The Oracle environment variables for IT ENOVIA are not defined.";
mkodt.NoConnSett="## WARNING :  Failed to copy connection settings.";
mkodt.killProc="## WARNING : The process /P1 is always running while the ODT is finished... killed.";
mkodt.MkodtOS_Runtime="## WARNING : Environmemt variable MkodtOS_Runtime is not be valuated.";
mkodt.ODTNotFound="## WARNING : ODT /P1 was not found in replayed Workspace.";
mkodt.NoCopy="## WARNING :  Failed to copy /P1 to /P2.";
mkodt.ConcatNotExist="## WARNING : Following concatenation path is not found: /P1";
mkodt.ICFileNotFound="## WARNING : /P1 file not found";
mkodt.ICLoadManager="## WARNING : problem during mkICModelLoadManager";
mkodt.SetNotBuilt="## ODT not Replayed on /P1, framework /P2 ID card set to not built";

mkodt.FileNotFound="## ++ ERROR : /P1 file not found";
mkodt.ErrLoadMetaDataFileODTTrace="## ++ ERROR during ODT metadata loading, ODT not Replayed";
mkodt.ErrLoadMetaDataFile="## ++ ERROR while loading metadata file: /P1";
mkodt.ErrMetaDataEmptyVersion="## ++ ERROR : Empty Version attribute detected in ODT metadata";
mkodt.ErrMetaDataEmptyFeatureID="## ++ ERROR : Empty feature ID detected in ODT metadata";
mkodt.ErrMetaDataEmptyFeatureGroup="## ++ ERROR : Empty feature Group detected in ODT metadata";
mkodt.ErrMetaDataUnknownTag="## ++ ERROR : unknown metadata tag: /P1";
mkodt.ErrMetaDataMultipleFeature="## ++ ERROR : Multiple definitions of [ /P1 / /P2 ] detected in ODT metadata";
mkodt.ErrMetaDataElevateValue="## ++ ERROR : Wrong privilege elevate value detected in ODT metadata";
mkodt.ErrMetaDataUnknowReplayState="## ++ ERROR : Replay value is unknown: /P1 - Possible values: YES / NO";
mkodt.ErrMetaDataUnknowDefaultReplayState="## ++ ERROR : Default replay value is unknown: /P1 - Possible values: YES / NO";
mkodt.ErrMetaDataElevateValue="## ++ ERROR : Empty OSList OSName detected in ODT metadata";
mkodt.ErrMetaDataMultipleOSName="## ++ ERROR : Multiple OSName /P1 detected in ODT metadata";
				
mkodt.ErrFeatureGroupNotFound="## ++ ERROR : Feature Group /P1 not found in RTV";
mkodt.ErrFeatureNotFoundInFeatureGroupFile="## ++ ERROR : Feature /P1 not found in feature group /P2";
mkodt.ErrInFeatureGroupFile="## ++ ERROR in feature group /P1";
mkodt.ErrNoFeatureID="## ++ ERROR : A feature ID is null in Feature Group /P1";
mkodt.ErrNoFeatureName="## ++ ERROR : A feature Name is null in Feature Group /P1";
mkodt.ErrNoFeatureAvailable="## ++ ERROR : A feature Available is null in Feature Group /P1";
mkodt.ErrNoFeatureOSName="## ++ ERROR : A feature OSName is null in Feature Group /P1";
mkodt.ErrNoFeatureOSAvailable="## ++ ERROR : A feature OS Available is null in Feature Group /P1";
mkodt.ErrUnknowAvailableState="## ++ ERROR : Available value is unknown: /P1";
mkodt.ErrFeatureGroupNotFound="## ++ ERROR in Feature Group /P1";
mkodt.ErrUnknownGroupFileTag="## ++ ERROR : unknown feature group file tag: /P1";
mkodt.ErrReadingGroupFile="## ++ ERROR while reading Feature Group file";
mkodt.ErrFeatureOSDefinedTwice="## ++ ERROR : feature OSName /P1 is already defined for feature /P2 in feature group file /P3";

mkodt.ErrODTNotReplayedFeature0="## ODT not replayed, the following features are not available on /P1:";
mkodt.ErrODTNotReplayedFeature1="          /P1./P2";

mkodt.ErrODTNotReplayedOnOS="## ODT not Replayed on Developer Request on OS RunTime : /P1";

mkodt.ErrPtrNULL="## ++ ERROR /P1 is NULL";
mkodt.ErrSourceEnvToFile = "## ERROR in SourceEnvToFile()";
mkodt.ErrLCCIDNotFound = "## ERROR: LCC ID not found, please update LaunchCommandServer";

mkodt.ErrInprocessNotServer = "## ++ ERROR INPROCESS ODT MUST BE TYPED AS SERVER ODT";
