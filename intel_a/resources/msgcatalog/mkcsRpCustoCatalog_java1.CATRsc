//*********************************************************************************************************************
// ERRORS SPECIAL QUALIFICATION [qualification.ErrorName]( Info < Warning < Error )
//***************
// ANDROID RULES
qualification.CallSuperFirst	="Warning";
qualification.CallSuperLast		="Warning";
qualification.ProtectLogD		="Warning";
qualification.ProtectLogV		="Warning";

// BASIC RULES
qualification.EmptyCatchBlock								="Warning";
qualification.EmptyIfStmt									="Warning";
qualification.EmptyWhileStmt								="Warning";
qualification.EmptyTryBlock									="Warning";
qualification.EmptyFinallyBlock								="Warning";
qualification.EmptySwitchStatements							="Warning";
qualification.JumbledIncrementer							="Warning";
qualification.ForLoopShouldBeWhileLoop						="Warning";
qualification.UnnecessaryConversionTemporary				="Warning";
qualification.OverrideBothEqualsAndHashcode					="Warning";
qualification.DoubleCheckedLocking							="Warning";
qualification.ReturnFromFinallyBlock						="Warning";
qualification.EmptySynchronizedBlock						="Warning";
qualification.UnnecessaryReturn								="Warning";
qualification.EmptyStaticInitializer						="Warning";
qualification.UnconditionalIfStatement						="Warning";
qualification.EmptyStatementNotInLoop						="Warning";
qualification.BooleanInstantiation							="Warning";
qualification.UnnecessaryFinalModifier						="Warning";
qualification.CollapsibleIfStatements						="Warning";
qualification.UselessOverridingMethod						="Warning";
qualification.ClassCastExceptionWithToArray					="Warning";
qualification.AvoidDecimalLiteralsInBigDecimalConstructor	="Warning";
qualification.UselessOperationOnImmutable					="Warning";
qualification.MisplacedNullCheck							="Warning";
qualification.UnusedNullCheckInEquals						="Warning";
qualification.AvoidThreadGroup								="Warning";
qualification.BrokenNullCheck								="Warning";
qualification.BigIntegerInstantiation						="Warning";
qualification.AvoidUsingOctalValues							="Warning";
qualification.AvoidUsingHardCodedIP							="Warning";
qualification.CheckResultSet								="Warning";
qualification.AvoidMultipleUnaryOperators					="Warning";
qualification.EmptyInitializer								="Warning";

// BASIC JSF RULES
qualification.DontNestJsfInJstlIteration	="Warning";

// BASIC JSP RULES
qualification.NoLongScripts				="Warning";
qualification.NoScriptlets				="Warning";
qualification.NoInlineStyleInformation	="Warning";
qualification.NoClassAttribute			="Warning";
qualification.NoJspForward				="Warning";
qualification.IframeMissingSrcAttribute	="Warning";
qualification.NoHtmlComments			="Warning";
qualification.DuplicateJspImports		="Warning";
qualification.JspEncoding				="Warning";

// BRACES RULES
qualification.IfStmtsMustUseBraces		="Warning";
qualification.WhileLoopsMustUseBraces	="Warning";
qualification.IfElseStmtsMustUseBraces	="Warning";
qualification.ForLoopsMustUseBraces		="Warning";

// CLONE RULES
qualification.ProperCloneImplementation				="Warning";
qualification.CloneThrowsCloneNotSupportedException	="Warning";
qualification.CloneMethodMustImplementCloneable		="Warning";

// CODE SIZE RULES
qualification.NPathComplexity			="Warning";
qualification.ExcessiveMethodLength		="Warning";
qualification.ExcessiveParameterList	="Warning";
qualification.ExcessiveClassLength		="Warning";
qualification.CyclomaticComplexity		="Warning";
qualification.ExcessivePublicCount		="Warning";
qualification.TooManyFields				="Warning";
qualification.NcssMethodCount			="Warning";
qualification.NcssTypeCount				="Warning";
qualification.NcssConstructorCount		="Warning";
qualification.TooManyMethods			="Warning";

// CONTROVERSIAL RULES
qualification.UnnecessaryConstructor		="Warning";
qualification.NullAssignment				="Warning";
qualification.OnlyOneReturn					="Warning";
qualification.UnusedModifier				="Warning";
qualification.AssignmentInOperand			="Warning";
qualification.AtLeastOneConstructor			="Warning";
qualification.DontImportSun					="Info";
qualification.SuspiciousOctalEscape			="Warning";
qualification.CallSuperInConstructor		="Warning";
qualification.UnnecessaryParentheses		="Warning";
qualification.DefaultPackage				="Warning";
qualification.BooleanInversion				="Warning";
qualification.DataflowAnomalyAnalysis		="Info";
qualification.AvoidFinalLocalVariable		="Warning";
qualification.AvoidAccessibilityAlteration	="Warning";

// COUPLING RULES
qualification.CouplingBetweenObjects		="Warning";
qualification.ExcessiveImports				="Warning";
qualification.LooseCoupling					="Warning";

// DESIGN RULES
qualification.UseSingleton									="Warning";
qualification.SimplifyBooleanReturns						="Warning";
qualification.SimplifyBooleanExpressions					="Warning";
qualification.SwitchStmtsShouldHaveDefault					="Warning";
qualification.AvoidDeeplyNestedIfStmts						="Warning";
qualification.AvoidReassigningParameters					="Warning";
qualification.SwitchDensity									="Warning";
qualification.ConstructorCallsOverridableMethod				="Warning";
qualification.AccessorClassGeneration						="Warning";
qualification.FinalFieldCouldBeStatic						="Warning";
qualification.CloseResource									="Warning";
qualification.NonStaticInitializer							="Warning";
qualification.DefaultLabelNotLastInSwitchStmt				="Warning";
qualification.NonCaseLabelInSwitchStatement					="Warning";
qualification.OptimizableToArrayCall						="Warning";
qualification.BadComparison									="Warning";
qualification.EqualsNull									="Warning";
qualification.ConfusingTernary								="Warning";
qualification.InstantiationToGetClass						="Info";
qualification.IdempotentOperations							="Warning";
qualification.SimpleDateFormatNeedsLocale					="Warning";
qualification.ImmutableField								="Warning";
qualification.UseLocaleWithCaseConversions					="Warning";
qualification.AvoidProtectedFieldInFinalClass				="Warning";
qualification.AssignmentToNonFinalStatic					="Warning";
qualification.MissingStaticMethodInNonInstantiatableClass	="Warning";
qualification.AvoidSynchronizedAtMethodLevel				="Warning";
qualification.MissingBreakInSwitch							="Warning";
qualification.UseNotifyAllInsteadOfNotify					="Warning";
qualification.AvoidInstanceofChecksInCatchClause			="Warning";
qualification.AbstractClassWithoutAbstractMethod			="Warning";
qualification.SimplifyConditional							="Warning";
qualification.CompareObjectsWithEquals						="Warning";
qualification.PositionLiteralsFirstInComparisons			="Warning";
qualification.UnnecessaryLocalBeforeReturn					="Warning";
qualification.NonThreadSafeSingleton						="Error";
qualification.UncommentedEmptyMethod						="Warning";
qualification.UncommentedEmptyConstructor					="Warning";
qualification.AvoidConstantsInterface						="Warning";
qualification.UnsynchronizedStaticDateFormatter				="Error";
qualification.PreserveStackTrace							="Warning";
qualification.UseCollectionIsEmpty							="Warning";
qualification.ClassWithOnlyPrivateConstructorsShouldBeFinal	="Error";
qualification.EmptyMethodInAbstractClassShouldBeAbstract	="Warning";
qualification.SingularField									="Warning";
qualification.ReturnEmptyArrayRatherThanNull				="Warning";
qualification.AbstractClassWithoutAnyMethod					="Error";
qualification.TooFewBranchesForASwitchStatement				="Warning";

// FINALIZER RULES
qualification.EmptyFinalizer					="Warning";
qualification.FinalizeOnlyCallsSuperFinalize	="Warning";
qualification.FinalizeOverloaded				="Warning";
qualification.FinalizeDoesNotCallSuperFinalize	="Warning";
qualification.FinalizeShouldBeProtected			="Warning";
qualification.AvoidCallingFinalize				="Warning";

// IMPORT RULES
qualification.DuplicateImports					="Info";
qualification.DontImportJavaLang				="Info";
qualification.UnusedImports						="Info";
qualification.ImportFromSamePackage				="Warning";
qualification.TooManyStaticImports				="Warning";

// J2EE RULES
qualification.UseProperClassLoader						="Warning";
qualification.MDBAndSessionBeanNamingConvention			="Info";
qualification.RemoteSessionInterfaceNamingConvention	="Info";
qualification.LocalInterfaceSessionNamingConvention		="Info";
qualification.LocalHomeNamingConvention					="Info";
qualification.RemoteInterfaceNamingConvention			="Info";
qualification.DoNotCallSystemExit						="Warning";
qualification.StaticEJBFieldShouldBeFinal				="Warning";
qualification.DoNotUseThreads							="Warning";

// JAVA BEAN RULES
qualification.BeanMembersShouldSerialize	="Warning";
qualification.MissingSerialVersionUID		="Warning";

// JUNIT RULES
qualification.JUnitStaticSuite						="Warning";
qualification.JUnitSpelling							="Warning";
qualification.JUnitAssertionsShouldIncludeMessage	="Warning";
qualification.JUnitTestsShouldIncludeAssert			="Warning";
qualification.TestClassWithoutTestCases				="Warning";
qualification.UnnecessaryBooleanAssertion			="Warning";
qualification.UseAssertEqualsInsteadOfAssertTrue	="Warning";
qualification.UseAssertSameInsteadOfAssertTrue		="Warning";
qualification.UseAssertNullInsteadOfAssertTrue		="Warning";
qualification.SimplifyBooleanAssertion				="Warning";

// JAKARTA COMMONS LOGGING RULES
qualification.UseCorrectExceptionLogging	="Warning";
qualification.ProperLogger					="Warning";

// JAVA LOGGING RULES
qualification.AvoidPrintStackTrace	="Warning";

// MIGRATION RULES
qualification.ReplaceVectorWithList					="Warning";
qualification.ReplaceHashtableWithMap				="Warning";
qualification.ReplaceEnumerationWithIterator		="Warning";
qualification.JUnit4TestShouldUseBeforeAnnotation	="Warning";
qualification.JUnit4TestShouldUseAfterAnnotation	="Warning";
qualification.JUnit4TestShouldUseTestAnnotation		="Warning";
qualification.JUnit4SuitesShouldUseSuiteAnnotation	="Warning";
qualification.JUnitUseExpected						="Warning";

// NAMING RULES
qualification.ShortVariable							="Warning";
qualification.LongVariable							="Warning";
qualification.ShortMethodName						="Warning";
qualification.AbstractNaming						="Warning";
qualification.AvoidDollarSigns						="Warning";
qualification.MethodWithSameNameAsEnclosingClass	="Warning";
qualification.SuspiciousHashcodeMethodName			="Warning";
qualification.SuspiciousConstantFieldName			="Warning";
qualification.AvoidFieldNameMatchingTypeName		="Warning";
qualification.AvoidFieldNameMatchingMethodName		="Warning";
qualification.NoPackage								="Warning";
qualification.PackageCase							="Warning";
qualification.MisleadingVariableName				="Warning";
qualification.BooleanGetMethodName					="Info";

// OPTIMIZATION RULES
qualification.LocalVariableCouldBeFinal			="Warning";
qualification.MethodArgumentCouldBeFinal		="Warning";
qualification.AvoidInstantiatingObjectsInLoops	="Warning";
qualification.UseArrayListInsteadOfVector		="Warning";
qualification.SimplifyStartsWith				="Warning";
qualification.UseStringBufferForStringAppends	="Warning";
qualification.UseArraysAsList					="Warning";
qualification.AvoidArrayLoops					="Warning";
qualification.UnnecessaryWrapperObjectCreation	="Warning";
qualification.AddEmptyString					="Warning";

// STRICT EXCEPTION RULES
qualification.AvoidCatchingThrowable					="Warning";
qualification.SignatureDeclareThrowsException			="Warning";
qualification.ExceptionAsFlowControl					="Warning";
qualification.AvoidCatchingNPE							="Warning";
qualification.AvoidThrowingRawExceptionTypes			="Warning";
qualification.AvoidThrowingNullPointerException			="Warning";
qualification.AvoidRethrowingException					="Warning";
qualification.DoNotExtendJavaLangError					="Warning";
qualification.DoNotThrowExceptionInFinally				="Info";
qualification.AvoidThrowingNewInstanceOfSameException	="Warning";

// STRING AND STRINGBUFFER RULES
qualification.AvoidDuplicateLiterals				="Warning";
qualification.StringInstantiation					="Warning";
qualification.StringToString						="Warning";
qualification.InefficientStringBuffering			="Warning";
qualification.UnnecessaryCaseChange					="Warning";
qualification.UseStringBufferLength					="Warning";
qualification.AppendCharacterWithChar				="Warning";
qualification.ConsecutiveLiteralAppends				="Warning";
qualification.UseIndexOfChar						="Warning";
qualification.InefficientEmptyStringCheck			="Warning";
qualification.InsufficientStringBufferDeclaration	="Warning";
qualification.UselessStringValueOf					="Warning";
qualification.StringBufferInstantiationWithChar		="Info";
qualification.UseEqualsToCompareStrings				="Error";
qualification.AvoidStringBufferField				="Warning";

// SECURITY CODE GUIDELINES
qualification.MethodReturnsInternalArray	="Warning";
qualification.ArrayIsStoredDirectly			="Warning";

// TYPE RESOLUTION RULES
qualification.LooseCoupling						="Warning";
qualification.CloneMethodMustImplementCloneable	="Warning";
qualification.UnusedImports						="Info";
qualification.SignatureDeclareThrowsException	="Warning";

// UNUSED CODE RULES
qualification.UnusedPrivateField	="Warning";
qualification.UnusedLocalVariable	="Warning";
qualification.UnusedPrivateMethod	="Warning";
qualification.UnusedFormalParameter	="Warning";

// ENOVIA MatrixOne Programming Guidelines
qualification.JavaClassMethodSizeCheck							="Warning";
qualification.StaticVariableMayBeDeclaredAsFinal				="Warning";
qualification.FinalVariableMustBeCapital						="Warning";
qualification.UseNonSynchronizedOverSynchronizedDataStructure	="Warning";
qualification.RemoveDebugStatements								="Warning";
qualification.AvoidUsingStringTokenizer							="Warning";
qualification.PreferrablyUseDomainObject						="Warning";
qualification.AvoidUseOfMQLCommandClass							="Warning";
qualification.JPONamingRule										="Warning";
qualification.JPOMethodTryCatchRule								="Warning";
qualification.AvoidStaticContextVariableRule					="Warning";
qualification.UseGetFrameContextRule							="Warning";
qualification.InitializeEmptyStringsRule						="Warning";
qualification.StringBufferConcatRule							="Warning";
qualification.SymbolicNameReference								="Warning";
qualification.StringManipulation								="Warning";
qualification.CheckVaultPatternInFindObjectsRule				="Warning";
qualification.CheckRelTypePatternsInGetRelatedObjectsRule		="Warning";
qualification.AvoidDBCallInsideLoopForTableColumnMethod			="Warning";
//*********************************************************************************************************************
// QUALIFICATION CLASS TEMPLATES AND COLORS
//***************

headerBG.Info		="green";
headerBG.Warning		="darkblue";
headerBG.Error		="darkred";
cellBG.Info			="lightgreen";
cellBG.Warning		="lightblue";
cellBG.Error		="lightcoral";
headerClass.template	="th.header/P1{background-color: /P2;}";
cellClass.template	="td.cell/P1{background-color: /P2;}";

//*********************************************************************************************************************
// CSS DEFAULT REPORT STYLE INFO [css.SpecialClassName]
//***************
css.html			="html{font:normal 90% verdana, arial, san serif;}";
css.body			="body{font-family: Arial;font-size:100%;background-color: white;}";
css.table			="table{border-width:1px; border-style:solid; border-color:black;}";
css.rowHeader		="td.rowHeader{background-color: white;border-width:1px;border-style:solid;border-color:grey;font-size: 11pt;text-align: left;font-family: Calibri;}";
css.headerCustom	="th.headerCustom{background-color: grey;border-width:1px;border-style:solid; border-color:black;font-size: 12pt; color: white;font-family: Arial;}";
css.cellCustom		="td.cellCustom{border-width:1px;border-style:solid; border-color:grey;font-size: 10pt; text-align: right; color: black;font-family: Arial;}";
css.cellNull		="td.cellNull{background-color: white;}";
css.cellTotal		="td.cellTotal{background-color: lightgrey;}";
css.AhrefError		="a.error:link {color: white; text-decoration: none} a.error:visited {color: white; text-decoration: none} a.error:hover {text-decoration: underline}";
css.AClassicLink		="a.classic:link {color: darkblue; text-decoration: none} a.classic:visited {color: darkred; text-decoration: none} a.classic:hover {text-decoration: underline}";
css.textarea		="textarea{font-family: Calibri;font-size: 11pt;}";
css.srcCode			="#srcCode{margin-left:3em;padding-left:3px;width:1000px;height:2000px;border:1px solid #666;overflow-y:scroll;font-family: Courier New;font-size: 10pt;}";
css.content			="#content{margin-left:5px;margin-right:5px;}";
css.tabsul			="#tabs ul{font: normal 14px arial, sans, sans-serif;-list-style-type: none;border-bottom: 1px solid gray;margin: 0;padding-left:0;padding-right:0;padding-bottom: 26px;}";
css.tabsulli		="#tabs ul li {display: inline;float: left;height: 24px;min-width:80px;text-align:center;padding:0;margin: 1px 0px 0px 0px;border: 1px solid gray;}";
css.tabsulliselect	="#tabs ul li.selected {border-bottom: 1px solid #fff;background-color: #fff;}";
css.tabsullia		="#tabs ul li a {float: left;color: #666;text-decoration: none;padding: 4px;text-align:center;background-color:#eee;min-width:80px;border-bottom: 1px solid gray;}";
css.tabsulliaselect	="#tabs ul li a.selected{color: #000;font-weight:bold;background-color: #fff;border-bottom: 1px solid #fff;}";
css.tabsulliahover	="#tabs ul li a:hover{color: #000;font-weight:bold;background-color: #fff;}";
css.textAreaWithLines	=".textAreaWithLines{display:block;margin:0;border:1px solid #666;border-right:none;background:#bbb;}";
css.boldAsLink		="b.boldAsLink{color: darkblue; text-decoration: underline;}";
css.iframe			="iframe{border:none;margin:5px;padding:0;}";
css.path			="p.path{background-color: lightgrey;font-family: Calibri;font-size: 12pt;color: darkblue;}";

//*********************************************************************************************************************
// ERRORS DESCRIPTION
//***************
description.tableRow	= "<tr><th class=\"header/P3 headerCustom\"><a href=\"/P2#/P3\" class=\"error\" target=\"Errors Definitions\">/P3</P1a></P1th><td class=\"rowheader\">/P4</P1td></P1tr>";

//*********************************************************************************************************************
// ERRORS DEFINITIONS
//***************
definition.tableRow	= "<tr><th class=\"header/P2 headerCustom\"><a name=\"/P2\">/P2</P1a></P1th><td class=\"rowheader\">/P3</P1td><td class=\"rowheader\">/P4</P1td></P1tr>";

//*********************************************************************************************************************
// ERRORS GENERAL
//***************
general.pageBegin			= "<html><head><link href=\"/P2\" rel=\"stylesheet\" media=\"all\" type=\"text/P1css\"/P1></P1head><body><p class=\"path\">/P3/P1/P4</P1p><table>";
general.pageEnd				= "</table></body></html>";
general.rowBeginHeaderName	= "<tr><td class=\"rowHeader\"></td><td class=\"rowHeader\">Total</td>";
general.rowBeginHeaderCount	= "<tr><td class=\"rowHeader\">Total</td>";
general.rowEnd				= "</tr>";
general.rowBeginLink		= "<tr><td class=\"rowHeader\"><a href=\"/P2/P1/P3\" class=\"classic\">/P2</P1a></P1td>";
general.errNameHeader		= "<th class=\"header/P2 headerCustom\">/P2</P1th>";
general.errCountHeader		= "<th class=\"header/P2 headerCustom\">/P3</P1th>";
general.errCountCell		= "<td class=\"cell/P2 cellCustom\">/P3</P1td>";
general.errCountNullCell	= "<td class=\"cellNull cellCustom\">0</P1td>";
general.errCountTotalCell	= "<td class=\"cellTotal cellCustom\">/P4</P1td>";

//*********************************************************************************************************************
// ERRORS REPORT DATA
//***************
errReportData.page		= "<html><frameset cols=\"30%,*\"><frame name=\"errorsTable\" src=\"/P2\"><frame name=\"sourceFile\" src=\"sourceFile.html\"></P1frameset></P1html>";
errTable.pageBegin		= "<html><head><link href=\"/P2\" rel=\"stylesheet\" media=\"all\" type=\"text/P1css\"/P1><script type=\"text/P1javascript\" language=\"javascript\" src=\"/P3\"></P1script></P1head><body><table>";

//*********************************************************************************************************************
// SOURCE HIGHLIGHT
//***************
srcHighlight.pageBegin		= "<html><head><link href=\"/P2\" rel=\"stylesheet\" media=\"all\" type=\"text/P1css\"/P1><script language=\"javascript\" src=\"/P3\"></P1script></P1head><body onload=\"createAndSetTextAreas('srcCode');\" onresize=\"resizeSrcCodeView();\"><p class=\"path\">/P4</P1p><textarea id=\"srcCode\" name=\"srcCode\" wrap=\"off\">";
srcHighlight.pageEnd		= "</P1textarea></P1body></P1html>";

//*********************************************************************************************************************
// Report Top Pages
//***************
topReport.index				= "<html><head><title>/P2</P1title></P1head><frameset rows=\"120,*\" frameborder=\"yes\" border=\"2\" framespacing=\"0\"><frame src=\"/P4\" name=\"topFrame\" scrolling=\"No\" noresize=\"noresize\" id=\"topFrame\" title=\"topFrame\"/P1><frame src=\"/P5_/P3.html\" name=\"mainFrame\" id=\"mainFrame\" title=\"mainFrame\"/P1></P1frameset></P1html>";
topReport.menu				= "<html><head><title>/P2</P1title><link rel=\"stylesheet\" type=\"text/P1css\" href=\"/P7/P1/P4_/P3.css\" /P1><script language=\"javascript\" src=\"/P7/P1/P5.js\"></P1script></P1head><body><div id=\"content\"><h1>/P2 Results Report</P1h1><div id=\"tabs\"><ul>/P6</P1ul></P1div></P1div></P1body></P1html>";
topReport.menuEltSelect		= "<li><a href=\"/P5_/P3.html\" class=\"selected\" target=\"mainFrame\" onclick=\"loadit(this)\" >/P3</P1a></P1li>";
topReport.menuEltNoSelect	= "<li><a href=\"/P5_/P3.html\" target=\"mainFrame\" onclick=\"loadit(this)\" >/P3</P1a></P1li>";



