// ERRORS DURING INITIALIZATION
Data.ErrCATInstallPath = "CATInstallPath non impostato\n";
Data.ErrCATInstallPathNoPresent = "CATInstallPath errato: Il file PRESENT non è stato trovato nel percorso di ricerca\n";
Data.ErrPresent        = "/p1 è danneggiato";
Data.ErrOpenPresent    = "Impossibile aprire /p1\n";
// ERRORS DURING COMMIT
Commit.ErrOpenSPK      ="Errore di commit - impossibile aprire il file /p1: /p2 ";
Commit.ErrNoControl    ="Errore di commit - file /p1 non trovato ";
Commit.ErrOpenControl  ="Errore di commit - impossibile aprire il file /p1: /p2";
// ERRORS DURING ROLLBACK
Rollback.ErrOpenSPK    ="Errore di rollback - Impossibile aprire il file /p1: /p2 ";
Rollback.ErrNoControl  ="Errore di rollback - file /p1 non trovato ";
Rollback.ErrOpenControl ="Errore di rollback - impossibile aprire il file /p1: /p2";
Rollback.ErrUpdatePresent="Errore di rollback - impossibile aggiornare il file /p1: /p2";
// ERRORS CHECK INTEGRITY
CheckIntegrity.ErrReinstallSPK="Alcuni componenti installati non sono al livello corretto.\nE' necessario reinstallare il Service Pack /p1.";
CheckIntegrityCAA2="Livello di build non valido per CAA2:/p1 - il livello corretto dovrebbe essere:/p2\n";
NeedInstallCAASPKn="E' installato il livello di Service Pack del codice /p1. E' necessario installare il livello CAA Service Pack /p2\n";
NeedCommitRollbackCAASPKn="Prima di installare CAA Service Pack /p1, eseguire il commit o il rollback di CAA Service Pack /p2\n";
NeedInstallCommitCAASPKn="Il livello del Service Pack del codice /p1 è installato e ne è stato eseguito il commit. Pertanto, è necessario reinstallare il livello di CAA Service Pack /p2 ed eseguirne il commit\n";
NeedCommitCAASPKn="E' installato il livello di Service Pack del codice /p1 e ne è stato eseguito il commit. Pertanto, ènecessario eseguire il commit del livello di CAA Service Pack /p2\n"; 
NeedRollbackCAASPKn="Il Service Pack del codice non è installato. E' necessario eseguire il rollback del livello CAA Service Pack /p1\n"; 
Need2RollbackCAASPKn="E' necessario ritornare al livello di CAA Service Pack /p1\n"; 
CommitInterditCAASPKn="E' installato il livello di Service Pack del codice /p1 e non ne è stato eseguito il commit. Pertanto, non è possibile eseguire il commit del livello di CAA Service Pack /p2\n";
// ERRORS CHECKPREREQS
CheckPrereqs.PrereqKONT ="E' richiesto Windows NT 4.0 con Service Pack 4 o Windows 2000 \n";
CheckPrereqs.PrereqKOWIN ="E' richiesto Windows 95, OEM Service Rilascio 2 o una versione successiva di Windows 95\n";
CheckPrereqsOS_OK="\nVerifica livello SO: OK \n";
CheckPrereqsOS_KO="\nVerifica livello SO: KO \n";
CheckProcessor_OK="Verifica processore: OK\n";
CheckProcessor_KO="Verifica processore: KO \nProcessore =/p1 Processore richiesto =/p2\n";
CheckProcessorKO_Registry="Verifica processore:  KO (impossibile leggere alcune chiavi di registro, probabilmente a causa di privilegi insufficienti)\n";
CheckMemory_OK="Verifica memoria: OK\n";
CheckMemory_KO="Verifica memoria: KO \nMemoria disponibile = /p1 byte - Memoria richiesta = /p2 byte";
CheckNetworkAdapter_OK ="Verifica adattatore di rete: OK\n"; 
CheckNetworkAdapter_KO ="Verifica adattatore di rete: KO\n";
CheckNetworkAdapter_1="Rete non trovata\n";
CheckNetworkAdapter_2="Impossibile accedere alla rete\n";
CheckNetworkAdapter_3="Rete non identificata\n";
CheckNetworkAdapter_254= "L'adattatore di rete è Ethernet\n";
CheckNetworkAdapter_255="L'adattatore di rete è TokenRing\n";
CheckNetworkAdapter_unknown="Adattatore di rete sconosciuto\n";
CheckNetworkAdapter_problem="Errore di rete = /p1\n";
CheckNetworkAdapter_Address="L'indirizzo di rete è /p1\n";
CheckOpenGL_OK ="Verifica OpenGL: OK\n"; 
CheckOpenGL_KO ="Verifica OpenGL: KO\n";
CheckOpenGLVersion = "Versione OpenGL: /p1./p2\n";
CheckOpenGLWrongVersion ="Versione OpenGL non corretta    : /p1./p2\n";
CheckOpenGLRequiredVersion = "Versione OpenGL richiesta : /p1./p2\n";
CheckOpenGLNotfound= "Libreria OpenGL32.dll non trovata\n";
CheckOpenGLProbleme= "Impossibile inizializzare l'ambiente grafico\n";
CheckOpenGLdefault= "Errore OpenGL = /p1\n";
CheckDLLs_OK="Verifica DLL: OK \n";
CheckDLLs_KO="Verifica DLL: KO \n";
CheckDLLs_probleme="DLL /p1 Versione=/p2 Richiesto=/p3";
CheckDLLs_Correct="DLL /p1  Versione corretta=/p2 \n";
GetLanguages.French="Francese";
GetLanguages.German="Tedesco";
GetLanguages.Italian="Italiano";
GetLanguages.Japanese="Giapponese";
GetLanguages.Chinese="Cinese Semplificato";
GetLanguages.Korean="Coreano";
