Option Explicit
Dim ObjWIPInterop                  As Object
'****************************************************************************************** *
' Script launch the WIP Creation Panel from Smarteam       									*	
'																							*
' Author: Dassault-Systemes																	*
' Called By: User defined tool/CATIA commands										 		*
'																							*
' (C) Copyright Dassault Systemes 2010   All Rights Reserved								*
'****************************************************************************************** *
'*  Script Purpose:                                                                         *
'*                                                                                          *
'*  1.  Checks whether CATIA is registered, Launched and Connected to SmarTeam 	            *
'*  2.  Checks whether the Root document is CATProduct                                      *
'*  3.  Checks whether the Assembly for WIP is having all the documents in CI or Released	*
'*      state	                                                                            *
'*  4.  If all above test are passed, the script launched WIP Panel                         *
'****************************************************************************************** *
'-----------------------------------------------------------------------------------------------------------------
' History:
' 
' 2010/01/06 DNG : Created
' 2010/01/08 DNG : Removed the GetDisplayName function. Now we will be using it from CATStiCreateWIP
'				   Check for environment variable added
' 2010/02/17 DNG : Exposed class and namespace changed from 'CATStiCreateWIP.CATStiWIPManager' to 'CATStiCreateWIP.m.csproj.CATStiWIPInterop'
' 2010/09/07 KXI : Modified Error Message
'-----------------------------------------------------------------------------------------------------------------

'-----------------------------------------------------------------------------------------------------------------
'ShowSmErrorMessage
'
'Display's NLS ERROR message
'-----------------------------------------------------------------------------------------------------------------
Sub ShowSmErrorMessage(SmSession As ISmSession, MessageCode As Integer, Params As ISmStrings)
On Error GoTo ExitShowSmErrorMessage

	Dim GUIServices As ISmGUIServices
	Dim SmButtons As Object
	Dim MESSCOMMON
	Dim Result

	MESSCOMMON = 1

	Set SmButtons = SmSession.NewVariantList()
	SmButtons.Value("0") = tmbOk
	Set GUIServices = SmSession.GetService("SmGUISrv.SmGUIServices")
    
	Result = GUIServices.GUIStore.DisplayMessage(MESSCOMMON, MessageCode, 2, 0, SmButtons, Params)	
	
ExitShowSmErrorMessage:	
    If( Err.Description <> Empty ) Then
        MsgBox "ShowSmErrorMessage: " + Err.Description
    End If
End Sub

'-----------------------------------------------------------------------------------------------------------------
'CheckStateOfAllDocuments
'
'Checks the state of all documents and its latest revisions, whether they are in CI/Release state
'If any of the document or its latest revision is not in CI/Release state function will return FALSE
'-----------------------------------------------------------------------------------------------------------------
Function CheckStateOfAllDocuments(SmSession As ISmSession, SmObject As ISmObject) As Boolean
On Error GoTo ExitCheckStateOfAllDocuments

    Dim SmObjectsToExpand           As ISmObjects
    Dim SmTempObject                As ISmObject
    Dim SmChildren                  As ISmObjects
    Dim SmChild                     As ISmObject
    Dim SmObjectRootLatestRev       As ISmObject
    
    Dim SmQueryDefinition           As ISmQueryDefinition
    Dim SmPrimaryIdenfier           As ISmClassAttributes
    Dim SmClassAttribute            As ISmClassAttribute
    Dim Params 		                As ISmStrings  
    
    Dim i                           As Long
    Dim Count                       As Long  
    Dim State                       As Integer
    Dim DisplayName                 As String
    Dim BoolGoodState               As Boolean
    Dim CountIncorrectState As Integer
    CountIncorrectState = 0


    Set Params = SmSession.NewSmStrings()
    CheckStateOfAllDocuments = False
    BoolGoodState = True

	' Get CATStiWIPManager Object
	'============================
	If(ObjWIPInterop Is Nothing ) Then
		Set ObjWIPInterop = CreateObject("CATStiCreateWIP.m.csproj.CATStiWIPInterop")
		If(ObjWIPInterop Is Nothing ) Then
			CheckStateOfAllDocuments = False
			Exit Function			
		End If
	End If
    
    ' Check the state of the Root Document
    '=====================================
    
    Set SmObjectRootLatestRev = SmObject.RetrieveLastRevisionObject(rfLatest)
    State = SmObjectRootLatestRev.Data.Value(NM_STATE)
    
    If State <> 1 And State <> 3 Then
        CountIncorrectState = CountIncorrectState + 1
        DisplayName = ObjWIPInterop.GetDisplayName(SmSession,SmObjectRootLatestRev)
        Params.Add DisplayName
        BoolGoodState = False
    End If
    
    ' Check the state of the Children Documents
    '==========================================
    
    Set SmObjectsToExpand = SmSession.ObjectStore.NewObjects
    SmObjectsToExpand.Add SmObject
    
    Set SmPrimaryIdenfier = SmObject.SmClass.PrimaryIdentifier
    Set SmQueryDefinition = SmSession.ObjectStore.NewQueryDefinition
    SmQueryDefinition.Roles.Add SmObject.SmClass.SuperClassId, "F"
    
    For i = 0 To SmPrimaryIdenfier.Count - 1
	    
        Set SmClassAttribute = SmPrimaryIdenfier.Item(i)
        SmQueryDefinition.Select.Add SmClassAttribute.Name, "F", False
        
    Next i    
    
    While SmObjectsToExpand.Count > 0  And CountIncorrectState <= 10
        
        Set SmTempObject = SmObjectsToExpand.Item(0)	        
        Set SmChildren = SmTempObject.RetrieveChildren(SmQueryDefinition)        
            
        Count = SmChildren.Count - 1

        For i = 0 To Count
     	    Set SmChild = SmChildren.Item(i).RetrieveLastRevisionObject(rfLatest)
            State = SmChild.Data.Value(NM_STATE)
            If State <> 1 And State <> 3 And CountIncorrectState < 10 Then
                CountIncorrectState = CountIncorrectState+1
                DisplayName = ObjWIPInterop.GetDisplayName(SmSession,SmChild)
                Params.Add DisplayName                
                BoolGoodState = False
            End If

            If CountIncorrectState >= 10 Then
                Params.Add "..."
                Exit For
            End If
            SmObjectsToExpand.Add SmChild
   
        Next i
    	SmObjectsToExpand.Remove 0
    Wend
                
                    
    If ( BoolGoodState = False )Then    
        'All documents or their latest revisions, are not in Check-in Or Released State Show Error and Exit
        '==================================================================================================
        
        ShowSmErrorMessage SmSession, 07909, Params
        GoTo ExitCheckStateOfAllDocuments
    End If
    
    CheckStateOfAllDocuments = True

ExitCheckStateOfAllDocuments:
    
    Set SmObjectsToExpand           = Nothing 
    Set SmTempObject                = Nothing 
    Set SmChildren                  = Nothing 
    Set SmChild                     = Nothing 
    Set SmObjectRootLatestRev       = Nothing 
    Set SmQueryDefinition           = Nothing 
    Set SmPrimaryIdenfier           = Nothing 
    Set SmClassAttribute            = Nothing 
    Set Params 		                = Nothing 
  
    If( BoolGoodState <> True ) Then
        CheckStateOfAllDocuments = False
    End If
    
    If ( Err.Description <> Empty ) Then
        MsgBox "CheckStateOfAllDocuments: " & Err.Description
    End If
    
End Function

'-----------------------------------------------------------------------------------------------------------------
'Extract_FileType
'
'Gets the document type on which the WIP creation command is launched
'-----------------------------------------------------------------------------------------------------------------
Function Extract_FileType(Fullpath As String) As String
On Error GoTo ExitExtract_FileType

    Dim Increment1 As Integer
    Dim Temp_String As String
    Dim Length As Integer
	Dim UserString As String
    UserString = Fullpath
    
    Length = Len(UserString)
    Increment1 = InStr(UserString, "\")
    
    While Increment1 > 0
        UserString = Right(UserString, Length - Increment1)
        Length = Len(UserString)
        Increment1 = InStr(UserString, "\")
    Wend
    
    Temp_String = UserString
    Length = Len(Temp_String)
    Increment1 = InStr(Temp_String, ".")
    
    While Increment1 <> 0
        UserString = Right(UserString, Length - Increment1)
        Length = Len(UserString)
        Increment1 = InStr(UserString, ".")
    Wend
    
    Increment1 = Len(Temp_String) - Len(UserString) - 1
    Extract_FileType = UserString
    
    Exit Function

ExitExtract_FileType:

    Extract_FileType = ""
    If ( Err.Description <> Empty ) Then
        MsgBox "Extract_FileType: " & Err.Description
    End If
    
End Function

'------------------------------------------------------------------------------------------------------------------
'CreateWIP
'Script Entry Point
'Responsible for validation of envrionment and the documents for launch for Create WIP Dialog
'
'------------------------------------------------------------------------------------------------------------------
Function CreateWIP(ApplHndl As Long,Sstr As String,FirstPar As Long,SecondPar As Long,ThirdPar As Long ) As Integer
On Error GoTo ExitCreateWIP
    Dim RecListIn 			        As Object 
    Dim FirstRec 			        As Object

    Dim SmObject                    As SmApplic.ISmObject
    Dim CurrentDatabase             As ISmDatabase
    Dim CurrentSession 		        As ISmSession
    
    Dim ObjCATIA                    As Object
    Dim ObjCAIEngine                As Object
	Dim ObjCATStiLargeAssembly      As Object
    
    Dim boolIsConnected             As Boolean
	Dim IsEnvSet					As Integer
    
    Dim STVersion                   As String
    Dim boolGoodSTVersion           As Boolean
    
    Dim boolAllDocumentsInGoodState As Boolean
    Dim FileType                    As String
    Dim ShortName                   As String
 
    Dim Params 	 	                As ISmStrings
    Set Params = Nothing
    
    Dim Error_Code                  As Integer
    Error_Code = Err_NONE

    
    'Convert RecordList parameters to SmRecordLists
    CONV_RecListToComRecordList FirstPar, RecListIn 
    CONV_RecListToComRecordList FirstPar, FirstRec

    Set CurrentSession = SCREXT_ObjectForInterface(ApplHndl)
    Set CurrentDatabase = CurrentSession.Database

    'Check if selected document is CATIA Product
    '============================================
    Set SmObject = CurrentSession.ObjectStore.ObjectFromData(FirstRec.GetRecord(0), True).Clone
    SmObject.Retrieve

    ShortName = SmObject.Data.ValueAsString(NM_CAD_REF_FILE_NAME)
    FileType = Extract_FileType(ShortName)

    If FileType <> "CATProduct"	Then
        'Large Assembly WIP creation can be launched only for CATProduct documents.
        '==========================================================================
	    ShowSmErrorMessage CurrentSession, 07908, Params
	    Error_Code = Err_GEN
	    GoTo ExitCreateWIP
    End If
           
    'Check that all documents are in CI/Release State
    '===============================================
    boolAllDocumentsInGoodState = CheckStateOfAllDocuments(CurrentSession,SmObject)
    
    If( boolAllDocumentsInGoodState = False) Then
        Error_Code = Err_GEN
	    GoTo ExitCreateWIP
    End If
     
    'Check if CATIA is launched and Connected to ST. If not show error and exit
    '==========================================================================
    On Error Resume Next
    Set ObjCATIA = GetObject(,"CATIA.Application")
	    
    If Not(ObjCATIA  Is Nothing) Then

		'Check if the evironment is set
		'=============================
		Set ObjCATStiLargeAssembly  = ObjCATIA.GetItem("CATStiLargeAssemblyInterop")
			
		IsEnvSet = ObjCATStiLargeAssembly.IsWIPCreationAllowed()

		If( IsEnvSet <= 0)Then			
			ShowSmErrorMessage CurrentSession, 07920, Params
			Exit Function
		End If

        Set ObjCAIEngine = ObjCATIA.GetItem("CAIEngine")

        If Not(ObjCAIEngine Is Nothing) Then  
				
            boolIsConnected = ObjCAIEngine.IsConnected()
            If( boolIsConnected = True ) Then
                'Launch WIP Panel
                '================
				If(	ObjWIPInterop Is Nothing ) Then 
					Set ObjWIPInterop = CreateObject("CATStiCreateWIP.m.csproj.CATStiWIPInterop")
				End If 

                ObjWIPInterop.CreateWIP CurrentSession, SmObject
                ObjCATIA.ActiveWindow.ActiveViewer.Reframe
                
            Else
                Error_Code = Err_GEN
                ShowSmErrorMessage CurrentSession, 07911, Params
            End If
        Else 
            Error_Code = Err_GEN
            ShowSmErrorMessage CurrentSession, 07912, Params
        End If
    Else
        Error_Code = Err_GEN
        ShowSmErrorMessage CurrentSession, 07910, Params
    End If

ExitCreateWIP:

    Set CurrentSession  = Nothing
    Set CurrentDatabase = Nothing
    Set SmObject        = Nothing
    Set ObjCATIA        = Nothing
    Set ObjCAIEngine    = Nothing
    Set Params          = Nothing
    
    If ( Err.Description <> Empty ) Then
        'MsgBox "CreateWIP: " & Err.Description
    End If
    
    If( Error_Code = Err_GEN ) Then
        CreateWIP=Err_GEN
    Else
        CreateWIP=Err_NONE
    End If
    
End Function

'------------------------------------------------------------------------------------------------------------------
