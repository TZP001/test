<?xml version="1.0" encoding="UTF-8"?>

<!-- @version: -->

<!-- Electrical Cable Database Batch Reporter DTD - version 1.0             -->
<!--     
 This is the DTD file that describes the format to be used for the
 XML file that is required input into the "ElecCableDBBatchReporter"  
 batch application.  This application is used to report on the data in
 in the electrical cable database for the Electrical Cable Route 
 Management (ECV) product. The electrical cable database is abbreviated 
 "ECDB" in the documentation below.
                                                                   
 Explanation of format:                                                 
                                                                        
 Every ECDB Batch Reporter XML file starts and ends with exactly one     
 ElecCableDBBatchReporter tag.  The ElecCableDBBatchReporter tag         
 contains a LoginInfo section, a PRCList section, and a ReportList section.

 The ElecCableDBBatchReporter element has an OutputDirectoryPath attribute
 specifying the directory where the generated reports should be stored and
 an optional OutputReportFormat attribute specifying the output file format
 for the generated reports. The OutputReportFormat attribute can have one 
 of the following values: TXT (Tab-delimited text file), CSV (Comma Separated 
 Values file), XLS (Excel file), XML (XML file). (NOTE: An XML report file
 can be validated against ReportTable.dtd, found in the runtime environment.)
 If no OutputReportFormat attribute is specified, TXT is considered the default.
 Here's an example:

  <ElecCableDBBatchReporter OutputDirectoryPath="D:\MySampleDirectory"
                            OutputReportFormat="CSV">

 The LoginInfo section contains the information necessary to log in to  
 the ENOVIA database and consists of LCAUser, LCAPwd, LCAHost, LCAPort,    
 and LCARole tags to allow you to provide the user ID, password,        
 host (or server) and role desired for log in.  The password should be  
 encrypted by implementing the "CATIUExitCrypt" interface.  See the     
 CAA documentation for further information.  If you don't implement     
 this interface, the passed in password is assumed to be encoded in an     
 algorithm similar to the one used by the PLM Batch architecture.       
 Therefore, using one of the PLM Batch application to connect to ENOVIA 
 and saving the resulting parameter file will yield an encoded password 
 that you can then pass in to this application.                         
 One occurrence of the LoginInfo section is required, containing        
 exactly one occurrence of each of the LCAUser, LCAPwd, LCARole, LCAPort,  
 and LCAHost tags.  Here is an example:   
                               
	<LoginInfo>	    
		<LCAUser>LogonID</LCAUser>
		<LCAPwd>EncryptedPassword</LCAPwd>
		<LCARole>RoleX</LCARole>
		<LCAHost>HostName</LCAHost>
		<LCAPort>9999</LCAPort>		
	</LoginInfo>

 There must be one PRCList section in the XML file.  This
 is a PRC-based application and the PRCList help define the PRCs to
 be processed (and also which work packages to process within them).  
 The PRCList section consists of a list of one or more PRCName elements.
 A PRCName element contains the name of a PRC to process. Here's an example
 with one PRC specified:
 
 	<PRCList>
		<PRCName>SamplePRC1</PRCName>
 	<PRCList>
  
 Here's an example of specifying 3 PRCs to report on:
 
 	<PRCList>
		<PRCName>SamplePRC1</PRCName>
		<PRCName>SamplePRC2</PRCName>
		<PRCName>SamplePRC3</PRCName>    
 	<PRCList>
  
 There must be one ReportList section in the XML file. The ReportList 
 element has 4 attributes (one for each report type) that help identify 
 which reports need to be generated. The names of the attributes are the
 available report types: CableLengthReport, KeyStationReport, 
 CablePullListReport_MainKeyStations, CablePullListReport_AllKeyStations. 
 If the value of an attribute is Yes, the corresponding report will be 
 generated for each specified PRC. If No, it will be skipped. This element
 does not contain any elements. Here's an example:
 
  <ReportList CableLengthReport="Yes" 
              KeyStationReport="No" 
              CablePullListReport_MainKeyStations="No"
              CablePullListReport_AllKeyStations="Yes" />   
 
 The following template will be used for the file names of the generated
 reports: "<OutputDirectoryPath>\<PRCName>_<ReportType>.<OutputReportFormat>,
 where <ReportType> is one of the attributes in the ReportList.
 
 The traces containing the information about the batch run, i.e. an error or 
 a successful completion, will be written out to STDOUT. If desired, the traces
 can be redirected to a file. 

-->

<!ELEMENT ElecCableDBBatchReporter (LoginInfo,PRCList,ReportList)>
<!ATTLIST ElecCableDBBatchReporter OutputDirectoryPath CDATA #REQUIRED>
<!ATTLIST ElecCableDBBatchReporter OutputReportFormat (TXT|CSV|XLS|XML) "TXT">

<!ELEMENT LoginInfo (LCAUser,LCAPwd,LCARole,LCAHost,LCAPort)>
<!ELEMENT LCAUser (#PCDATA)>
<!ELEMENT LCAPwd  (#PCDATA)>
<!ELEMENT LCARole (#PCDATA)>
<!ELEMENT LCAHost (#PCDATA)>
<!ELEMENT LCAPort (#PCDATA)>

<!ELEMENT PRCList (PRCName+)>
<!ELEMENT PRCName (#PCDATA)>
<!ATTLIST PRCName Effectivity CDATA "0">

<!ELEMENT ReportList EMPTY>
<!ATTLIST ReportList CableLengthReport (Yes|No) #REQUIRED>
<!ATTLIST ReportList KeyStationReport (Yes|No) #REQUIRED>
<!ATTLIST ReportList CablePullListReport_MainKeyStations (Yes|No) #REQUIRED>
<!ATTLIST ReportList CablePullListReport_AllKeyStations (Yes|No) #REQUIRED>
