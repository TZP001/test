<?xml version="1.0" encoding="UTF-8"?>

<!-- @version: -->

<!-- Electrical Cable Database Batch Importer DTD - version 1.0 -->
<!--     
 This is the DTD file that describes the format to be used for the
 XML file that is required input into the "ElecCableDBBatchImportWP"  
 batch application.  This application is used to import work package 
 data into the electrical cable database for the Electrical Cable Route 
 Management (ECV) product.  The electrical cable database is abbreviated 
 "ECDB" in the documentation below.
                                                                   
 Explanation of format:                                                 
                                                                        
 Every ECDB Batch Importer XML file starts and ends with exactly one     
 ElecCableDBBatchImporter tag.  The ElecCableDBBatchImporter tag         
 contains a LoginInfo section, one or more PRCRecord sections, and an   
 optional ReportDef section.                                            
                                                                          
 The LoginInfo section contains the information necessary to log in to  
 the ENOVIA database and consists of LCAUser, LCAPwd, LCAHost, LCAPort,    
 and LCARole tags to allow you to provide the user ID, password,        
 host (or server) and role desired for log in.  The password should be  
 encrypted by implementing the "CATIUExitCrypt" interface.  See the     
 CAA documentation for further information.  If you don't implement     
 this interface, the passed in password is assumed to be encoded in an     
 algorithm similar to the one used by the PLM Batch architecture.       
 Therefore, using one of the PLM Batch application to connect to ENOVIA 
 and saving the resulting parameter file will yield an encoded password 
 that you can then pass in to this application.                         
 One occurrence of the LoginInfo section is required, containing        
 exactly one occurrence of each of the LCAUser, LCAPwd, LCARole, LCAPort,  
 and LCAHost tags.  Here is an example:   
                               
	<LoginInfo>	    
		<LCAUser>LogonID</LCAUser>
		<LCAPwd>EncryptedPassword</LCAPwd>
		<LCARole>RoleX</LCARole>
		<LCAHost>HostName</LCAHost>
		<LCAPort>9999</LCAPort>		
	</LoginInfo>
                                                                        
 There must be one or more PRCRecord sections in the XML file.  This    
 is a PRC-based application and the PRCRecords help define the PRCs to  
 be processed (and also which work packages to process within them).  
 
 The PRCRecord element has an optional ProcessingMode attribute with 
 one of two values - QueryOnly or QueryAndImport.  QueryOnly means 
 that only a query will be done on the selected work packages of the 
 PRC with information being reported for those work packages.  
 QueryAndImport means that not only will work package information be 
 reported on, but those work packages will also be imported into the   
 ECDB.  QueryOnly is the default if no ProcessingMode attribute is 
 specified.
   
 A PRCRecord section consists of a PRCName element followed by zero or 
 one Filter elements that define a filter to be used in determining which 
 document revision objects of the PRC to process. Each filter element in 
 turn consists of zero or more DocumentIDFilter elements.  A 
 DocumentIDFilter element is simply a text string that describes one or 
 more document IDs that you would like processed.  The text string can 
 contain wildcards.  The DocumentIDFilter element itself has an optional 
 DocRevision attribute with a default value of "Latest", meaning use the 
 latest document revision for that document ID (i.e., the last revision 
 by creation date).  Otherwise, a specific document revision can be 
 specified, for example: "-AA".  Wildcards are not supported for the 
 DocRevision attribute.  Also, you cannot specify an explicit document  
 revision with a document ID filter containing wild cards.  If you try to  
 do this, then the document revision specified will be ignored and the 
 latest document revision will be used instead. 
 
 The filter element itself has a RevisionStatus attribute 
 describing the revision status to be used in filtering the PRC document 
 revision objects (with "All" as an option).  The other possible values are 
 In Work, UnderReview, Approved and Released.  However, these are 
 site-dependent and can be modified by the ENOVIA system administrator.  If 
 this is done, then the values to be used for RevisionStatus need to be  
 modified in the DTD definition below (except for "All", which means all 
 values).

 A Filter element also has a series of "ImportSaveStatus" attributes  
 (ImportSaveStatusNew, ImportSaveStatusOutOfDate, ImportSaveStatusUpToDate) 
 with possible values of "Yes" or "No" that, taken together, serve to define 
 the import save status to be used for the filter.
  
 The Filter element itself is totally optional, as is each aspect of the
 Filter element.  Here are the defaults that will be used by the
 "ElecCableDBBatchImportWP" batch application if these filter items
 aren't provided:
 
	RevisionStatus - All (i.e., all revision statuses will be accepted)
	ImportSaveStatus - ImportSaveStatusNew="Yes", 
	                   ImportSaveStatusOutOfDate="Yes",
	                   ImportSaveStatusUpToDate="No"  
	(only document revisions that are new or out of date in the ECDB will 
	 be processed)
	DocumentIDFilter - "*" (i.e., all document IDs will be processed)
 
 Here are some examples of PRCRecord sections with explanations:
 
 	<PRCRecord>
		<PRCName>SamplePRC1</PRCName>
		<Filter RevisionStatus="InWork" ImportSaveStatusNew="Yes" />
			<DocumentIDFilter>*ELD1*</DocumentIDFilter>
			<DocumentIDFilter DocRevision="-AA">SampleEquipmentWP1</DocumentIDFilter>
		</Filter>
	</PRCRecord>
              
 This PRC record requests the processing of all work packages of PRC 
 "SamplePRC1" whose revision status is "InWork", and who have not 
 already been imported into the ECDB (i.e., ImportSaveStatusNew="Yes"),
 and whose associated document IDs either contain the 
 substring "ELD1" (DocRevision is the "Latest") or are named 
 "SampleEquipmentWP1" (with document revision "-AA").  Since by default,
 the processing mode for this PRC is "QueryOnly", the work packages
 meeting the filter criteria will simply be reported on, but will not
 be imported into the ECDB. 
 
	<PRCRecord ProcessingMode="QueryAndImport">
		<PRCName>SamplePRC2</PRCName>
		<Filter ImportSaveStatusNew="Yes" ImportSaveStatusOutOfDate="Yes"
	            ImportSaveStatusUpToDate="Yes" />
	</PRCRecord>
     
 This PRC record will result in the reporting and importing of every 
 work package in PRC "SamplePRC2" with the latest document revision
 (by default, RevisionStatus is "All", DocumentIDFilter is "*", and 
 DocRevision is "Latest"). 
 
 	<PRCRecord ProcessingMode="QueryAndImport">
		<PRCName>SamplePRC3</PRCName>
	</PRCRecord>  
       
 This PRC record will result in the importing of every new or out of date 
 work package in PRC "SamplePRC3" (by default, RevisionStatus is "All",
 ImportSaveStatusNew is "Yes", ImportSaveStatusOutOfDate is "Yes",
 ImportSaveStatusUpToDate is "No", and DocumentIDFilter is "*").  
                                                                        
 The "ReportDef" element should occur zero or one time.  Its purpose is
 to specify a location and a file name for an output report that will
 be generated for this batch import run, plus a format for that report.  
 The ReportDef is defined by three attributes - DirectoryPath, FileName 
 and Format.  Even though the ReportDef element is optional, if you do 
 include one, then you must specify the first two attributes (the Format
 attribute is optional with a default value of Text).  The FileName should
 not include the file extension.  
 Here is a sample:
 
     <ReportDef DirectoryPath="D:\MySampleDirectory" 
                FileName="SampleFileName" 
                Format="CSV" />

 This statement would lead to an output report being generated in 
 "D:\MySampleDirectory\SampleFileName.<extension>", where <extension>
 is the file extension as implied by the input report format.  
 
 The output report would contain information about the batch run and the 
 results of trying to import the work packages into the ECDB.  If you 
 don't include a ReportDef element in your XML file (or this application 
 doesn't get to successfully parse the XML file), then this application 
 will write out all of its information to STDOUT and STDERR.                          
-->

<!ELEMENT ElecCableDBBatchImporter (LoginInfo,PRCRecord+,ReportDef?)>

<!ELEMENT LoginInfo (LCAUser,LCAPwd,LCARole,LCAHost,LCAPort)>
<!ELEMENT LCAUser (#PCDATA)>
<!ELEMENT LCAPwd  (#PCDATA)>
<!ELEMENT LCARole (#PCDATA)>
<!ELEMENT LCAHost (#PCDATA)>
<!ELEMENT LCAPort (#PCDATA)>

<!ELEMENT PRCRecord (PRCName,Filter?)>
<!ATTLIST PRCRecord ProcessingMode (QueryOnly|QueryAndImport) "QueryOnly">
<!ELEMENT PRCName (#PCDATA)>
<!ELEMENT Filter (EffectivityFilter?,DocumentIDFilter*)>
<!ATTLIST Filter RevisionStatus (InWork|UnderReview|Approved|Released|All) "All">
<!ATTLIST Filter ImportSaveStatusNew (Yes|No) #IMPLIED>
<!ATTLIST Filter ImportSaveStatusOutOfDate (Yes|No) #IMPLIED>
<!ATTLIST Filter ImportSaveStatusUpToDate (Yes|No) #IMPLIED>
<!ELEMENT EffectivityFilter (RangeEffectivity)>
<!ELEMENT RangeEffectivity (FromRangeEffectivity,ToRangeEffectivity)>
<!ELEMENT FromRangeEffectivity (#PCDATA)>
<!ELEMENT ToRangeEffectivity (#PCDATA)>
<!--
<!ELEMENT DateEffectivity (FromDateEffectivity,ToDateEffectivity)>
<!ELEMENT FromDateEffectivity (Date)>
<!ELEMENT ToDateEffectivity (Date)>
<!ELEMENT Date (Day,Month,Year)>
<!ELEMENT Day (#PCDATA)>
<!ELEMENT Month (#PCDATA)>
<!ELEMENT Year (#PCDATA)>
-->
<!ELEMENT DocumentIDFilter (#PCDATA)>
<!ATTLIST DocumentIDFilter DocRevision CDATA "Latest">

<!ELEMENT ReportDef EMPTY>
<!ATTLIST ReportDef DirectoryPath CDATA #IMPLIED>
<!ATTLIST ReportDef FileName CDATA #IMPLIED>
<!ATTLIST ReportDef Format (Text|CSV) "Text">
