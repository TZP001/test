//=====================================================================================
//                          COPYRIGHT DASSAULT SYSTEMES 2002
//-------------------------------------------------------------------------------------
// Messages for CGM geometric cleaner rules
//-------------------------------------------------------------------------------------

// CATGeoClnBoundingBox

BOB_1_CHK.Short		= "Bounding box checking failed.";
BOB_1_CHK.Error		= "Bounding box on /p1 checking failed.";
BOB_1_CLN_OK.Short	= "Bounding box cleaning successful.";
BOB_1_CLN_OK.Error	= "Bounding box cleaning on /p1 successful.";
BOB_1_CLN_KO.Short	= "Bounding box cleaning failed.";
BOB_1_CLN_KO.Error	= "Bounding box cleaning on /p1 failed.";

PSS_0_CHK.Short		= "Maxlimits Outside Support checking failed.";
PSS_0_CHK.Error		= "Maxlimits Outside Support on /p1 checking failed.";
PSS_0_CLN_OK.Short	= "Cleaning not implemented.";
PSS_0_CLN_OK.Error	= "Cleaning not implemented.";
PSS_0_CLN_KO.Short	= "Cleaning not implemented.";
PSS_0_CLN_KO.Error	= "Cleaning not implemented.";

PCE_1_CHK.Short		= "POEC curve in edge curve checking failed.";
PCE_1_CHK.Error		= "POEC curve in edge curve on /p1 checking failed.";
PCE_1_CLN_OK.Short	= "Cleaning not implemented.";
PCE_1_CLN_OK.Error	= "Cleaning not implemented.";
PCE_1_CLN_KO.Short	= "Cleaning not implemented.";
PCE_1_CLN_KO.Error	= "Cleaning not implemented.";

PPO_1_CHK.Short		= "POEC spec param inside spec curve limits checking failed.";
PPO_1_CHK.Error		= "POEC spec param inside spec curve limits on /p1 checking failed.";
PPO_1_CLN_OK.Short	= "Cleaning not implemented.";
PPO_1_CLN_OK.Error	= "Cleaning not implemented.";
PPO_1_CLN_KO.Short	= "Cleaning not implemented.";
PPO_1_CLN_KO.Error	= "Cleaning not implemented.";

CPO_1_CHK.Short		= "PCurve param inside curve limits checking failed.";
CPO_1_CHK.Error		= "PCurve param inside curve limits on /p1 checking failed.";
CPO_1_CLN_OK.Short	= "Cleaning not implemented.";
CPO_1_CLN_OK.Error	= "Cleaning not implemented.";
CPO_1_CLN_KO.Short	= "Cleaning not implemented.";
CPO_1_CLN_KO.Error	= "Cleaning not implemented.";

ICG_1_CHK.Short		= "IntCurve gap less than resolution checking failed.";
ICG_1_CHK.Error		= "IntCurve gap less than resolution on /p1 checking failed.";
ICG_1_CLN_OK.Short	= "Cleaning not implemented.";
ICG_1_CLN_OK.Error	= "Cleaning not implemented.";
ICG_1_CLN_KO.Short	= "Cleaning not implemented.";
ICG_1_CLN_KO.Error	= "Cleaning not implemented.";

CCC_0_CHK.Short		= "Curve continuity is at least C1 checking failed.";
CCC_0_CHK.Error		= "Curve continuity is at least C1 on /p1 checking failed.";
CCC_0_CLN_OK.Short	= "Cleaning not implemented.";
CCC_0_CLN_OK.Error	= "Cleaning not implemented.";
CCC_0_CLN_KO.Short	= "Cleaning not implemented.";
CCC_0_CLN_KO.Error	= "Cleaning not implemented.";

CCC_1_CHK.Short		= "Surface continuity is at least C1 checking failed.";
CCC_1_CHK.Error		= "Surface continuity is at least C1 on /p1 checking failed.";
CCC_1_CLN_OK.Short	= "Cleaning not implemented.";
CCC_1_CLN_OK.Error	= "Cleaning not implemented.";
CCC_1_CLN_KO.Short	= "Cleaning not implemented.";
CCC_1_CLN_KO.Error	= "Cleaning not implemented.";

SPM_1_CHK.Short		= "EdgeCurve SetOfPointsMappingLimits checking failed.";
SPM_1_CHK.Error		= "EdgeCurve SetOfPointsMappingLimits on /p1 checking failed.";
SPM_1_CLN_OK.Short	= "Cleaning not implemented.";
SPM_1_CLN_OK.Error	= "Cleaning not implemented.";
SPM_1_CLN_KO.Short	= "Cleaning not implemented.";
SPM_1_CLN_KO.Error	= "Cleaning not implemented.";

MPG_1_CHK.Short		= "Macro Point has a too big gap between its internal points.";
MPG_1_CHK.Error		= "Gap inside Macro Point on /p1 checking failed.";
MPG_1_CLN_OK.Short	= "Cleaning not implemented.";
MPG_1_CLN_OK.Error	= "Cleaning not implemented.";
MPG_1_CLN_KO.Short	= "Cleaning not implemented.";
MPG_1_CLN_KO.Error	= "Cleaning not implemented.";

ULO_1_CHK.Short		= "Curve Limits - Useful Outside Max checking failed.";
ULO_1_CHK.Error		= "Curve Limits - Useful Outside Max on /p1 checking failed.";
ULO_1_CLN_OK.Short	= "Cleaning not implemented.";
ULO_1_CLN_OK.Error	= "Cleaning not implemented.";
ULO_1_CLN_KO.Short	= "Cleaning not implemented.";
ULO_1_CLN_KO.Error	= "Cleaning not implemented.";

CGC_0_CHK.Short		= "Curve continuity checking failed.";
CGC_0_CHK.Error		= "Curve continuity on /p1 checking failed.";
CGC_0_CLN_OK.Short	= "Cleaning not implemented.";
CGC_0_CLN_OK.Error	= "Cleaning not implemented.";
CGC_0_CLN_KO.Short	= "Cleaning not implemented.";
CGC_0_CLN_KO.Error	= "Cleaning not implemented.";

CGC_1_CHK.Short		= "Surface continuity checking failed.";
CGC_1_CHK.Error		= "Surface continuity on /p1 checking failed.";
CGC_1_CLN_OK.Short	= "Cleaning not implemented.";
CGC_1_CLN_OK.Error	= "Cleaning not implemented.";
CGC_1_CLN_KO.Short	= "Cleaning not implemented.";
CGC_1_CLN_KO.Error	= "Cleaning not implemented.";

INF_1_CHK.Short		= "Plane/Line - Origin Inside ModelSize checking failed.";
INF_1_CHK.Error		= "Plane/Line - Origin Inside ModelSize on /p1 checking failed.";
INF_1_CLN_OK.Short	= "Cleaning not implemented.";
INF_1_CLN_OK.Error	= "Cleaning not implemented.";
INF_1_CLN_KO.Short	= "Cleaning not implemented.";
INF_1_CLN_KO.Error	= "Cleaning not implemented.";

INF_2_CHK.Short		= "Circle/Ellipse - MathRep Inside ModelInfinite checking failed.";
INF_2_CHK.Error		= "Circle/Ellipse - MathRep Inside ModelInfinite on /p1 checking failed.";
INF_2_CLN_OK.Short	= "Cleaning not implemented.";
INF_2_CLN_OK.Error	= "Cleaning not implemented.";
INF_2_CLN_KO.Short	= "Cleaning not implemented.";
INF_2_CLN_KO.Error	= "Cleaning not implemented.";

CSG_1_CHK.Short		= "Small Geometry - Curve Arc greater than resolution checking failed.";
CSG_1_CHK.Error		= "Small Geometry - Curve Arc greater than resolution on /p1 checking failed.";
CSG_1_CLN_OK.Short	= "Cleaning not implemented.";
CSG_1_CLN_OK.Error	= "Cleaning not implemented.";
CSG_1_CLN_KO.Short	= "Cleaning not implemented.";
CSG_1_CLN_KO.Error	= "Cleaning not implemented.";

CSG_2_CHK.Short		= "Small Geometry - Surface Patch greater than resolution checking failed.";
CSG_2_CHK.Error		= "Small Geometry - Surface Patch greater than resolution on /p1 checking failed.";
CSG_2_CLN_OK.Short	= "Cleaning not implemented.";
CSG_2_CLN_OK.Error	= "Cleaning not implemented.";
CSG_2_CLN_KO.Short	= "Cleaning not implemented.";
CSG_2_CLN_KO.Error	= "Cleaning not implemented.";

ECG_1_CHK.Short		= "EdgeCurve internal gap less than resolution checking failed.";
ECG_1_CHK.Error		= "EdgeCurve internal gap less than resolution on /p1 checking failed.";
ECG_1_CLN_OK.Short	= "Cleaning not implemented.";
ECG_1_CLN_OK.Error	= "Cleaning not implemented.";
ECG_1_CLN_KO.Short	= "Cleaning not implemented.";
ECG_1_CLN_KO.Error	= "Cleaning not implemented.";

ECG_2_CHK.Short		= "EdgeCurve Actual Gap Greater than 100R checking failed.";
ECG_2_CHK.Error		= "EdgeCurve Actual Gap Greater than 100R on /p1 checking failed.";
ECG_2_CLN_OK.Short	= "Cleaning not implemented.";
ECG_2_CLN_OK.Error	= "Cleaning not implemented.";
ECG_2_CLN_KO.Short	= "Cleaning not implemented.";
ECG_2_CLN_KO.Error	= "Cleaning not implemented.";

EIP_1_CHK.Short		= "The EdgeCurve Should Not Have Identical PCurves In The Same Tree checking failed.";
EIP_1_CHK.Error		= "The EdgeCurve Should Not Have Identical PCurves In The Same Tree on /p1 checking failed.";
EIP_1_CLN_OK.Short	= "Cleaning not implemented.";
EIP_1_CLN_OK.Error	= "Cleaning not implemented.";
EIP_1_CLN_KO.Short	= "Cleaning not implemented.";
EIP_1_CLN_KO.Error	= "Cleaning not implemented.";

INF_5_CHK.Short		= "Cylinder/Sphere/Cone/Torus - MathRep Inside ModelInfinite checking failed.";
INF_5_CHK.Error		= "Cylinder/Sphere/Cone/Torus - MathRep Inside ModelInfinite on /p1 checking failed.";
INF_5_CLN_OK.Short	= "Cleaning not implemented.";
INF_5_CLN_OK.Error	= "Cleaning not implemented.";
INF_5_CLN_KO.Short	= "Cleaning not implemented.";
INF_5_CLN_KO.Error	= "Cleaning not implemented.";
