RouteERR_01.Request = "Accessing data base";
RouteERR_01.Diagnostic = "Database internal error -- unable to access the data";
RouteERR_01.Advice = "Please notify data base administrator";
RouteERR_02.Request = "Connecting to data base";
RouteERR_02.Diagnostic = "Database fatal error";
RouteERR_02.Advice = "Please notify data base administrator";
RouteERR_03.Request = "Searching for new path";
RouteERR_03.Diagnostic = "Forbidden cableway element is found";
RouteERR_03.Advice = "Change the network or remove the cableway element from the forbidden request list";
RouteERR_04.Request = "Searching for new path";
RouteERR_04.Diagnostic = "The cableway element is not compatible with the cable -- Cable is: /p";
RouteERR_04.Advice = "Change the Cable Category attribute value in the cableway element to match with the cable's";
RouteERR_05.Request = "Searching for new path";
RouteERR_05.Diagnostic = "The cableway element is overloaded( percent fill + Growth factor is greater than 1)";
RouteERR_05.Advice = "Increase the size of the cableway element";
RouteERR_06.Request = "Searching for new path";
RouteERR_06.Diagnostic = "Not enough room for the cable to fit in the cableway element";
RouteERR_06.Advice = "Increase the size of the cableway element";
RouteERR_07.Request = "Searching for new path";
RouteERR_07.Diagnostic = "The bendradius of the cableway element exceeds the cable's requirement";
RouteERR_07.Advice = "Change the bendradius of the cableway element";
RouteERR_08.Request = "Searching for new path";
RouteERR_08.Diagnostic = "180 degree turn is found in the cableways connected to the cableway element";
RouteERR_08.Advice = "The connected cableways need to be in the opposite side of the cableway element";
RouteERR_09.Request = "Setting up for the search ";
RouteERR_09.Diagnostic = "Invalid From or To element -- Not allow to route from or to the middle of a subroute";
RouteERR_09.Advice = "Redefine the From or To element in the partial route";
RouteERR_10.Request = "Setting up for the search";
RouteERR_10.Diagnostic = "Invalid From or To element -- Not allow to route from and to the same subroute";
RouteERR_10.Advice = "Redefine the From or To element in the partial route";
RouteERR_11.Request = "Setting up for the search";
RouteERR_11.Diagnostic = "Shortest Path Search engine internal error";
RouteERR_11.Advice = "Redefine the From or To element in the route";
RouteERR_12.Request = "Setting up for the search";
RouteERR_12.Diagnostic = "Failed to initialize for the Shortest Path Search engine";
RouteERR_12.Advice = "Redefine the From or To element in the partial route";
RouteERR_13.Request = "Setting up for the search";
RouteERR_13.Diagnostic = "Failed to initialize the checker for the Shortest Path Search engine";
RouteERR_13.Advice = "Redefine the From or To element in the partial route";
RouteERR_14.Request = "Saving to data base";
RouteERR_14.Diagnostic = "Failed to save cable route length";
RouteERR_14.Advice = "Please notify data base administrator";
RouteERR_15.Request = "Saving to data base";
RouteERR_15.Diagnostic = "Unable to add partial route to the cable";
RouteERR_15.Advice = "Please notify data base administrator";
RouteERR_16.Request = "Retrieving the cable data";
RouteERR_16.Diagnostic = "Cable From extremity is not defined";
RouteERR_16.Advice = "Connect 3D network to equipment";
RouteERR_17.Request = "Setting up for the search";
RouteERR_17.Diagnostic = "Cable To extremity is not defined";
RouteERR_17.Advice = "Connect 3D network to equipment";
RouteERR_18.Request = "Saving to data base";
RouteERR_18.Diagnostic = "Failed to create cable route";
RouteERR_18.Advice = "Please notify data base administrator";
RouteERR_19.Request = "Reading the cable data";
RouteERR_19.Diagnostic = "Warning: cable size is zero";
RouteERR_19.Advice = "Set the External Diameter attribute of the reference cable";
RouteERR_20.Request = "Accessing internal data";
RouteERR_20.Diagnostic = "Failed to update the percent fill of the cableway element";
RouteERR_20.Advice = "Restart the Cable Route command";
RouteERR_21.Request = "Searching for new path";
RouteERR_21.Diagnostic = "Invalid From element defined for the route -- please see the following for more information";
RouteERR_21.Advice = "Check on the routing rules for the From element";
RouteERR_22.Request = "Searching for new path";
RouteERR_22.Diagnostic = "Invalid To element defined for the route";
RouteERR_22.Advice = "Check on the routing rules for the To element";
RouteERR_23.Request = "Searching for a path";
RouteERR_23.Diagnostic = "Unable to find a path with the recommended element";
RouteERR_23.Advice = "Change the network or remove the path element from the recommend list";
RouteERR_24.Request = "Searching for new path";
RouteERR_24.Diagnostic = "Only water tight cable can route to a water tight cable penetration";
RouteERR_24.Advice = "Change the Water Tightness attribute value in the cable to water tight";
RouteERR_25.Request = "Saving to data base";
RouteERR_25.Diagnostic = "Failed to save the time stamp for the cable route";
RouteERR_25.Advice = "Please notify data base administrator";
RouteERR_26.Request = "Saving to data base";
RouteERR_26.Diagnostic = "Failed to save the route status for the cable route";
RouteERR_26.Advice = "Please notify data base administrator";
RouteERR_27.Request = "Reading the internal data";
RouteERR_27.Diagnostic = "Warning: unable to retrieve data correctly -- the cable routing result may not correct";
RouteERR_27.Advice = "Reset the context and start the Cable Route command again";
RouteERR_28.Request = "Retrieving the cable data";
RouteERR_28.Diagnostic = "The cable's From/To data needs to be loaded prior to the operation";
RouteERR_28.Advice = "Load the data using the Load Cable From Database command on the panel before running the operation";
RouteERR_29.Request = "Validating the lock status of the cable";
RouteERR_29.Diagnostic = "The cable needs to be locked by the current user prior to the operation";
RouteERR_29.Advice = "Lock the cable using the Lock Cable Route command on the panel before running the operation";
RouteERR_30.Request = "Validating the cableway element";
RouteERR_30.Diagnostic = "The cable diameter exceeds the cableway element's size requirement";
RouteERR_30.Advice = "Increase the size of the cableway element or reduce the size of the cable";
RouteERR_31.Request = "Validating the cableway element";
RouteERR_31.Diagnostic = "Unable to find a block that fits the cable for the cable penetration";
RouteERR_31.Advice = "Increase the block size of the cable penetration or reduce the size of the cable";
RouteERR_32.Request = "Verifying for the path";
RouteERR_32.Diagnostic = "WARNING: Unable to check for the maximum cable length requirement -- maximum length data is not defined";
RouteERR_32.Advice = "Define the maximum length data for the cable and validate the route or turn off the Max Cable Length rule check";
RouteERR_33.Request = "Searching for new path";
RouteERR_33.Diagnostic = "The length of the estimated path exceeds the cable's maximum length requirement";
RouteERR_33.Advice = "Redefine the maximum length requirement or adjust the extra length data of the cable, or modify the cableway model";
RouteERR_34.Request = "Saving to data base";
RouteERR_34.Diagnostic = "Failed to save the validation status for the cable route";
RouteERR_34.Advice = "Please notify data base administrator";
RouteERR_35.Request = "Saving to data base";
RouteERR_35.Diagnostic = "Failed to save the validation info for the cable route";
RouteERR_35.Advice = "Please notify data base administrator";
RouteERR_36.Request = "Modifying the validation status.";
RouteERR_36.Diagnostic = "The cable needs to be fully routed before the validation status can be overridden.";
RouteERR_36.Advice = "Complete the cable route prior to the operation.";
RouteERR_37.Request = "Searching for new path";
RouteERR_37.Diagnostic = "The cableway element already exists in the cable route";
RouteERR_37.Advice = "Change the network or remove the cableway element from the cable route";
RouteERR_38.Request = "Verifying for the path";
RouteERR_38.Diagnostic = "WARNING: The external diameter of the selected cable is not defined";
RouteERR_38.Advice = "Define the external diameter data for the cable reference and validate the route";
RouteERR_39.Request = "Validating the lock status of the cable's Electrical Cable Routes subfolder";
RouteERR_39.Diagnostic = "The cable's Electrical Cable Routes subfolder in the VPMNavigator is locked by other user -- it cannot be modified by the current user";
RouteERR_39.Advice = "Unlock the cable's Electrical Cable Routes subfolder in the VPMNavigator before running the operation";
RouteERR_40.Request = "Validating the lock status of the cable's Electrical Cable Routes subfolder";
RouteERR_40.Diagnostic = "WARNING: The cable's Electrical Cable Routes subfolder in the VPMNavigator is locked by other user -- the cable route cannot be deleted by the current user";
RouteERR_40.Advice = "Unlock the cable's Electrical Cable Routes subfolder in the VPMNavigator before running the operation";
RouteERR_41.Request = "Searching for new path";
RouteERR_41.Diagnostic = "The bendradius of the connected cableway element(segment) exceeds the cable's requirement";
RouteERR_41.Advice = "Change the bendradius of the connected cableway element(segment)";
RouteERR_42.Request = "Checking for the cable route status";
RouteERR_42.Diagnostic = "The cable cannot be in Complete Route status for the operation";
RouteERR_42.Advice = "Delete the cable route completely or partially to change the route status";
RouteERR_43.Request = "Checking for the cable route status";
RouteERR_43.Diagnostic = "The cable has to be in Full Route or Complete Route status for the operation";
RouteERR_43.Advice = "Fully route the cable or complete the partial route cable to change the route status";
RouteERR_44.Request = "Checking for the cable route status";
RouteERR_44.Diagnostic = "The cable cannot be in Effectivity Inconsistent route status for the operation";
RouteERR_44.Advice = "Run the Validate Route function to fix the effectivity inconsistency of the cable and check the status";
RouteERR_45.Request = "Validating for the cable route";
RouteERR_45.Diagnostic = "Failed to fix the Effectivity Inconsistent route status for the cable";
RouteERR_45.Advice = "Try validate the cable route again, or use the Delete function to delete the cable route";
RC_HgrOverloaded.Request = "Checking the size of the cableway element";
RC_HgrOverloaded.Diagnostic = "The Percentage Fill plus the Growth Factor of the cableway element is greater than 1.0";
RC_HgrOverloaded.Advice = "Increase the size of the cableway element";
RC_InvalidRoute.Request = "Searching for cable in the cableway element";
RC_InvalidRoute.Diagnostic = "No cable is found in the cableway element";
RC_InvalidRoute.Advice = "Re-route the cable to the cableway element";
RC_CableCategory.Request = "Checking for the compatibility of the cableway element";
RC_CableCategory.Diagnostic = "The cableway element and the cable have different Cable Category attribute values -- Cable is: /p";
RC_CableCategory.Advice = "Set the Cable Category attribute to the same value for the cable and the cableway element";
RC_CableCategory2.Request = "Checking for the compatibility of the cableway element";
RC_CableCategory2.Diagnostic = "The connected cableway element(segment) of the node and the cable have different Cable Category attribute values";
RC_CableCategory2.Advice = "Set the Cable Category attribute to the same value for the cable and the connected cableway element(segment)";
RC_CableWaterTight.Request = "Checking for the type of the cableway element";
RC_CableWaterTight.Diagnostic = "Only water tight cable can route to a water tight cable penetration";
RC_CableWaterTight.Advice = "Set the tightness attribute of the reference cable to water tight";
RC_InvalidBendRadius.Request = "Validating the bendradius of the cableway element";
RC_InvalidBendRadius.Diagnostic = "The bendradius of the cableway element exceeds the cable's requirement";
RC_InvalidBendRadius.Advice = "Change the bendradius of the cableway element";
RC_InvalidBendRadius2.Request = "Validating the bendradius of the cableway element";
RC_InvalidBendRadius2.Diagnostic = "The bendradius of the connected cableway element(segment) exceeds the cable's requirement";
RC_InvalidBendRadius2.Advice = "Change the bendradius of the connected cableway element(segment)";
RC_MaxCableLen.Request = "Validating for the path";
RC_MaxCableLen.Diagnostic = "The length of the path exceeds the cable's maximum length requirement";
RC_MaxCableLen.Advice = "Redefine the maximum length requirement or adjust the extra length data of the cable, or modify the cableway model";
RC_SegCodeFail.Request = "Verifying for the path";
RC_SegCodeFail.Diagnostic = "Unable to fit the cable to the hanger with the segregation code requirements";
RC_SegCodeFail.Advice = "Increase the size of the hanger or use another path";
RC_180DegreeTurn.Request = "Validating the connected cableways(loft) of the cableway element";
RC_180DegreeTurn.Diagnostic = "WARNING: The path of the cable route may be invalid -- 180 degree turn is found in the cableways connected to the cableway element";
RC_180DegreeTurn.Advice = "Connect the cableways(loft) to the opposite side of the cableway element";
RC_WPOutOfContext.Request = "Checking for the cable route status";
RC_WPOutOfContext.Diagnostic = "The impacted workpackages(Cableway and Equipment) of the cable need to be in the current context for the Validate command to work correctly";
RC_WPOutOfContext.Advice = "Set the filter of the context to include all the impacted workpackages(Cableway and Equipment) of the cable";
RC_PartialRouteOnly.Request = "Checking for the cable route status";
RC_PartialRouteOnly.Diagnostic = "The cable has to be in Partial Route status for the operation";
RC_PartialRouteOnly.Advice = "Partially route the cable by using the Partial Route function to put the cable in Partial Route status";
RC_PartialOutOfDate.Request = "Checking for the cable route status";
RC_PartialOutOfDate.Diagnostic = "The cable needs to be validated and has to be in Partial Route status for the operation";
RC_PartialOutOfDate.Advice = "Validate the cable route using the Validate Route function and check the status";
RC_InternalError.Request = "/p";
RC_InternalError.Diagnostic = "/p";
RC_InternalError.Advice = "/p";
RC_HashTableError.Request = "Reading data from internal table";
RC_HashTableError.Diagnostic = "Unable to retrieve data from internal table";
RC_HashTableError.Advice = "Reset the context and start the Cable Route command again to re-initialize the internal data";
RC_SecurityCheckRoute.Request = "Validating security access for the route operation";
RC_SecurityCheckRoute.Diagnostic = "Operation security check failed -- the logon user is not authorized to run the cable route operation";
RC_SecurityCheckRoute.Advice = "Logon to the database with the authorized role or redefine the security process for the operation";
RC_SecurityCheckDelete.Request = "Validating security access for the delete operation";
RC_SecurityCheckDelete.Diagnostic = "Operation security check failed -- the logon user is not authorized to run the cable delete operation";
RC_SecurityCheckDelete.Advice = "Logon to the database with the authorized role or redefine the security process for the operation";
RC_SecurityCheckValidate.Request = "Validating security access for the validate operation";
RC_SecurityCheckValidate.Diagnostic = "Operation security check failed -- the logon user is not authorized to run the cable validate operation";
RC_SecurityCheckValidate.Advice = "Logon to the database with the authorized role or redefine the security process for the operation";
RC_SecurityCheckValidStatus.Request = "Validating security access for the update validation status operation";
RC_SecurityCheckValidStatus.Diagnostic = "Operation security check failed -- the logon user is not authorized to modify the cable's validation status";
RC_SecurityCheckValidStatus.Advice = "Logon to the database with the authorized role or redefine the security process for the operation";
RC_SecurityCheckCableItem.Request = "Validating security access for the cable route object";
RC_SecurityCheckCableItem.Diagnostic = "The logon user does not have the right to modify the cable route object(item instance) in the database";
RC_SecurityCheckCableItem.Advice = "Logon to the database with the authorized user ID and role.";
InitializeMsg1 = "Segment";
InitializeMsg2 = " Node1 - ";
InitializeMsg3 = " Node1 - Not Found ";
InitializeMsg4 = " , Node2 - ";
InitializeMsg5 = " , Node2 - Not Found ";
RouteErrorMsg1 = " , Workpackage: ";
RouteErrorMsg2 = " , Cableway element is: ";
RouteErrorMsg3 = " , Path = ";
Initial_CableOverloaded.Request = "Loading the cable data";
Initial_CableOverloaded.Diagnostic = "Warning: The route of the cable may contain cableway objects that are overloaded(percent fill + Growth factor is greater than 1)";
Initial_CableOverloaded.Advice = "Run the Validation command to validate the cable route";
LockERR_1.Request = "Performing lock operation.";
LockERR_1.Diagnostic = "The cable is already locked by the current user.";
LockERR_1.Advice = "No need to lock the cable again.";
LockERR_2.Request = "Performing lock operation.";
LockERR_2.Diagnostic = "The cable is locked by another user.";
LockERR_2.Advice = "The cable needs to be unlocked before it can be locked by the current user.";
LockERR_3.Request = "Performing lock operation.";
LockERR_3.Diagnostic = "The data in session is older than the one in the database.";
LockERR_3.Advice = "The data need to be refreshed -- reset the context and start the Cable Route Management command again.";
LockERR_4.Request = "Performing lock operation.";
LockERR_4.Diagnostic = "The cable is not lockable -- unable to access the cable data from the database.";
LockERR_4.Advice = "Please notify data base administrator.";
LockERR_5.Request = "Performing lock/unlock operation.";
LockERR_5.Diagnostic = "The current user does not have sufficient privileges for the operation.";
LockERR_5.Advice = "Logon to the database with the authorized role, or have the lock owner to remove the lock if the cable is locked.";
LockERR_6.Request = "Performing lock/unlock operation.";
LockERR_6.Diagnostic = "Unable to retrieve internal data for the cable correctly.";
LockERR_6.Advice = "Reset the context and start the Cable Route Management command again.";
LockERR_7.Request = "Performing lock/unlock operation.";
LockERR_7.Diagnostic = "The cable needs to be routed before it can be locked or unlocked.";
LockERR_7.Advice = "Route the cable before running the operation.";
LockERR_8.Request = "Performing lock operation.";
LockERR_8.Diagnostic = "Warning: Failed to lock the cable after the cable is routed.";
LockERR_8.Advice = "Use the Lock Cable Route command on the panel to lock the cable if it is needed.";
InitialERR_01.Request = "Initializing the internal data for the network";
InitialERR_01.Diagnostic = "The cableway element is not connected to any object. It is set to be unusable and is displayed as a cross('x') in the network";
InitialERR_01.Advice = "Connect the cableway element to the network in the 3D workpackage and re-import the workpackage again";
InitialERR_02.Request = "Initializing the internal data for the network";
InitialERR_02.Diagnostic = "Warning: unable to initialize the network data for the search engine -- the cable route command may not work correctly";
InitialERR_02.Advice = "Reset the context and start the Cable Route command again to re-initialize the internal and network data";
OutOfContextInfoNotAvailable = "Not available for Out Of Context cable";
NotAvailable = "Not available";


