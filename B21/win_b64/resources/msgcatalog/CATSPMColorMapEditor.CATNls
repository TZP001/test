// CATIA Version CXR2
// Copyright DASSAULT SYSTEMES 1999
// --------------------------------------------------------------------------------------
//	RESPONSABLE : Alain MITENNE (amm)
//	FUNCTION    : Ressource File (NLS)
//	USE         : AnalysisVisualization Object CATSPMColorMapEditor
// --------------------------------------------------------------------------------------

// *************************************************************************
//	Message to the translaters in German and Japenese :
//  Thanks to keep as many blank spaces as set in the different characters chains.
//  This is important as it modifies the location of the text in the windows...
// *************************************************************************


// * Title Dialog Box *
EditorTitle="Color Map Edition";

// * Caption *
Simple="<<Less";

// * Caption *
Advanced="More>>";

// * Caption *
LeftFrame.BasicFrame.Title="General Editing";

// * Label *
LeftFrame.BasicFrame.NbColors.Title="Number of colors: ";

// * Longelp *
LeftFrame.BasicFrame.ColorSpinner.LongHelp="Define the number of colors used to display the texture";

// * ColorMore *
LeftFrame.BasicFrame.ColorMore.Title="...";

// * Caption *
LeftFrame.ComputeDomainFrame.Title="Values";

// * Label *
LeftFrame.ComputeDomainFrame.OnlyOnFreeFaces.Title="On boundary";

// * Longelp *
LeftFrame.ComputeDomainFrame.OnlyOnFreeFaces.LongHelp="Only free faces values will be token into account";

// * Label *
LeftFrame.ComputeDomainFrame.OverAllModel.Title="Over all the model";

// * Longelp *
LeftFrame.ComputeDomainFrame.OverAllModel.LongHelp="All model values will be token into account";

// * Caption *
LeftFrame.SimpleFrame.Title="Simple Editing"; 

// * Label *
LeftFrame.SimpleFrame.ImposeMinCB.Title="Imposed min: ";

// * LongHelp *
LeftFrame.SimpleFrame.MinEditor.LongHelp="Define the maximum value for the blue color attribution";

// * Label *
LeftFrame.SimpleFrame.ImposeMaxCB.Title="Imposed max: ";

// * LongHelp *
LeftFrame.SimpleFrame.MaxEditor.LongHelp="Define the minimum value for the red color attribution";

// * Caption *
AdvancedFrame.Title="Advanced Editing";

// * Label * 
AdvancedFrame.Thresholds.RepartitionFrame.RepartitionModeLabel.Title="Distribution mode:";

// * Longelp *
AdvancedFrame.Thresholds.RepartitionFrame.RepartitionModeLabel.LongHelp="Define the distribution mode for interval values";

Linear="Linear";
Histogram="Histogram";
Log="Logarithmic";

// * Caption *
AdvancedFrame.Thresholds.BorderFrame.Title="Thresholds";

// * Longelp *
AdvancedFrame.Thresholds.BorderFrame.BorderList.LongHelp="Indicates the value and the user preference for each threshold";

// * Label *
AdvancedFrame.Thresholds.BorderFrame._2ndBorderFrame.BorderLabel.Title="Value: ";

// * Longelp *
AdvancedFrame.Thresholds.BorderFrame._2ndBorderFrame.BorderEditor.LongHelp="Define the value of the selected threshold";

// * Caption *
Value="Value";

// * Caption *
Position="Index";

// * Caption *
AdvancedFrame.DisplayFrame.Title="Display Format";

// * Label *
AdvancedFrame.DisplayFrame.ModeLabel.Title="Style: ";

// * Longelp *
AdvancedFrame.DisplayFrame.ComboFormat.LongHelp="Select the display format mode for all the values of the color map";

// * Longelp *
AdvancedFrame.DisplayFrame.FormatSpinner.LongHelp="Define the number of significant or decimal digits for all the values of the color map";

// * Caption *
DecimalPlaces="Number of decimal digits: ";

// * Caption *
Significant="Number of significant digits: ";

// * Caption *
Scientific="Scientific";

// * Caption *
Decimal="Decimal";

// * Caption *
Automatic="Automatic";

// * Caption *
ImposeItem="Impose";
ReleaseItem="Release";
EditValueItem="Edit...";

// * Caption *
Imposed="Imposed";

// Title
EditValueDlg="Edit Value";

// Title
ColorEditionDlg="Color Edition";

// * Caption *
EditColorValue.ColorEditionFrame.Title="Color Edition";

// * Label *
EditColorValue.ColorEditionFrame.SmoothIso.Title="Smooth";

// * Longelp *
EditColorValue.ColorEditionFrame.SmoothIso.LongHelp="Define if iso contours are smoothed or not";

// * Label *
EditColorValue.ColorEditionFrame.InverseColors.Title="Inverse";

// * Longelp *
EditColorValue.ColorEditionFrame.InverseColors.LongHelp="Inverse the colors scaling";

// * Label *
EditColorValue.ColorEditionFrame.Discrete.Title="Discrete";

// * Longelp *
EditColorValue.ColorEditionFrame.Discrete.LongHelp="Choose discrete color map";

// *Yes*
Yes="Yes";

// *No*
No="No";

