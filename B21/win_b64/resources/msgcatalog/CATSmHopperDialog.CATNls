// Revue LGK le 23/01/04

CATSmHopperDialog.Title = "Hopper";

ComboFrame.TypeCombo.ShortHelp="Hopper Type";

CanonicHopperFrame.ProfilesFrame.Title = "Profiles";

CanonicHopperFrame.ProfilesFrame.FirstProfileLabel.Title = "First profile:";
CanonicHopperFrame.ProfilesFrame.FirstProfileLabel.LongHelp = "Defines the first profile defining the hopper.";
CanonicHopperFrame.ProfilesFrame.FirstProfileSelector.ShortHelp = "First Profile";

CanonicHopperFrame.ProfilesFrame.SecondProfileLabel.Title = "Second profile:";
CanonicHopperFrame.ProfilesFrame.SecondProfileLabel.LongHelp = "Defines the second profile defining the hopper.";
CanonicHopperFrame.ProfilesFrame.SecondProfileSelector.ShortHelp = "Second Profile";

CanonicHopperFrame.PointsFrame.Title = "Opening line";

CanonicHopperFrame.PointsFrame.FirstPointLabel.Title = "First point:";
CanonicHopperFrame.PointsFrame.FirstPointLabel.LongHelp = "Defines the first point for the opening line.";
CanonicHopperFrame.PointsFrame.FirstPointSelector.LongHelp = "First point";

CanonicHopperFrame.PointsFrame.SecondPointLabel.Title = "Second point:";
CanonicHopperFrame.PointsFrame.SecondPointLabel.LongHelp = "Defines the second point for the opening line.";
CanonicHopperFrame.PointsFrame.SecondPointSelector.LongHelp = "Second point";

CanonicHopperFrame.DirectionsFrame.InvertFixedSideButton.Title = "Invert fixed side";
CanonicHopperFrame.DirectionsFrame.InvertFixedSideButton.LongHelp = "Inverts the side of the hopper that remains fixed when unfolding.";
CanonicHopperFrame.DirectionsFrame.InvertFixedSideButton.ShortHelp = "Inverts the fixed side";

CanonicHopperFrame.DirectionsFrame.InvertThickenButton.Title = "Invert material side";
CanonicHopperFrame.DirectionsFrame.InvertThickenButton.LongHelp = "Inverts the direction for thickening the hopper.";
CanonicHopperFrame.DirectionsFrame.InvertThickenButton.ShortHelp = "Inverts the material side";


CanonicHopper  = "Canonic Hopper";
SurfacicHopper = "Surfacic Hopper";

SurfacicHopperFrame.SurfacicHopperTypeFrame.Title="Surfacic hopper type";
SurfacicHopperFrame.SurfaceFrame.Title="Surface";
SurfacicHopperFrame.UnfoldPositionFrame.Title="Unfold position";
SurfacicHopperFrame.FixedEdgesFrame.Title="Fixed edges";
SurfacicHopperFrame.UnfoldOpeningCurvesFrame.Title="Unfold opening curves";

SurfacicHopperFrame.SurfacicHopperTypeFrame.ClassicTypeBtn.Title = "Classic";
SurfacicHopperFrame.SurfacicHopperTypeFrame.ConnectedTypeBtn.Title = "Connected";
SurfacicHopperFrame.SurfacicHopperTypeFrame.FixedEdgesTypeBtn.Title = "Fixed Edges";

SurfacicHopperFrame.SurfaceFrame.SurfaceLabel.Title = "Selection:";
SurfacicHopperFrame.SurfaceFrame.SurfaceLabel.LongHelp = "Defines the surface.";
SurfacicHopperFrame.SurfaceFrame.SurfaceSelector.LongHelp = "Surface";

SurfacicHopperFrame.SurfaceFrame.InvertThickenButton.Title = "Invert material side";
SurfacicHopperFrame.SurfaceFrame.InvertThickenButton.LongHelp = "Inverts the direction for thickening the hopper.";
SurfacicHopperFrame.SurfaceFrame.InvertThickenButton.ShortHelp = "Inverts the material side";

SurfacicHopperFrame.SurfaceFrame.NeutralFiberButton.Title = "Neutral fiber";
SurfacicHopperFrame.SurfaceFrame.NeutralFiberButton.LongHelp = "Indicates that the input surface is the neutral fiber of the hopper.";
SurfacicHopperFrame.SurfaceFrame.NeutralFiberButton.ShortHelp = "Sets surface as neutral fiber";


SurfacicHopperFrame.UnfoldPositionFrame.InvariantPointLabel.Title = "Invariant point";
SurfacicHopperFrame.UnfoldPositionFrame.InvariantPointLabel.LongHelp = "Defines the invariant point during the unfolding operation. The point lies on the surface and more precisely on the reference wire.";
SurfacicHopperFrame.UnfoldPositionFrame.InvariantPointSelector.LongHelp = "Invariant point";


SurfacicHopperFrame.UnfoldPositionFrame.ReferenceWireLabel.Title = "Reference wire";
SurfacicHopperFrame.UnfoldPositionFrame.ReferenceWireLabel.LongHelp = "Defines the wire used as the unfolding characteristic. The wire lies on the surface.";
SurfacicHopperFrame.UnfoldPositionFrame.ReferenceWireSelector.LongHelp = "Reference wire";

SurfacicHopperFrame.UnfoldPositionFrame.InvertFixedSideButton.Title = "Invert fixed side";
SurfacicHopperFrame.UnfoldPositionFrame.InvertFixedSideButton.LongHelp = "Inverts the fixed side for opening the hopper.";
SurfacicHopperFrame.UnfoldPositionFrame.InvertFixedSideButton.ShortHelp = "Inverts the fixed side";

SurfacicHopperFrame.FixedEdgesFrame.FixedEdgesLabel.Title = "Fixed edges";
SurfacicHopperFrame.FixedEdgesFrame.FixedEdgesLabel.LongHelp = "Defines the edges which are not deformed during unfolding";
SurfacicHopperFrame.FixedEdgesFrame.FixedEdgesLabel.ShortHelp = "Fixed edges";


SurfacicHopperFrame.UnfoldOpeningCurvesFrame.TearWireLabel.Title = "Tear wires";
SurfacicHopperFrame.UnfoldOpeningCurvesFrame.TearWireLabel.LongHelp = "Defines the wires that open the hopper if it is closed. The wires lie on the surface and create a continuous global wire.";
SurfacicHopperFrame.UnfoldOpeningCurvesFrame.TearWireSelector.LongHelp = "Tear wires";

Default = "Default";

TearWiresSelection = "Tear wires selection";

// Hopper Enhancement - 3dPLM
SurfacicHopperFrame.DisplayDistortionButton.Title = "Display distortions";
SurfacicHopperFrame.DisplayDistortionButton.LongHelp = "Displays the distortions if the input surface is not ruled.";
SurfacicHopperFrame.DisplayDistortionButton.ShortHelp = "SDisplays the distortions for not ruled surface";


