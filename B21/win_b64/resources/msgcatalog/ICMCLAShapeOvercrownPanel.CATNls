DialogBoxTitle = "Overcrowning";

FrameSelection.LongHelp  =
"               Selection
A set of surfaces can be selected.
These surfaces have not to be connected.";
LabelElement.Title       = "Element: ";
LabelElement.LongHelp    =
"A set of surfaces can be selected.
These surfaces have not to be connected.";
LabelElement.ShortHelp   = "Specifies the element to overcrown.";
TabPageOptions.Title     = "Options";
TabPageOptions.LongHelp  =
"The Options give you the capability to
- define your Reference or to use the automatically created one
- define the positions for the overcrown vectors
- display the overcrown vectors scaled
- display the Auto created Reference";
TabPageOptions.ShortHelp = "Options for Overcrown";

FrameReference.Title    = "Reference";
FrameReference.LongHelp =
"If a Reference is selected, all parameters of
the overcrowning function will be applied to this
surface instead of the internally computed one.";

CheckAuto.Title     = "Auto: ";
CheckAuto.LongHelp  =
"The Reference can be calculated automatically or it can be defined by
the user. The automatically created Reference is as small as possible.
The size of a user defined Reference depends on the selected element.
The result of overcrowning is not the same, it depends on the Reference."; 
CheckAuto.ShortHelp = "The Reference is created automatically ";

FrameCrowning.Title     = "Crowning";
FrameCrowning.LongHelp  =
"The overcrowning is defined by the positions
of the overcrown vectors and by their Distances";
LabelPosition.Title     = "Position: ";
LabelPosition.LongHelp  =
"The defined point is the position of an overcrown vector.
The point has to lie on Element, the surface to overcrown.";
LabelPosition.ShortHelp = "Position of an overcrown vector";
LabelDistance.Title     = "Distance: ";
LabelDistance.LongHelp  =
"Specifies the overcrowning distance. 
The vector placed at the overcrowning positions has a length
equal to this value multiplied with value of Scaling.
Distance is the overcrowning distance at the active overcrown vector.
One overcrown vector is the active one.";
LabelDistance.ShortHelp = "Crowning distance at the active overcrown vector";

FrameDisplay.Title     = "Display";
FrameDisplay.LongHelp  =
"Display parameters are 
- Scaling of the overcrown vectors 
- display of the Reference, if Auto created";
CheckScaling.Title     = "Scaling: ";
CheckScaling.LongHelp  =
"The overcrown vectors can be scaled for a better handling.
The overcrown result is not influenced by the Scaling value.";
CheckScaling.ShortHelp = "Factor for display of the vectors";
CheckPreview.Title = "Preview";
CheckPreview.LongHelp  =
"Display the Reference if Auto created.
A not Auto created Reference works with Hide/Show.";
CheckPreview.ShortHelp = "Display the Auto created Reference";

TabPageAdvanced.Title         = "Advanced";
TabPageAdvanced.LongHelp      =
"With Advanced you have additional Options for the result.
Edge defines an inner and an outer area for Overcrowning.
Edge continuity holds continuity to the Reference.
Min Order is the min order oft he result.
Shape defines a small or a more global modification.";
LabelEdge.Title               = "Edge: ";
LabelEdge.LongHelp            =
"This value divides the region of the Element into an inner and an
outer area. 0.1 is 10% and places the in-out-Limit 10% away from
the edge of Element. 10% of the size of Element.
An overcrown in the outer area does not hold G0 continuity.
An overcrown in the inner area holds the edge continuity.";
LabelEdge.ShortHelp           = "Distance for Edge continuity";
SpinnerEdge.LongHelp          =
"This value divides the region of the Element into an inner and an
outer area. 0.1 is 10% and places the in-out-Limit 10% away from
the edge of Element. 10% of the size of Element.
An overcrown in the outer area does not hold G0 continuity.
An overcrown in the inner area holds the edge continuity.";
SpinnerEdge.ShortHelp         = "Distance for Edge continuity";
LabelEdgeContinuity.Title     = "Edge Continuity: ";
LabelEdgeContinuity.LongHelp  =
"The required edge continuity to the Reference can be set. 
If the Reference surpasses the input data, the continuity is
held to an imaginary extension of the output result.
The continuity is only held for edges with
inner overcrown modifications.";
LabelEdgeContinuity.ShortHelp =
"Continuity for edges with inner overcrown modifications";
EdgeContinuity.Button_G0.LongHelp    =
"G0 continuity to the Reference is held for edges with inner overcrown
modification. If the Reference surpasses the input data, the continuity
is held to an imaginary extension of the output result.";
EdgeContinuity.Button_G0.ShortHelp   = "G0 to the Reference";
EdgeContinuity.Button_G1.LongHelp    =
"G1 continuity to the Reference is held for edges with inner overcrown
modification. If the Reference surpasses the input data, the continuity
is held to an imaginary extension of the output result.";
EdgeContinuity.Button_G1.ShortHelp   = "G1 to the Reference";
EdgeContinuity.Button_G2.LongHelp    =
"G2 continuity to the Reference is held for edges with inner overcrown
modification. If the Reference surpasses the input data, the continuity
is held to an imaginary extension of the output result.";
EdgeContinuity.Button_G2.ShortHelp   = "G2 to the Reference";

LabelMinOrder.Title           = "Min Order: ";
LabelMinOrder.LongHelp        =
"Minimum order of the resulting elements";
LabelMinOrder.ShortHelp       = "Min order of resulting elements";
SpinnerMinOrder.LongHelp      =
"Minimum order of the resulting elements";
SpinnerMinOrder.ShortHelp     = "Min order of resulting elements";

FrameShape.Title = "Shape";
FrameShape.LongHelp =
"The shape of the crowning can subsequently be modified. 
A small value causes a local and a large value a global modification. 
The crowning value is kept constant during this modification. 
With this value, an optimum control point distribution can be achieved.";
SliderShape.LongHelp   =
"A small value causes a local and a
large value a global modification";
SliderShape.ShortHelp  = "Shape value";
SpinnerShape.LongHelp  =
"A small value causes a local and a
large value a more global modification";
SpinnerShape.ShortHelp = "Shape value";


//???????????????????????????????????????????
Position = "Position";
Tangent = "Tangent";
Curvature = "Curvature";
