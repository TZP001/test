//---------------------------------------------------
// Ressource File for CATMmuCheckHeader Class
// En_US
//---------------------------------------------------
//
// == DatumCreationMode== 
CATMmuCheckHeader.CATShapeDesignDatumMode.Title             = "Datum 작성";
CATMmuCheckHeader.CATShapeDesignDatumMode.Help              = "Datum 피처를 작성합니다. 하나의 특징을 한 번 누르고, 모든 특징을 두 번 누릅니다.";
CATMmuCheckHeader.CATShapeDesignDatumMode.ShortHelp         = "Datum 작성";
CATMmuCheckHeader.CATShapeDesignDatumMode.LongHelp          = "Datum 피처를 작성합니다(이력 없음).";
//
//
// == Insert Mode== 
CATMmuCheckHeader.CATShapeDesignInsertMode.Title             = "삽입 모드";
CATMmuCheckHeader.CATShapeDesignInsertMode.Help              = "작성된 피처가 트리에 삽입되었습니다.";
CATMmuCheckHeader.CATShapeDesignInsertMode.ShortHelp         = "삽입 모드";
CATMmuCheckHeader.CATShapeDesignInsertMode.LongHelp          = 
"삽입 모드
그들의 기본 상위 옆의 스펙 트리에 피처가 자동으로
삽입됩니다.";
//
// == Add Graph== 
CATMmuCheckHeader.CATShapeDesignAddGraph.Title              = "히스토리 그래프 표시...";
CATMmuCheckHeader.CATShapeDesignAddGraph.Help               = "선택된 피처에 히스토리 그래프 표시";
CATMmuCheckHeader.CATShapeDesignAddGraph.ShortHelp          = "히스토리 그래프 표시";
CATMmuCheckHeader.CATShapeDesignAddGraph.LongHelp           = "선택된 피처에 히스토리 그래프를 표시합니다.";
//
// == Sketch List== 
CATMmuCheckHeader.CATMuiSketchListHdr.Title              = "매개변수화 분석...";
CATMmuCheckHeader.CATMuiSketchListHdr.Help               = "매개변수화 분석";
CATMmuCheckHeader.CATMuiSketchListHdr.ShortHelp          = "매개변수화 분석";
CATMmuCheckHeader.CATMuiSketchListHdr.LongHelp           = "매개변수화 분석";
//
// == Add Graph== 
CATMmuCheckHeader.CATShapeDesignAddGraph2.Title              = "히스토리 그래프 표시(디버그)...";
CATMmuCheckHeader.CATShapeDesignAddGraph2.Help               = "선택된 피처에 히스토리 그래프 표시";
CATMmuCheckHeader.CATShapeDesignAddGraph2.ShortHelp          = "히스토리 그래프 표시";
CATMmuCheckHeader.CATShapeDesignAddGraph2.LongHelp           = "선택된 피처에 히스토리 그래프를 표시합니다.";
//
// == Only Current Solid== 
CATMmuCheckHeader.CATOnlyCurrentSolidMode.Title              = "현재 작업한 솔리드만";
CATMmuCheckHeader.CATOnlyCurrentSolidMode.Help               = "현재 작업한 솔리드만 표시하는 옵션";
CATMmuCheckHeader.CATOnlyCurrentSolidMode.ShortHelp          = "현재 작업한 솔리드만";
CATMmuCheckHeader.CATOnlyCurrentSolidMode.LongHelp           = "현재 작업한 솔리드만 표시하는 옵션입니다. ";

// == Only Current Body== 
CATMmuCheckHeader.CATOnlyCurrentBodyMode.Title              = "현재 본문만";
CATMmuCheckHeader.CATOnlyCurrentBodyMode.Help               = "현재 본문만 표시하는 옵션";
CATMmuCheckHeader.CATOnlyCurrentBodyMode.ShortHelp          = "현재 본문만";
CATMmuCheckHeader.CATOnlyCurrentBodyMode.LongHelp           = "현재 본문만 표시하는 옵션입니다. ";

// == Only Current Body for second header == 
// see CATShapeDesignWorkbench\CATShapeDesignWorkbench.m\src\CATShapeDesignWorkbench.cpp
CATMmuCheckHeader.CATSdwOnlyCurrentBodyModeHdr.Title              = "현재 본문만";
CATMmuCheckHeader.CATSdwOnlyCurrentBodyModeHdr.Help               = "현재 본문만 표시하는 옵션";
CATMmuCheckHeader.CATSdwOnlyCurrentBodyModeHdr.ShortHelp          = "현재 본문만";
CATMmuCheckHeader.CATSdwOnlyCurrentBodyModeHdr.LongHelp           = "현재 본문만 표시하는 옵션입니다.";

// == Future Geometry== 
CATMmuCheckHeader.CATFutureGeometryMode.Title              = "현재 피처 다음에 있는 지오메트리 표시";
CATMmuCheckHeader.CATFutureGeometryMode.Help               = "현재 피처 다음에 있는 지오메트리를 표시하는 옵션";
CATMmuCheckHeader.CATFutureGeometryMode.ShortHelp          = "현재 피처 다음에 있는 지오메트리";
CATMmuCheckHeader.CATFutureGeometryMode.LongHelp           = "현재 피처 다음에 있는 지오메트리를 표시하는 옵션입니다.";

// == WSupport pickable == 
CATMmuCheckHeader.CATMmuGridFilterHdr.Title                = "작업 기준 선택";
CATMmuCheckHeader.CATMmuGridFilterHdr.Help                 = "작업 기준 선택 상태를 설정";
CATMmuCheckHeader.CATMmuGridFilterHdr.ShortHelp            = "작업 기준 선택 상태";
CATMmuCheckHeader.CATMmuGridFilterHdr.LongHelp             = "작업 기준 하위요소 선택 사용 가능 또는 사용 불가능하게 합니다. ";

// == SelectNotDrawnGeo== 
CATMmuCheckHeader.SelectNotDrawnGeo.Title                  = "병합된 피처 선택";
CATMmuCheckHeader.SelectNotDrawnGeo.Help                   = "병합된 피처 선택을 가능하게 하는 옵션";
CATMmuCheckHeader.SelectNotDrawnGeo.ShortHelp              = "병합된 피처 선택";
CATMmuCheckHeader.SelectNotDrawnGeo.LongHelp               = "병합된 피처 선택을 가능하게 하는 옵션입니다. ";

// == SelectFutureGeo== 
CATMmuCheckHeader.SelectFutureGeo.Title                    = "현재 이후 피처 선택";
CATMmuCheckHeader.SelectFutureGeo.Help                     = "현재 이후 피처 선택을 가능하게 하는 옵션";
CATMmuCheckHeader.SelectFutureGeo.ShortHelp                = "현재 이후 피처 선택";
CATMmuCheckHeader.SelectFutureGeo.LongHelp                 = "현재 이후 피처 선택을 가능하게 하는 옵션입니다. ";

// == SelectAggregatedGeo== 
CATMmuCheckHeader.SelectAggregatedGeo.Title                = "contextual 피처 선택";
CATMmuCheckHeader.SelectAggregatedGeo.Help                 = "contextual 피처 선택을 가능하게 하는 옵션";
CATMmuCheckHeader.SelectAggregatedGeo.ShortHelp            = "contextual 피처 선택";
CATMmuCheckHeader.SelectAggregatedGeo.LongHelp             = "contextual 피처 선택을 가능하게 하는 옵션입니다. ";

// == Select a branch edge == 
CATMmuCheckHeader.USTHBranch.Title       = "교차 모서리 선택";
CATMmuCheckHeader.USTHBranch.Help        = "교차 모서리 선택을 설정/해제하도록 전환";
CATMmuCheckHeader.USTHBranch.ShortHelp   = "교차 모서리 활성화";
CATMmuCheckHeader.USTHBranch.LongHelp    = "사용 가능한 경우, 모서리를 선택하면 교차 모서리가 작성됩니다.";

// == Select a C1(tangent) branch edge == 
CATMmuCheckHeader.USTHC1Branch.Title     = "접점 교차 모서리 선택";
CATMmuCheckHeader.USTHC1Branch.Help      = "접점 교차 모서리 선택을 설정/해제하도록 전환";
CATMmuCheckHeader.USTHC1Branch.ShortHelp = "접점 교차 모서리 활성화";
CATMmuCheckHeader.USTHC1Branch.LongHelp  = "사용 가능한 경우, 모서리를 선택하면 교차 모서리가 작성됩니다.";



// == CATMmuSwitchUpdateModeHdr == 
CATMmuCheckHeader.CATMmuSwitchUpdateModeHdr.Title         = "수동 갱신 모드";
CATMmuCheckHeader.CATMmuSwitchUpdateModeHdr.Help          = "수동 갱신 모드 사용";
CATMmuCheckHeader.CATMmuSwitchUpdateModeHdr.ShortHelp     = "수동 갱신 모드";
CATMmuCheckHeader.CATMmuSwitchUpdateModeHdr.LongHelp      = "수동 갱신 모드를 사용합니다.";


//
// ========================================================================================
// ========================================================================================
// ========================================================================================
// ========================================================================================
