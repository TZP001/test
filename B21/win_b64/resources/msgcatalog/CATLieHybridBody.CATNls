NewKnowledgeObjectInHybidBody.Text="Would you like the new /P1 to be appended to the /P2?";
NewKnowledgeObjectInHybidBody.Title="/P1 location";

KnowledgeObjectInHybidBodyMisplaced.MoveAutomaticPossible.Title="/P1 does not respect the linearity";
KnowledgeObjectInHybidBodyMisplaced.MoveAutomaticPossible.Text="The /P1 /P3 is breaking the ordering rules. \nClick Yes to move the /P1 so that it does not break ordering rules. \nClick No to move it outside the /P2 /P4 \nClick Cancel to go to the editor.";
KnowledgeObjectInHybidBodyMisplaced.MoveAutomaticNotPossible.Title="/P1 does not respect the linearity";
KnowledgeObjectInHybidBodyMisplaced.MoveAutomaticNotPossible.Text="The /P1 /P3 is breaking the ordering rules. \nClick OK to move it outside the /P2 /P4, \nClick Cancel to go to the editor.";

MoveKnowledgeObjectReport.Title="Move of /P3: Report";
MoveKnowledgeObjectReport.Text="The /P1 /P3 has been automatically moved /P5 the /P2 /P4";

MoveKnowledgeObjectFailedReport.Title="Move of /P3 failed";
MoveKnowledgeObjectFailedReport.Text="No appropriate location has been found. Unable to move the /P1 /P3 /P5 the /P2 /P4";

AutomaticMoveKnowledgeObjectFailedReport.Title="No location available for the /P1 /P3";
AutomaticMoveKnowledgeObjectFailedReport.Text="Unable to find a location for the /P1 /P3";

MoveToHybridBodyFailed.Title="Unable to move /P3";
MoveToHybridBodyFailed.Text="It is not allowed to move the /P1 /P3 to this location";

MorePrecisedPositionCanBeFound.Title="Move of /P3: better position might exist";
MorePrecisedPositionCanBeFound.Text="A better position might exist /P5 the /P2 /P4 for the /P1 /P3.";

AuthorizedPositionMightBeFound.Title="Move of /P3: authorized position might exist";
AuthorizedPositionMightBeFound.Text="An authorized position might exist /P5 the /P2 /P4 for the /P1 /P3.";


Relation="Relation";
Parameter="Parameter";
EqDim="Equivalent Dimensions";
Feature="Feature";

GeoObject="Geometrical Object";
OGS="Ordered Geometrical Set";
RSet="Relation Set";
PartBody="Part Body";
LinearContainer="Linear Container";

in="in";
after="after";
end="at the end of";







