// *--------------------------------------------*//
// *               Exemple de message           *//
// *  En_FR                                     *//
// *------------------------------------------- *//
// ERR_2000.Request    = "Vous avez additionne /p1 avec /p2";
// ERR_2000.Diagnostic = "Un des parametres est negatif";
// ERR_2000.Advice     = "Utilisez des parametres positifs";

// input error    
FLXMODELINTERNAL_ERR_101.Request    = "";
FLXMODELINTERNAL_ERR_101.Diagnostic = " Input error : no solution found ";
FLXMODELINTERNAL_ERR_101.Advice     = " ";
// length to small     
FLXMODELINTERNAL_ERR_102.Request    = "Routing in length mode ";
FLXMODELINTERNAL_ERR_102.Diagnostic = "Input length is less than minimum length ";
FLXMODELINTERNAL_ERR_102.Advice     = "Recompute with BEND option to know minimum length";
// NoSolution    
FLXMODELINTERNAL_ERR_201.Request    = "";
FLXMODELINTERNAL_ERR_201.Diagnostic = "curve computation failed ";
FLXMODELINTERNAL_ERR_201.Advice     = "Modify geometrical definition ";
// NoSolution    
FLXMODELINTERNAL_ERR_202.Request    = "";
FLXMODELINTERNAL_ERR_202.Diagnostic = "curve computation failed : invalid bend radius ";
FLXMODELINTERNAL_ERR_202.Advice     = "Modify geometrical definition or bend radius ";

//AXC COMPUTE in mode Constrained Length failed
FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH.Request    ="";
FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH.Diagnostic ="The New FLEX Algorithm could not find a solution. Since you are in Constrained Length Mode the Standard EHI Algorithm will not be launched ";
FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH.Advice	   ="Increase the accuracy and/or modify the inputs ";

//AXC Compute in mode Constrained Length found some stretched segment(s)
FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_STRETCHED.Request    ="";
//FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_STRETCHED.Diagnostic ="Length too small.";
//FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_STRETCHED.Advice	   ="Increase the lengths / modify the inputs / stretch less";
FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_STRETCHED.Diagnostic = "This modification imposes constraints too severe on /p1. The length modification exceeds the tolerance.";
FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_STRETCHED.Advice	   ="";

//FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_STRETCHED_SEVERAL.Request    ="";
//FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_STRETCHED_SEVERAL.Diagnostic = "The constraints are too tight.\nTherefore the lengths do not respect the tolerance ratio on the following internal sub-segment(s) : /p1";
//FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_STRETCHED_SEVERAL.Advice	   ="Increase the lengths of those sub-segmente or stretch them less";



//AXC try to use Constrained Length mode with ALGOV4
FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_ALGOV4.Request    ="";
FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_ALGOV4.Diagnostic ="The Constrained Length Mode is not compatible with the Standard EHI Algorithm.";
FLXMODELINTERNAL_ERR_CONSTRAINED_LENGTH_ALGOV4.Advice	   ="Please Modify mode or switch to FLEX algorithm";

// length to small en mode FLEX   
FLXMODELINTERNAL_ERR_LENGTH_FLEX.Request    = "Routing in length mode ";
FLXMODELINTERNAL_ERR_LENGTH_FLEX.Diagnostic = "No solution found";
FLXMODELINTERNAL_ERR_LENGTH_FLEX.Advice     = "Recompute with a bigger length";

//FIN AXC


// TDS - R17SP1 - Straight and Bend Mode error 
FLXMODELINTERNAL_ERR_BEND0.Request    = "";
FLXMODELINTERNAL_ERR_BEND0.Diagnostic = "Bend curve computation error ";
FLXMODELINTERNAL_ERR_BEND0.Advice     = "Modify routing points or decrease bend radius value ";
// 

// length to small en mode FLEX   
FLXMODELINTERNAL_ERR_FLEX_NOT_GRANTED.Request    = "Recomputing a bundle computed with FLEX with this algorithm not activated is impossible";
FLXMODELINTERNAL_ERR_FLEX_NOT_GRANTED.Diagnostic = "FLX or EHI licence not granted or FLEX not chosen as default algorithm in settings";
FLXMODELINTERNAL_ERR_FLEX_NOT_GRANTED.Advice     = "If you want to keep using FLX, aquire FLX and EHI licences and/or set FLEX as used algorithm /nor use recompute all segments command to switch to standrd algorithm";

