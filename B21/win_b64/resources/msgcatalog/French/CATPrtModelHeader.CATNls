//---------------------------------------------------
// Ressource File for CATPrtModelHeader Class
// En_US
//---------------------------------------------------

// == Pad == 

CATPrtModelHeader.PadHeader.Title="Extrusion...";
CATPrtModelHeader.PadHeader.Help="Crée une extrusion à partir d'un contour";
CATPrtModelHeader.PadHeader.LongHelp="Extrusion\nCrée une extrusion \nà partir d'un contour.";
CATPrtModelHeader.PadHeader.ShortHelp="Extrusion";


// == Pocket == 

CATPrtModelHeader.PocketHeader.Title="Poche...";
CATPrtModelHeader.PocketHeader.Help="Crée une poche en enlevant de la matière délimitée par un contour";
CATPrtModelHeader.PocketHeader.LongHelp="Poche\nCrée une poche en enlevant de la matière \ndélimitée par un contour.";
CATPrtModelHeader.PocketHeader.ShortHelp="Poche";


// == Hole == 

CATPrtModelHeader.HoleHeader.Title="Trou...";
CATPrtModelHeader.HoleHeader.Help="Crée un trou sur la face ou surface sélectionnée";
CATPrtModelHeader.HoleHeader.LongHelp="Trou\nCrée un trou sur la face \nou surface sélectionnée.";
CATPrtModelHeader.HoleHeader.ShortHelp="Trou";


// == Shaft == 

CATPrtModelHeader.ShaftHeader.Title="Révolution...";
CATPrtModelHeader.ShaftHeader.Help="Ajoute de la matière par extrusion d'un contour autour d'un axe";
CATPrtModelHeader.ShaftHeader.LongHelp="Révolution\nAjoute de la matière par extrusion \nd'un contour autour d'un axe.";
CATPrtModelHeader.ShaftHeader.ShortHelp="Révolution";


// == Groove == 

CATPrtModelHeader.GrooveHeader.Title="Gorge...";
CATPrtModelHeader.GrooveHeader.Help="Retire de la matière après extrusion d'un contour autour d'un axe";
CATPrtModelHeader.GrooveHeader.LongHelp="Gorge\nRetire de la matière après extrusion \nd'un contour autour d'un axe.";
CATPrtModelHeader.GrooveHeader.ShortHelp="Gorge";


// == Stiffener == 

CATPrtModelHeader.CreateStiffener.Title="Raidisseur...";
CATPrtModelHeader.CreateStiffener.Help="Ajoute de la matière à partir d'un contour";
CATPrtModelHeader.CreateStiffener.LongHelp="Raidisseur\nAjoute de la matière à partir d'un contour.";
CATPrtModelHeader.CreateStiffener.ShortHelp="Raidisseur";


// == Slot == 

CATPrtModelHeader.SlotHeader.Title="Rainure...";
CATPrtModelHeader.SlotHeader.Help="Retire de la matière par balayage d'un contour le long d'une courbe";
CATPrtModelHeader.SlotHeader.LongHelp="Rainure\nRetire de la matière par balayage d'un contour \nle long d'une courbe.";
CATPrtModelHeader.SlotHeader.ShortHelp="Rainure";


// == Rib == 

CATPrtModelHeader.CreateRib.Title="Nervure...";
CATPrtModelHeader.CreateRib.Help="Ajoute de la matière par balayage d'un contour le long d'une courbe";
CATPrtModelHeader.CreateRib.LongHelp="Nervure\nCrée une nervure";
CATPrtModelHeader.CreateRib.ShortHelp="Nervure";


// == Fillet == 

CATPrtModelHeader.FilletHeader.Title="Congé d'arête...";
CATPrtModelHeader.FilletHeader.Help="Crée un congé à partir d'une arête";
CATPrtModelHeader.FilletHeader.LongHelp="Congé d'arête\nCrée un congé à partir d'une arête.";
CATPrtModelHeader.FilletHeader.ShortHelp="Congé d'arête";


// == Fillet Variable == 

CATPrtModelHeader.FilletVariable.Title="Congé variable...";
CATPrtModelHeader.FilletVariable.Help="Crée un congé en utilisant des valeurs de rayon différentes";
CATPrtModelHeader.FilletVariable.LongHelp="Congé variable\nCrée un congé dont le rayon varie \nà chaque point sélectionné.";
CATPrtModelHeader.FilletVariable.ShortHelp="Congé variable";


// == Fillet Face == 

CATPrtModelHeader.FilletFace.Title="Congé face-face...";
CATPrtModelHeader.FilletFace.Help="Crée un congé à partir de deux faces";
CATPrtModelHeader.FilletFace.LongHelp="Congé face-face\nCrée un congé en sélectionnant deux faces.";
CATPrtModelHeader.FilletFace.ShortHelp="Congé face-face";


// == Fillet Tritangent == 

CATPrtModelHeader.FilletTritangent.Title="Congé tritangent...";
CATPrtModelHeader.FilletTritangent.Help="Crée un congé en retirant une face";
CATPrtModelHeader.FilletTritangent.LongHelp="Congé tritangent\nCrée un congé en indiquant \ntrois faces à utiliser.";
CATPrtModelHeader.FilletTritangent.ShortHelp="Congé tritangent";

// == Chordal Fillet == 

CATPrtModelHeader.ChordalFillet.Title="Longueur de corde...";
CATPrtModelHeader.ChordalFillet.Help="Créer un congé de raccordement en spécifiant la largeur du ruban du congé.";
CATPrtModelHeader.ChordalFillet.LongHelp="Longueur de corde\nCrée une longueur de corde \nen définissant la largeur du congé à chaque point sélectionné.";
CATPrtModelHeader.ChordalFillet.ShortHelp="Longueur de corde";

// == Chamfer == 

CATPrtModelHeader.ChamferHeader.Title="Chanfrein...";
CATPrtModelHeader.ChamferHeader.Help="Chanfreine la pièce";
CATPrtModelHeader.ChamferHeader.LongHelp="Chanfrein\nCrée un chanfrein.";
CATPrtModelHeader.ChamferHeader.ShortHelp="Chanfrein";


// == Draft == 

CATPrtModelHeader.DraftHeader.Title="Dépouille...";
CATPrtModelHeader.DraftHeader.Help="Crée un angle de dépouille";
CATPrtModelHeader.DraftHeader.LongHelp="Dépouille\nCrée un angle de dépouille.";
CATPrtModelHeader.DraftHeader.ShortHelp="Dépouille";


// == Draft Reflect == 

CATPrtModelHeader.DraftReflect.Title="Dépouille ligne de reflet...";
CATPrtModelHeader.DraftReflect.Help="Crée un angle de dépouille à partir d'une ligne de reflet";
CATPrtModelHeader.DraftReflect.LongHelp="Dépouille à partir d'une ligne de reflet \nCrée un angle de dépouille \nà partir d'une ligne de reflet.";
CATPrtModelHeader.DraftReflect.ShortHelp="Dépouille à partir d'une ligne de reflet";


// == Draft Variable == 

CATPrtModelHeader.DraftVariable.Title="Dépouille variable...";
CATPrtModelHeader.DraftVariable.Help="Crée un angle de dépouille variable.";
CATPrtModelHeader.DraftVariable.LongHelp="Dépouille variable\nCrée un angle de dépouille variable.";
CATPrtModelHeader.DraftVariable.ShortHelp="Dépouille variable";


// == Advanced Draft BothSides == 

CATPrtModelHeader.DraftBothSides.Title="Dépouille à deux côtés...";
CATPrtModelHeader.DraftBothSides.Help="Crée une dépouille à deux côtés.";
CATPrtModelHeader.DraftBothSides.LongHelp="Dépouille à deux côtés\nCrée une dépouille à deux côtés.";
CATPrtModelHeader.DraftBothSides.ShortHelp="Dépouille à deux côtés.";

// == Draft Both Sides (new) == 
CATPrtModelHeader.DraftBothSidesNew.Title="Dépouille à deux côtés...";
CATPrtModelHeader.DraftBothSidesNew.Help="Crée une dépouille à deux côtés.";
CATPrtModelHeader.DraftBothSidesNew.LongHelp="Dépouille à deux côtés\nCrée une dépouille à deux côtés.";
CATPrtModelHeader.DraftBothSidesNew.ShortHelp="Dépouille à deux côtés";

// == Draft Analysis == 

CATPrtModelHeader.DraftAnalysisHeader.Title = "Analyse de dépouille";
CATPrtModelHeader.DraftAnalysisHeader.Help = "Analyse la démoulabilité de l'élément sélectionné";
CATPrtModelHeader.DraftAnalysisHeader.LongHelp = 
"Analyse de dépouille
Applique une couleur sur les corps de pièce ou les surfaces en fonction de l'angle entre la normale à la surface et la direction de dépouille en un point donné.";
CATPrtModelHeader.DraftAnalysisHeader.ShortHelp = "Analyse de dépouille";


// == Gaussian Curvature == 

CATPrtModelHeader.GaussCurvatureHeader.Title = "Analyse de courbure";
CATPrtModelHeader.GaussCurvatureHeader.Help = "Analyse la courbure gaussienne de l'élément sélectionné";
CATPrtModelHeader.GaussCurvatureHeader.LongHelp = 
"Analyse de courbure gaussienne
Applique une couleur sur les corps de pièce ou les surfaces en                                 fonction de la valeur de courbure en chaque point de la surface.";

CATPrtModelHeader.GaussCurvatureHeader.ShortHelp = "Analyse de courbure";


// == Thread/Tap analysis == 

CATPrtModelHeader.ThreadAnalysisHeader.Title = "Analyse de taraudage - filetage";
CATPrtModelHeader.ThreadAnalysisHeader.Help = "Analyse tous les taraudages et filetages de la pièce.";
CATPrtModelHeader.ThreadAnalysisHeader.LongHelp ="Analyse tous les taraudages et filetages de la pièce \nPossibilité d'affichage de la géométrie symbolique  \nPossibilité d'affichage des valeurs numériques caractéristiques.";
CATPrtModelHeader.ThreadAnalysisHeader.ShortHelp = "Analyse de taraudage - filetage";


// == Shell == 

CATPrtModelHeader.ShellHeader.Title="Coque...";
CATPrtModelHeader.ShellHeader.Help="Crée une coque en retirant une ou plusieurs faces";
CATPrtModelHeader.ShellHeader.LongHelp="Coque\nCrée une coque en retirant une \nou plusieurs faces.";
CATPrtModelHeader.ShellHeader.ShortHelp="Coque";


// == Thickness == 

CATPrtModelHeader.ThicknessHeader.Title="Surépaisseur...";
CATPrtModelHeader.ThicknessHeader.Help="Ajoute une surépaisseur sur les faces sélectionnées";
CATPrtModelHeader.ThicknessHeader.LongHelp="Surépaisseur\nAjoute une surépaisseur sur \nles faces sélectionnées.";
CATPrtModelHeader.ThicknessHeader.ShortHelp="Surépaisseur";


// == RemoveFace == 

CATPrtModelHeader.RemoveFaceHeader.Title="Retrait de faces...";
CATPrtModelHeader.RemoveFaceHeader.Help="Retrait de faces";
CATPrtModelHeader.RemoveFaceHeader.LongHelp="Retrait de faces\nRetire une ou plusieurs faces.";
CATPrtModelHeader.RemoveFaceHeader.ShortHelp="Retrait de faces";


// == Pattern Rectangular == 

CATPrtModelHeader.RectangularPatternHeader.Title="Répétition rectangulaire...";
CATPrtModelHeader.RectangularPatternHeader.Help="Reproduit des composants sur une grille rectangulaire";
CATPrtModelHeader.RectangularPatternHeader.LongHelp="Répétition rectangulaire\nCrée une répétition rectangulaire\npour reproduire un composant PartDesign. ";
CATPrtModelHeader.RectangularPatternHeader.ShortHelp="Répétition rectangulaire";


// == Pattern Circular == 

CATPrtModelHeader.CircularPatternHeader.Title="Répétition circulaire...";
CATPrtModelHeader.CircularPatternHeader.Help="Reproduit des composants sur une grille circulaire";
CATPrtModelHeader.CircularPatternHeader.LongHelp="Répétition circulaire\nCrée une répétition circulaire\npour reproduire un composant PartDesign. ";
CATPrtModelHeader.CircularPatternHeader.ShortHelp="Répétition circulaire";


// == Pattern User == 

CATPrtModelHeader.UserPatternHeader.Title="Répétition personnalisée...";
CATPrtModelHeader.UserPatternHeader.Help="Reproduit des composants.";
CATPrtModelHeader.UserPatternHeader.LongHelp="Répétition personnalisée\nCrée une répétition personnalisée\npour reproduire un composant PartDesign. ";
CATPrtModelHeader.UserPatternHeader.ShortHelp="Répétition personnalisée";


// == Mirror == 

CATPrtModelHeader.MirrorHeader.Title="Symétrie...";
CATPrtModelHeader.MirrorHeader.Help="Duplique le corps de pièce par rapport à un plan ou à une face";
CATPrtModelHeader.MirrorHeader.LongHelp="Symétrie\nDuplique le corps de pièce par rapport à \nun plan ou à une face.";
CATPrtModelHeader.MirrorHeader.ShortHelp="Symétrie";


// == Split == 

CATPrtModelHeader.SplitHeader.Title="Coupe...";
CATPrtModelHeader.SplitHeader.Help="Coupe un corps de pièce suivant un plan, une face ou une surface";
CATPrtModelHeader.SplitHeader.LongHelp="Coupe\nCoupe un corps de pièce suivant un plan, \nune face ou une surface.";
CATPrtModelHeader.SplitHeader.ShortHelp="Coupe";


// == Sewing == 

CATPrtModelHeader.SewSurfaceHeader.Title="Couture...";
CATPrtModelHeader.SewSurfaceHeader.Help="Coud une face ou une surface sur un corps de pièce";
CATPrtModelHeader.SewSurfaceHeader.LongHelp="Couture\nCouture d'une face ou d'une surface, \nsur un corps de pièce.";
CATPrtModelHeader.SewSurfaceHeader.ShortHelp="Couture";


// == Replace Face / Align == 

CATPrtModelHeader.AlignHeader.Title="Remplacement de face...";
CATPrtModelHeader.AlignHeader.Help="Remplace une face par une surface sur un corps de pièce";
CATPrtModelHeader.AlignHeader.LongHelp="Remplacement de face\nRemplace une face par une surface \nsur un corps de pièce.";
CATPrtModelHeader.AlignHeader.ShortHelp="Remplacement de face";

// == CloseSurface == 

CATPrtModelHeader.CloseSurfaceHeader.Title="Remplissage...";
CATPrtModelHeader.CloseSurfaceHeader.Help="Ferme une surface.";
CATPrtModelHeader.CloseSurfaceHeader.LongHelp="Remplissage \n Ferme une surface.";
CATPrtModelHeader.CloseSurfaceHeader.ShortHelp="Remplissage";


// == Scaling == 

CATPrtModelHeader.ScalingHeader.Title="Facteur d'échelle...";
CATPrtModelHeader.ScalingHeader.Help="Modifie la taille du corps de pièce en utilisant un facteur d'échelle";
CATPrtModelHeader.ScalingHeader.LongHelp="Facteur d'échelle\nModifie la taille du corps de pièce \nen utilisant un facteur d'échelle.";
CATPrtModelHeader.ScalingHeader.ShortHelp="Facteur d'échelle";


// == ThickSurface == 

CATPrtModelHeader.ThickSurfaceHeader.Title="Surface épaisse...";
CATPrtModelHeader.ThickSurfaceHeader.Help="Crée un composant en spécifiant une surface et deux épaisseurs.";
CATPrtModelHeader.ThickSurfaceHeader.LongHelp="Surface épaisse\nCrée une surface épaisse en spécifiant deux épaisseurs.";
CATPrtModelHeader.ThickSurfaceHeader.ShortHelp="Surface épaisse";


// == Thread == 

CATPrtModelHeader.ThreadHeader.Title="Taraudage / filetage...";
CATPrtModelHeader.ThreadHeader.Help="Crée un taraudage ou un filetage.";
CATPrtModelHeader.ThreadHeader.LongHelp="Taraudage / filetage \nCrée un taraudage ou un filetage en spécifiant sa face support, sa face limite et \nses valeurs numériques.";
CATPrtModelHeader.ThreadHeader.ShortHelp="Taraudage / filetage";


// == Translation == 

CATPrtModelHeader.TranslationHeader.Title="Translation...";
CATPrtModelHeader.TranslationHeader.Help="Translation d'un corps de pièce.";
CATPrtModelHeader.TranslationHeader.LongHelp="Translate le corps de pièce dans la direction spécifiée.";
CATPrtModelHeader.TranslationHeader.ShortHelp="Translation";


// == Rotation == 

CATPrtModelHeader.RotationHeader.Title="Rotation...";
CATPrtModelHeader.RotationHeader.Help="Rotation d'un corps de pièce.";
CATPrtModelHeader.RotationHeader.LongHelp="Rotation d'un corps de pièce autour d'un axe spécifié.";
CATPrtModelHeader.RotationHeader.ShortHelp="Rotation";


// == Symmetry == 

CATPrtModelHeader.SymmetryHeader.Title="Symétrie...";
CATPrtModelHeader.SymmetryHeader.Help="Symétrie d'un corps de pièce à partir de la sélection d'une face ou d'un plan.";
CATPrtModelHeader.SymmetryHeader.LongHelp="Symétrie d'un corps de pièce à partir de la sélection d'une face ou d'un plan.";
CATPrtModelHeader.SymmetryHeader.ShortHelp="Symétrie";

// == AxisToAxis == 

CATPrtModelHeader.AxisToAxisHeader.Title="Changement de repère...";
CATPrtModelHeader.AxisToAxisHeader.Help="Le changement de repère translate le corps en utilisant l'axe de référence comme axe cible.";
CATPrtModelHeader.AxisToAxisHeader.LongHelp="Le changement de repère translate le corps en utilisant l'axe de référence comme axe cible.";
CATPrtModelHeader.AxisToAxisHeader.ShortHelp="Changement de repère";

// == Affinity == 

CATPrtModelHeader.AffinityHeader.Title="Affinité...";
CATPrtModelHeader.AffinityHeader.Help="L'affinité change et translate le corps en fonction des valeurs de ratio des coordonnées.";
CATPrtModelHeader.AffinityHeader.LongHelp="L'affinité change et translate le corps en fonction des valeurs de ratio des coordonnées.";
CATPrtModelHeader.AffinityHeader.ShortHelp="Affinité";

// == MeasureBetween == 

CATPrtModelHeader.MeasureBetweenHeader.Title="Mesure relative...";
CATPrtModelHeader.MeasureBetweenHeader.Help="Mesure entre deux objets.";
CATPrtModelHeader.MeasureBetweenHeader.LongHelp="Mesure entre deux objets.";
CATPrtModelHeader.MeasureBetweenHeader.ShortHelp="Mesure relative";


// == MeasureItem == 

CATPrtModelHeader.MeasureItemHeader.Title="Mesure absolue...";
CATPrtModelHeader.MeasureItemHeader.Help="Mesure d'un objet.";
CATPrtModelHeader.MeasureItemHeader.LongHelp="Mesure d'un objet.";
CATPrtModelHeader.MeasureItemHeader.ShortHelp="Mesure absolue";


CATPrtModelHeader.BoolAssemble.Title="Assembler...";
CATPrtModelHeader.BoolAssemble.Help="Assemble le corps de pièce sélectionné avec un autre corps";
CATPrtModelHeader.BoolAssemble.ShortHelp="Assemble.";
CATPrtModelHeader.BoolAssemble.LongHelp="Assembler\nAssemble le corps de pièce avec un autre corps.";


CATPrtModelHeader.BoolAdd.Title="Ajouter...";
CATPrtModelHeader.BoolAdd.Help="Ajoute le corps de pièce sélectionné à un autre corps";
CATPrtModelHeader.BoolAdd.ShortHelp="Ajouter";
CATPrtModelHeader.BoolAdd.LongHelp="Ajouter\nAjoute un corps de pièce à un autre corps.";


CATPrtModelHeader.BoolIntersect.Title="Intersection...";
CATPrtModelHeader.BoolIntersect.Help="Crée l'intersection du corps de pièce sélectionné avec un autre corps";
CATPrtModelHeader.BoolIntersect.ShortHelp="Intersection";
CATPrtModelHeader.BoolIntersect.LongHelp="Intersection\nCrée l'intersection entre deux corps.";


CATPrtModelHeader.BoolTrim.Title="Relimitation partielle...";
CATPrtModelHeader.BoolTrim.Help="Relimite partiellement le corps de pièce sélectionné avec un autre corps";
CATPrtModelHeader.BoolTrim.ShortHelp="Relimitation partielle";
CATPrtModelHeader.BoolTrim.LongHelp="Relimitation partielle\nRelimite partiellement deux corps.";


CATPrtModelHeader.BoolRemoveLump.Title="Retrait de volumes...";
CATPrtModelHeader.BoolRemoveLump.Help="Retire les volumes inutiles du corps de pièce sélectionné";
CATPrtModelHeader.BoolRemoveLump.ShortHelp="Retrait de volumes";
CATPrtModelHeader.BoolRemoveLump.LongHelp="Retire les volumes d'un corps.";


CATPrtModelHeader.BoolRemove.Title="Retirer...";
CATPrtModelHeader.BoolRemove.Help="Soustrait le corps de pièce sélectionné à un autre corps";
CATPrtModelHeader.BoolRemove.ShortHelp="Retirer";
CATPrtModelHeader.BoolRemove.LongHelp="Retirer\nSoustrait le corps de pièce à un autre corps.";


// == PositiveLoft == 

CATPrtModelHeader.PositiveLoftHeader.Title="Multi-sections Solide...";
CATPrtModelHeader.PositiveLoftHeader.Help="Crée un Multi-sections Solide en ajout de matière.";
CATPrtModelHeader.PositiveLoftHeader.LongHelp="Multi-sections Solide\nCrée un Multi-sections Solide en ajout de matière.";
CATPrtModelHeader.PositiveLoftHeader.ShortHelp="Multi-sections Solide";


// == NegativeLoft == 

CATPrtModelHeader.NegativeLoftHeader.Title="Enlevé Multi-Sections Solide...";
CATPrtModelHeader.NegativeLoftHeader.Help="Crée un Enlevé Multi-Sections Solide de matière.";
CATPrtModelHeader.NegativeLoftHeader.LongHelp="Enlevé Multi-Sections Solide\nCrée un Enlevé Multi-Sections Solide de matière.";
CATPrtModelHeader.NegativeLoftHeader.ShortHelp="Enlevé Multi-Sections Solide";


// == PositiveBlend == 

CATPrtModelHeader.PositiveBlendHeader.Title="Surface de raccord...";
CATPrtModelHeader.PositiveBlendHeader.Help="Crée une surface de raccord en ajout de matière.";
CATPrtModelHeader.PositiveBlendHeader.LongHelp="Surface de raccord\nCrée une surface de raccord en ajout de matière.";
CATPrtModelHeader.PositiveBlendHeader.ShortHelp="Surface de raccord";


// == NegativeBlend == 

CATPrtModelHeader.NegativeBlendHeader.Title="Surface de raccord (retrait de matière)...";
CATPrtModelHeader.NegativeBlendHeader.Help="Crée une surface de raccord en retrait de matière.";
CATPrtModelHeader.NegativeBlendHeader.LongHelp="Surface de raccord (retrait de matière)\nCrée une surface de raccord en retrait de matière.";
CATPrtModelHeader.NegativeBlendHeader.ShortHelp="Surface de raccord (retrait de matière)";


// == PadDF == 

CATPrtModelHeader.PadDFHeader.Title="Extrusion avec dépouille et congés...";
CATPrtModelHeader.PadDFHeader.Help="Crée une extrusion avec une dépouille et des congés.";
CATPrtModelHeader.PadDFHeader.LongHelp="Extrusion\nCrée une extrusion avec une dépouille et des congés.";
CATPrtModelHeader.PadDFHeader.ShortHelp="Extrusion avec dépouille et congés";


// == PocketDF == 

CATPrtModelHeader.PocketDFHeader.Title="Poche avec dépouille et congés...";
CATPrtModelHeader.PocketDFHeader.Help="Crée une poche avec une dépouille et des congés.";
CATPrtModelHeader.PocketDFHeader.LongHelp="Poche\nCrée une poche avec une dépouille et des congés.";
CATPrtModelHeader.PocketDFHeader.ShortHelp="Poche avec dépouille et congés";


// == MultiPad == 

CATPrtModelHeader.MultiPadHeader.Title="Multi-extrusion...";
CATPrtModelHeader.MultiPadHeader.Help="Crée une multi-extrusion à partir d'un profil multi-domaine.";
CATPrtModelHeader.MultiPadHeader.LongHelp="Multi-extrusion\nCrée une multi-extrusion à partir d'un profil multi-domaine.";
CATPrtModelHeader.MultiPadHeader.ShortHelp="Multi-extrusion";


// == MultiPocket == 

CATPrtModelHeader.MultiPocketHeader.Title="Multi-poche...";
CATPrtModelHeader.MultiPocketHeader.Help="Crée une multi-poche à partir d'un profil multi-domaine.";
CATPrtModelHeader.MultiPocketHeader.LongHelp="Multi-poche\nCrée une multi-poche à partir d'un profil multi-domaine.";
CATPrtModelHeader.MultiPocketHeader.ShortHelp="Multi-poche";


// == PowerCopy and catalog ==

// == Templates Creation ==
//CATPrtModelHeader.PrtCreatePowerCopy.Title            = "PowerCopy Creation...";
//CATPrtModelHeader.PrtCreatePowerCopy.Help             = "Creates a PowerCopy";
//CATPrtModelHeader.PrtCreatePowerCopy.ShortHelp        = "PowerCopy Creation";
//CATPrtModelHeader.PrtCreatePowerCopy.LongHelp         = "Creates a PowerCopy";
// == Templates Insantiation ==
//CATPrtModelHeader.PrtInstanciatePowerCopy.Title            = "PowerCopy Instantiation...";
//CATPrtModelHeader.PrtInstanciatePowerCopy.Help             = "Instantiate a defined PowerCopy stored in a part";
//CATPrtModelHeader.PrtInstanciatePowerCopy.ShortHelp        = "PowerCopy Instantiation";
//CATPrtModelHeader.PrtInstanciatePowerCopy.LongHelp         = "Instantiate a defined PowerCopy stored in a part";
// == Udf Feature Save ==
//CATPrtModelHeader.PrtSaveInCatalog.Title                 = "PowerCopy Save in Catalog...";
//CATPrtModelHeader.PrtSaveInCatalog.Help                  = "Save PowerCopy in a catalog";
//CATPrtModelHeader.PrtSaveInCatalog.ShortHelp             = "PowerCopy Save in Catalog";
//CATPrtModelHeader.PrtSaveInCatalog.LongHelp              = "Save PowerCopy in a catalog";
// == Udf Feature Save ==


// ==== Point =====

CATPrtModelHeader.PrtPointHeader.Title                 = "Point...";
CATPrtModelHeader.PrtPointHeader.Help                  = "Crée un ou plusieurs points";
CATPrtModelHeader.PrtPointHeader.ShortHelp             = "Point";
CATPrtModelHeader.PrtPointHeader.LongHelp              = 
"Point
Création d'un ou plusieurs points.";


// ===== Line ======

CATPrtModelHeader.PrtLineHeader.Title                  = "Droite...";
CATPrtModelHeader.PrtLineHeader.Help                   = "Crée une droite";
CATPrtModelHeader.PrtLineHeader.ShortHelp              = "Droite";
CATPrtModelHeader.PrtLineHeader.LongHelp               = 
"Droite
Création d'une droite.";


// == Plane == 

CATPrtModelHeader.PrtPlaneHeader.Title                 = "Plan...";
CATPrtModelHeader.PrtPlaneHeader.Help                  = "Crée un plan";
CATPrtModelHeader.PrtPlaneHeader.ShortHelp             = "Plan";
CATPrtModelHeader.PrtPlaneHeader.LongHelp              = 
"Plan
Création d'un plan.";

// == InsertInNewBody == 
CATPrtModelHeader.SelFeatNewBody.Title="Assembler des composants";
CATPrtModelHeader.SelFeatNewBody.Help="Insère les objets sélectionnés dans le nouveau corps de pièce.";
CATPrtModelHeader.SelFeatNewBody.ShortHelp="Assembler des composants";
CATPrtModelHeader.SelFeatNewBody.LongHelp="Insère les objets sélectionnés dans le nouveau corps de pièce.";

// == SolidCombine == 

CATPrtModelHeader.SolidCombineHeader.Title="Combinaison...";
CATPrtModelHeader.SolidCombineHeader.Help="Construit l'intersection entre deux extrusions.";
CATPrtModelHeader.SolidCombineHeader.LongHelp="Construit l'intersection entre deux extrusions.";
CATPrtModelHeader.SolidCombineHeader.ShortHelp="Combinaison";

// == AddPosition == 
CATPrtModelHeader.PrtPositionImportCom.Title="Ajout d'une position...";
CATPrtModelHeader.PrtPositionImportCom.Help="Ajout d'un trièdre et transfert des transformations qui suivent le composant";
CATPrtModelHeader.PrtPositionImportCom.ShortHelp="Ajout d'une position";
CATPrtModelHeader.PrtPositionImportCom.LongHelp="Ajout d'un trièdre et transfert des transformations qui suivent le composant";

// == Auto Fillet == 

CATPrtModelHeader.AutoFilletHeader.Title="Congé raccordement auto ...";
CATPrtModelHeader.AutoFilletHeader.Help="Permet de créer automatiquement un congé de raccordement.";
CATPrtModelHeader.AutoFilletHeader.LongHelp="Congé de raccordement automatique\nPermet de créer automatiquement un congé de raccordement.";
CATPrtModelHeader.AutoFilletHeader.ShortHelp="Congé de raccordement automatique";

// == Technological Results ==
CATPrtModelHeader.CreateTROutputHdr.Title="Créer des résultats technologiques";
CATPrtModelHeader.CreateTROutputHdr.Help="Crée les composants de résultats technologiques.";
CATPrtModelHeader.CreateTROutputHdr.LongHelp="Crée les composants de résultats technologiques.";
CATPrtModelHeader.CreateTROutputHdr.ShortHelp="Résultats technologiques";

CATPrtModelHeader.ResetDeletedTRHdr.Title="Restaurer des résultats technologiques supprimés";
CATPrtModelHeader.ResetDeletedTRHdr.Help="Restaure les résultats technologiques supprimés.";
CATPrtModelHeader.ResetDeletedTRHdr.LongHelp="Permet de recréer les résultats technologiques supprimés.";
CATPrtModelHeader.ResetDeletedTRHdr.ShortHelp="Restaurer des résultats technologiques supprimés";

// == Mean Dimensions == 
CATPrtModelHeader.MeanDimensions.Title     = "Dimensions moyennes";
CATPrtModelHeader.MeanDimensions.ShortHelp = "Dimensions moyennes";
CATPrtModelHeader.MeanDimensions.Help      = "Permet de calculer les dimensions moyennes";
CATPrtModelHeader.MeanDimensions.LongHelp  = "Permet de calculer les dimensions moyennes sur les paramètres tolérancés.";

// == Wall Thickness Analysis  == 
CATPrtModelHeader.WallThicknessAnalysisHeader.Title     = "Analyse de l'épaisseur de matière";
CATPrtModelHeader.WallThicknessAnalysisHeader.Help      = "Analyse de l'épaisseur des pièces en cours";
CATPrtModelHeader.WallThicknessAnalysisHeader.LongHelp  = "Analyse de l'épaisseur des pièces en cours. \nPossibilité d'affichage de la géométrie symbolique \net des valeurs numériques caractéristiques.";
CATPrtModelHeader.WallThicknessAnalysisHeader.ShortHelp = "Analyse de l'épaisseur de matière";

// == Auto Fillet == 

CATPrtModelHeader.AutoDraftHeader.Title="Dépouille auto ...";
CATPrtModelHeader.AutoDraftHeader.Help="Crée une dépouille automatique.";
CATPrtModelHeader.AutoDraftHeader.LongHelp="Dépouille automatique\nPermet de créer une dépouille automatique.";
CATPrtModelHeader.AutoDraftHeader.ShortHelp="Dépouille automatique";

// == LMG Sketch == 

CATPrtModelHeader.LMGSketchHeader.Title="Esquisse LMG...";
CATPrtModelHeader.LMGSketchHeader.Help="Crée une esquisse dédiée pour LMG.";
CATPrtModelHeader.LMGSketchHeader.LongHelp="Esquisse LMG\nCrée une esquisse dédiée pour LMG.";
CATPrtModelHeader.LMGSketchHeader.ShortHelp="Esquisse LMG";

// == Dynamic Sectioning  == 
CATPrtModelHeader.DynamicSectioningHeader.Title     = "Section dynamique";
CATPrtModelHeader.DynamicSectioningHeader.Help      = "Coupe la pièce en cours par une section dynamique.";
//CATPrtModelHeader.DynamicSectioningHeader.LongHelp  = "Cut the current part by a dynamic section. \nProvides capability to manipulate a section in the 3D\nand cut the view of the part.";
CATPrtModelHeader.DynamicSectioningHeader.ShortHelp = "Section dynamique";
