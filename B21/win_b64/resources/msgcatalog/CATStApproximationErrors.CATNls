Error_KnotRankOutLimits.Message		= "The input rank is lower than 1 or greater than number of knots.";
Error_ExtremityKnot.Message			= "An extremity knot can not be modified or removed.";
Error_KnotValueOutLimits.Message	= "The input value is lower than the first knot value or greater than the last knot value.";
Error_KnotValueOnAKnot.Message		= "The input knot value is corresponding to an existent knot.";
Error_InvalidMultiplicity.Message	= "The input multiplicity is lower than 1 or greater than [Degree-2].";
Error_InvalidDegree.Message			= "The input degree is lower than 1 or greater than 11.";
Error_InvalidContinuity.Message		= "The input continuity is lower than 0 or greater than 2.";
Error_UncompContinuities.Message	= "[2 + startcontinuity + endcontinuity] must be lower or equal to the number of control points.";
Error_InvalidMaxDegree.Message		= "The max degree is lower than 3 or greater than 15.";
Error_InconsistentInput.Message		= "The input is inconsistent.";

Error_InputNotNurbs.Message			= "The input must be a Nurbs.";
Fatal_InputNotNurbs.Message			= "The input must be a Nurbs.";

Error_RunAlreadyCalled.Message		= "An internal error occured.";
Error_NoResultWithoutRun.Message	= "An internal error occured.";
Error_InputPtrNull.Message			= "An internal error occured.";
Error_PtrNull.Message				= "An internal error occured.";
Error_Algorithm.Message				= "An internal error occured.";
Fatal_PtrNull.Message				= "An internal error occured.";
Fatal_PtrInputFactoryNull.Message	= "An internal error occured.";
Fatal_PtrInputNull.Message			= "An internal error occured.";

DefaultErrorMessage					= "Unable to create feature.";

CATStApproximationErrors.ComputationMode = "The Computation Mode cannot be retrieved";
CATStApproximationErrors.Segments		 = "The Number of Segments cannot be retrieved";
CATStApproximationErrors.Order			 = "The Order cannot be retrieved";
CATStApproximationErrors.RefCurve		 = "The Reference Curve cannot be retrieved";
CATStApproximationErrors.Tolerance		 = "The Tolerance cannot be retrieved";
CATStApproximationErrors.VertexList		 = "The Vertex List cannot be retrieved";
CATStApproximationErrors.ArcLimitList	 = "The Arc Limit List cannot be retrieved";
CATStApproximationErrors.UpdateError     = "Invalid, empty or missing input element.
One mandatory input element is invalid, empty or missing.
There is no solution for this operation.";
TrimmingIncompleteOrFailedError ="Fillet cannot be created between the selected input elements with given options.
Problem occured whiled trimming inputs.";
TrimmingFailedError ="Fillet cannot be created between the selected input elements with given options.
Problem occured whiled trimming inputs.";
TrimmingIncompleteError ="Fillet is created between the selected input elements with given options.
But trimming of inputs is incomplete.";
ProbablyDistortedSurfaceError ="Fillet cannot be created between the selected input elements with given options.
Resultant fillet created is probably distorted.";
CreationError   = "Fillet cannot be created between the selected input elements with given options.";
ErrorInAtleastOneRibbon   = "Fillet cannot be created for one or more sharp edge selected.
Process each sharp edge seperately to get the exact error.";
WarningInAtleastOneRibbon   = "Fillet is created between the selected input elements with given options.
But trimming of inputs is incomplete.";
ErrorWarningsInAtleastOneRibbon   = 
"Fillet cannot be created for one or more sharp edge selected.
Process each sharp edge seperately to get the exact error.
Also there is incomplete trimming of inputs in the resultant fillet.";
CreationErrorEdgeFillet   = "Fillet cannot be created for any sharp edge selected.
Process each sharp edge seperately to get the exact error.";
