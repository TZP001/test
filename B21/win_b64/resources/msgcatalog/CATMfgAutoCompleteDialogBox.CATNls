title = "Transition Paths";

Selection = "Selection";

Reset = "Reset";
SelectAll = "Select All";

NoSel = "No selection";
AllProg = "Generate transition path for all programs";

operation = " Operation(s)";
program = " Program(s)";

SelectionFrame.SelectionEditor.ShortHelp = "Select programs";
SelectionFrame.SelectionEditor.LongHelp = "Click on the PPR tree to select programs";
SelectionFrame.ResetButton.ShortHelp = "Reset selection";
SelectionFrame.ResetButton.LongHelp = "Reset all programs selected";
SelectionFrame.SelectAllButton.ShortHelp = "Select all programs";
SelectionFrame.SelectAllButton.LongHelp = "Select all programs from PPR tree";

PriorityOrderFrame.HeaderFrame.Global.Title                     = "Priority Order"; 
PriorityOrderFrame.IconAndOptionsFrame.OptionsFrame.ToolChange.Title          = "Tool change";    
// PriorityOrderFrame.IconAndOptionsFrame.OptionsFrame.ToolChange.ShortHelp      = "Priority to tool change";    
PriorityOrderFrame.IconAndOptionsFrame.OptionsFrame.ToolChange.LongHelp       = "Priority to tool change\nThe machine rotation is embedded in the transition path that is after the tool change";
PriorityOrderFrame.IconAndOptionsFrame.OptionsFrame.MachineRotation.Title     = "Machine rotation";    
PriorityOrderFrame.IconAndOptionsFrame.OptionsFrame.MachineRotation.ShortHelp = "Priority to machine rotation";    
PriorityOrderFrame.IconAndOptionsFrame.OptionsFrame.MachineRotation.LongHelp  = "Priority to machine rotation\nThe machine rotation is embedded in the transition path that is before the tool change.";

MachineRotationCreationOptionsFrame.HeaderFrame.Global.Title    = "Machine Rotation Creation Options";

MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.Title = "First axis";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.FirstAxisLabel.Title = "First axis   :";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.CLW.Title = "CLW";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.CLW.ShortHelp = "Machine rotary direction capability";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.CLW.LongHelp = "Machine rotary clockwise direction capability ";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.CCLW.Title = "CCLW";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.CCLW.ShortHelp = "Machine rotary direction capability";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.CCLW.LongHelp = "Machine rotary counter clockwise direction capability ";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.Shortest.Title = "Shortest";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.Shortest.ShortHelp = "Machine rotary direction capability";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.FirstAxisFrame.Shortest.LongHelp = "Direction automatically computed";


MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.Title = "Second axis";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.SecondAxisLabel.Title = "Second axis  :";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.CLW.Title = "CLW";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.CLW.ShortHelp = "Machine rotary direction capability";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.CLW.LongHelp = "Machine rotary clockwise direction capability ";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.CCLW.Title = "CCLW";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.CCLW.ShortHelp = "Machine rotary direction capability";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.CCLW.LongHelp = "Machine rotary counter clockwise direction capability ";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.Shortest.Title = "Shortest";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.Shortest.ShortHelp = "Machine rotary direction capability";
MachineRotationCreationOptionsFrame.IconAndOptionsFrame.OptionsFrame.SecondAxisFrame.Shortest.LongHelp = "Direction automatically computed";

RotableCreation.HeaderFrame.Global.Title ="Machine Rotation Creation";
RotableCreation.IconAndOptionsFrame.OptionsFrame.RotableCreationEnable.Title = "Table"; 
// RotableCreation.IconAndOptionsFrame.OptionsFrame.RotableCreationEnable.ShortHelp = "Enable rotable creation"; 
RotableCreation.IconAndOptionsFrame.OptionsFrame.RotableCreationEnable.LongHelp = "Option to define if generation of transition path is allowed to include table rotation"; 

RotableCreation.IconAndOptionsFrame.OptionsFrame.RotheadCreationEnable.Title = "Head";
// RotableCreation.IconAndOptionsFrame.OptionsFrame.RotheadCreationEnable.ShortHelp = "Enable rothead creation"; 
RotableCreation.IconAndOptionsFrame.OptionsFrame.RotheadCreationEnable.LongHelp = "Option to define if generation of transition path is allowed to include head rotation"; 

TransitionPathCreation.HeaderFrame.Global.Title = "Transition Path Creation";
TransitionPathCreation.IconAndOptionsFrame.OptionsFrame.ToMachiningOperation.Title = "To machining operation";
// TransitionPathCreation.IconAndOptionsFrame.OptionsFrame.ToMachiningOperation.ShortHelp = "Option to define the standard transition path creation scope";
TransitionPathCreation.IconAndOptionsFrame.OptionsFrame.ToMachiningOperation.LongHelp = "Transition paths are generated before each machining operation of the program.\nIf there is a machining axis before a machining operation,\n the transition path corresponding to the machining operation is added before the machining axis.";
TransitionPathCreation.IconAndOptionsFrame.OptionsFrame.ToToolChange.Title = "To tool change";
TransitionPathCreation.IconAndOptionsFrame.OptionsFrame.ToToolChange.ShortHelp = "Option to define the standard transition path creation scope";
TransitionPathCreation.IconAndOptionsFrame.OptionsFrame.ToToolChange.LongHelp = "Transition paths are added before each tool change";
TransitionPathCreation.IconAndOptionsFrame.OptionsFrame.ToMachineRotation.Title = "To machine rotation";
// TransitionPathCreation.IconAndOptionsFrame.OptionsFrame.ToMachineRotation.ShortHelp = "Option to define the standard transition path creation scope";
TransitionPathCreation.IconAndOptionsFrame.OptionsFrame.ToMachineRotation.LongHelp = "Standard transition paths are added before each machine rotation including the previously existing (manually created for instance)\n and the ones currently generated by automatic complete. In the first case, a new transition path is created, in the second,\n they are added in an existing transition path.";

RetractApproachMode.HeaderFrame.Global.Title = "Retract/Approach Motion";
RetractApproachMode.IconAndOptionsFrame.OptionsFrame.PerpendicularTransitionPlane.Title = "Perpendicular to transition plane";
// RetractApproachMode.IconAndOptionsFrame.OptionsFrame.PerpendicularTransitionPlane.ShortHelp = "Option to define the retract/approach mode";
RetractApproachMode.IconAndOptionsFrame.OptionsFrame.PerpendicularTransitionPlane.LongHelp = "Option to define the retract/approach motion";
RetractApproachMode.IconAndOptionsFrame.OptionsFrame.AlongToolAxisOfOperation.Title = "Along operation tool axis";
// RetractApproachMode.IconAndOptionsFrame.OptionsFrame.AlongToolAxisOfOperation.ShortHelp = "Option to define the retract/approach mode";
RetractApproachMode.IconAndOptionsFrame.OptionsFrame.AlongToolAxisOfOperation.LongHelp = "Option to define the retract/approach motion";

NoTransitionPlane.HeaderFrame.Global.Title = "If No Transition Plane"; 
NoTransitionPlane.IconAndOptionsFrame.OptionsFrame.ComputeAxialRadialMode.Title = "Compute axial-radial motion"; 
// NoTransitionPlane.IconAndOptionsFrame.OptionsFrame.ComputeAxialRadialMode.ShortHelp = "Option to define the strategy to use ONLY if no transition planes are defined."; 
NoTransitionPlane.IconAndOptionsFrame.OptionsFrame.ComputeAxialRadialMode.LongHelp = "Option to define the strategy to use ONLY if no transition planes are defined."; 

ForceTraverseMotionOnTop.HeaderFrame.Global.Title = "Traverse Motion on Top"; 
ForceTraverseMotionOnTop.IconAndOptionsFrame.OptionsFrame.TraverseMotionOnTop.Title = "Force motion on top plane of box"; 
// ForceTraverseMotionOnTop.IconAndOptionsFrame.OptionsFrame.TraverseMotionOnTop.ShortHelp = "Option to force motion on top plane."; 
ForceTraverseMotionOnTop.IconAndOptionsFrame.OptionsFrame.TraverseMotionOnTop.LongHelp = "Option to force motion on top plane."; 

AfterLastOperation.HeaderFrame.Global.Title = "At the end of the program..."; 
AfterLastOperation.IconAndOptionsFrame.OptionsFrame.ReturnToMachineHomePosition.Title = "Return to the machine home position"; 
// AfterLastOperation.IconAndOptionsFrame.OptionsFrame.ReturnToMachineHomePosition.ShortHelp = "An additional transition path is generated after the last machining operation to return to the machine home position."; 
AfterLastOperation.IconAndOptionsFrame.OptionsFrame.ReturnToMachineHomePosition.LongHelp = "An additional transition path is generated after the last machining operation to return to the machine home position."; 

CopyTracutFound1  = "Transition path cannot be generated";
CopyTracutFound2  = "Before COPY operator";
OldMachine1       = "NC machine is not a generic one";
OldMachine2       = "Only machine rotation can be generated";
NoProblemDetected = "No problem detected";
NoProgramDetected = "No program selected";


