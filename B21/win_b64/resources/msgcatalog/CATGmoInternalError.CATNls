// *--------------------------------------------*//
// *               Exemple de message           *//
// *  En_US                                     *//
// *------------------------------------------- *//
// ERR_2000.Request    = "Vous avez additionne /p1 avec /p2";
// ERR_2000.Diagnostic = "Un des parametres est negatif";
// ERR_2000.Advice     = "Utilisez des parametres positifs";


// ErrInconnue   
GSMMODELINTERNAL_ERR_100.Request    = "Internal error";
GSMMODELINTERNAL_ERR_100.Diagnostic = "Unknown internal error in unkwown routine";
GSMMODELINTERNAL_ERR_100.Advice     = " ";

// InternalError 
GSMMODELINTERNAL_ERR_200.Request    = "Internal error";
GSMMODELINTERNAL_ERR_200.Diagnostic = "Internal error in routine /p1";
GSMMODELINTERNAL_ERR_200.Advice     = " ";

// SessionError  
GSMMODELINTERNAL_ERR_300.Request    = "Session error";
GSMMODELINTERNAL_ERR_300.Diagnostic = "Impossible to Open Session in routine /p1";
GSMMODELINTERNAL_ERR_300.Advice     = " ";

// DocumentError  
GSMMODELINTERNAL_ERR_400.Request    = "Document error";
GSMMODELINTERNAL_ERR_400.Diagnostic = "Impossible to Open Document in routine /p1";
GSMMODELINTERNAL_ERR_400.Advice     = " ";

// DocumentInitError  
GSMMODELINTERNAL_ERR_500.Request    = "Document Init error";
GSMMODELINTERNAL_ERR_500.Diagnostic = "Impossible to Initialize Document in routine /p1";
GSMMODELINTERNAL_ERR_500.Advice     = " ";

// ContainerError  
GSMMODELINTERNAL_ERR_600.Request    = "Container error";
GSMMODELINTERNAL_ERR_600.Diagnostic = "Impossible to create Container in routine /p1";
GSMMODELINTERNAL_ERR_600.Advice     = " ";

// StartUpError  
GSMMODELINTERNAL_ERR_700.Request    = "StartUp error";
GSMMODELINTERNAL_ERR_700.Diagnostic = "Impossible to create The StartUp in routine /p1";
GSMMODELINTERNAL_ERR_700.Advice     = " ";

// FactorieError  
GSMMODELINTERNAL_ERR_800.Request    = "Factory error";
GSMMODELINTERNAL_ERR_800.Diagnostic = "Impossible to create one of the Factory in routine /p1";
GSMMODELINTERNAL_ERR_800.Advice     = " ";

// NoSolution    
GSMMODELINTERNAL_ERR_900.Request    = "No Solution";
GSMMODELINTERNAL_ERR_900.Diagnostic = "There is no solution for this operation";
GSMMODELINTERNAL_ERR_900.Advice     = " ";

// LayingDownError 
GSMMODELINTERNAL_ERR_1000.Request    = " ";
GSMMODELINTERNAL_ERR_1000.Diagnostic = "Curve /p1 does not lie on surface /p2";
GSMMODELINTERNAL_ERR_1000.Advice     = " ";

GSMMODELINTERNAL_ERR_1001.Request    = " ";
GSMMODELINTERNAL_ERR_1001.Diagnostic = "Curve /p1 does not fully lie on surface /p2";
GSMMODELINTERNAL_ERR_1001.Advice     = " ";

GSMMODELINTERNAL_ERR_1002.Request    = " ";
GSMMODELINTERNAL_ERR_1002.Diagnostic = "Curve /p1 lie with self-intersection on surface /p2";
GSMMODELINTERNAL_ERR_1002.Advice     = " ";

GSMMODELINTERNAL_ERR_1010.Request    = " ";
GSMMODELINTERNAL_ERR_1010.Diagnostic = "Point /p1 does not lie on surface /p2";
GSMMODELINTERNAL_ERR_1010.Advice     = " ";

GSMMODELINTERNAL_ERR_1020.Request    = " ";
GSMMODELINTERNAL_ERR_1020.Diagnostic = "Point /p1 does not lie on an extremity of curve /p2.";
GSMMODELINTERNAL_ERR_1020.Advice     = " ";

GSMMODELINTERNAL_ERR_1030.Request    = "The lying down operation of /p1 on its support failed.";
GSMMODELINTERNAL_ERR_1030.Diagnostic = "The topologies before and after this operation are incompatible.";
GSMMODELINTERNAL_ERR_1030.Advice     = "Previously project it on the support.";

GSMMODELINTERNAL_ERR_1040.Request    = " ";
GSMMODELINTERNAL_ERR_1040.Diagnostic = "The lying down operation of /p1 on its support partially failed.";
GSMMODELINTERNAL_ERR_1040.Advice     = "Previously project it on the support.";

// InvalidInput    
GSMMODELINTERNAL_ERR_1100.Request    = "Invalid, empty or missing input element.";
GSMMODELINTERNAL_ERR_1100.Diagnostic = "One mandatory input element is invalid, empty or missing.";
GSMMODELINTERNAL_ERR_1100.Advice     = "There is no solution for this operation.";

// InvalidInput    
GSMMODELINTERNAL_ERR_1101.Request    = "";
GSMMODELINTERNAL_ERR_1101.Diagnostic = "Input element /p1 is empty or invalid";
GSMMODELINTERNAL_ERR_1101.Advice     = "";

// InvalidInput for sweep draft angle
GSMMODELINTERNAL_ERR_1102.Request    = "";
GSMMODELINTERNAL_ERR_1102.Diagnostic = "Number of edges in the profile has been modified.";
GSMMODELINTERNAL_ERR_1102.Advice     = "Please edit the sweep to validate the G1 constant definition.";

GSMMODELINTERNAL_ERR_1150.Request    = "";
GSMMODELINTERNAL_ERR_1150.Diagnostic = "Volume split computation has failed";
GSMMODELINTERNAL_ERR_1150.Advice     = "Modify length inputs.";

GSMMODELINTERNAL_ERR_1160.Request    = "";
GSMMODELINTERNAL_ERR_1160.Diagnostic = "Volume split computation has failed";
GSMMODELINTERNAL_ERR_1160.Advice     = "Please check the relimiters or length inputs";

// FilletInit    
GSMMODELINTERNAL_ERR_1200.Request    = " ";
GSMMODELINTERNAL_ERR_1200.Diagnostic = "Fillet cannot be initialized : modify radius or supports.\n Each support must be continuous (tangency).";
GSMMODELINTERNAL_ERR_1200.Advice     = " ";

GSMMODELINTERNAL_ERR_1201.Request    = " ";
GSMMODELINTERNAL_ERR_1201.Diagnostic = "It is impossible to lay the hold curve on one of the faces.";
GSMMODELINTERNAL_ERR_1201.Advice     = " ";

GSMMODELINTERNAL_ERR_1250.Request    = "The resulting geometry is infinite.";
GSMMODELINTERNAL_ERR_1250.Diagnostic = " ";
GSMMODELINTERNAL_ERR_1250.Advice     = "Please, modify Trim options and/or Extremities options to create finite geometry.";


// InvalidDirection 
GSMMODELINTERNAL_ERR_1300.Request    = " ";
GSMMODELINTERNAL_ERR_1300.Diagnostic = "/p1 is invalid";
GSMMODELINTERNAL_ERR_1300.Advice     = " ";

// FilletTrimPlane  
GSMMODELINTERNAL_ERR_1400.Request    = " ";
GSMMODELINTERNAL_ERR_1400.Diagnostic = "Fillet cannot be computed : a plane cannot be trimmed";
GSMMODELINTERNAL_ERR_1400.Advice     = " ";

// Extraction edge interne 
GSMMODELINTERNAL_ERR_1500.Request    = "Create it by an other way (Intersection, Point on curve,...)";
GSMMODELINTERNAL_ERR_1500.Diagnostic = "Impossible to extract an Internal Vertex";
GSMMODELINTERNAL_ERR_1500.Advice     = "Don't extract an Internal vertex ";

/////////////////////////
// Boundary 
GSMMODELINTERNAL_ERR_1600.Request    = "";
GSMMODELINTERNAL_ERR_1600.Diagnostic = "The support for the propagation of this element can not be found (More than one, ambiguity, ...)";
GSMMODELINTERNAL_ERR_1600.Advice     = "Cannot use this element: change the selected element on another right support";

// Healing a perdu    
GSMMODELINTERNAL_ERR_1700.Request    = "The Healing failed.";
GSMMODELINTERNAL_ERR_1700.Diagnostic = "There is still a gap of /p1 between elements.";
GSMMODELINTERNAL_ERR_1700.Advice     = "Try to improve the geometry.";

GSMMODELINTERNAL_ERR_1710.Request    = "The Healing failed.";
GSMMODELINTERNAL_ERR_1710.Diagnostic = "There is still a gap of /p1 between elements.";
GSMMODELINTERNAL_ERR_1710.Advice     = "The input elements /p2 cannot be deformed, try to freeze them or improve the geometry.";

// Healing moyen    
GSMMODELINTERNAL_ERR_1800.Request    = "The Healing partially failed.";
GSMMODELINTERNAL_ERR_1800.Diagnostic = "There is still a gap of /p1 between elements.";
GSMMODELINTERNAL_ERR_1800.Advice     = "May be you can improve your geometry.";

// Fill gap G0
GSMMODELINTERNAL_ERR_1900.Request    = "The Fill failed.";
GSMMODELINTERNAL_ERR_1900.Diagnostic = "There is a continuity gap of /p1 between elements.";
GSMMODELINTERNAL_ERR_1900.Advice     = "Try to improve your geometry.";

GSMMODELINTERNAL_ERR_1910.Request    = "The Fill partially failed.";
GSMMODELINTERNAL_ERR_1910.Diagnostic = "There is still a continuity gap of /p1 between elements.";
GSMMODELINTERNAL_ERR_1910.Advice     = "May be you can improve your geometry.";

// Fill bord non fermé
GSMMODELINTERNAL_ERR_2000.Request    = "The Fill failed.";
GSMMODELINTERNAL_ERR_2000.Diagnostic = "Your boundary is not closed.";
GSMMODELINTERNAL_ERR_2000.Advice     = "Try to improve your geometry.";

// Fill gap G1
GSMMODELINTERNAL_ERR_2100.Request    = "The Fill failed.";
GSMMODELINTERNAL_ERR_2100.Diagnostic = "There is a tangency gap of /p1 radians between elements.";
GSMMODELINTERNAL_ERR_2100.Advice     = "Try to improve your geometry.";


// Law
GSMMODELINTERNAL_ERR_2200.Request    = "";
GSMMODELINTERNAL_ERR_2200.Diagnostic = "Law /p1 can't be evaluated. Modify inputs.";
GSMMODELINTERNAL_ERR_2200.Advice     = "";

// Law multi-solution
GSMMODELINTERNAL_ERR_2300.Request    = "";
GSMMODELINTERNAL_ERR_2300.Diagnostic = "Law /p1 can't be evaluated: there are several solutions.\nModify inputs.";
GSMMODELINTERNAL_ERR_2300.Advice     = "";

// Law
GSMMODELINTERNAL_ERR_2400.Request    = "";
GSMMODELINTERNAL_ERR_2400.Diagnostic = "Law can't be evaluated. Modify inputs.";
GSMMODELINTERNAL_ERR_2400.Advice     = "";

// Law
GSMMODELINTERNAL_ERR_2500.Request    = "";
GSMMODELINTERNAL_ERR_2500.Diagnostic = "Law can't be evaluated for X = /p1. There may be several solutions. ";
GSMMODELINTERNAL_ERR_2500.Advice     = "Modify inputs. ";

//Law
GSMMODELINTERNAL_ERR_2510.Request    = "";
GSMMODELINTERNAL_ERR_2510.Diagnostic = "The Spine /p1 cannot be totally smoothed.";
GSMMODELINTERNAL_ERR_2510.Advice     = "Please, Use a curvature continuous spine.";

// Split
GSMMODELINTERNAL_ERR_2600.Request    = "";
GSMMODELINTERNAL_ERR_2600.Diagnostic = "/p1 does not intersect /p2.";
GSMMODELINTERNAL_ERR_2600.Advice     = "Modify cutting element.";

// Junction
GSMMODELINTERNAL_ERR_2700.Request    = "Junction surface creation failed.";
GSMMODELINTERNAL_ERR_2700.Diagnostic = "A internal gap (between points) in a section curve has been detected.";
GSMMODELINTERNAL_ERR_2700.Advice     = "Try to fill the gap thanks to the SMOOTH operation.";

GSMMODELINTERNAL_ERR_2701.Request    = "Impossible Junction surface creation";
GSMMODELINTERNAL_ERR_2701.Diagnostic = "Due to section relative position, red coupling curves are crossing a section.";
GSMMODELINTERNAL_ERR_2701.Advice     = "Move or modify corresponding section curve(s) in order to avoid crossing.";

GSMMODELINTERNAL_ERR_2702.Request    = "Impossible Junction surface creation";
GSMMODELINTERNAL_ERR_2702.Diagnostic = "Due to added coupling point, surface cannot be created arround red coupling curves.";
GSMMODELINTERNAL_ERR_2702.Advice     = "Add or remove corresponding coupling.";

GSMMODELINTERNAL_ERR_2703.Request    = "Impossible Junction surface creation";
GSMMODELINTERNAL_ERR_2703.Diagnostic = "Surface cannot be created inside red curves.";
GSMMODELINTERNAL_ERR_2703.Advice     = "Add or remove coupling information in order to simplify the surface computation in this area.";

// Corner
GSMMODELINTERNAL_ERR_2800.Request    = "";
GSMMODELINTERNAL_ERR_2800.Diagnostic = "Corner cannot be computed.";
GSMMODELINTERNAL_ERR_2800.Advice     = "Modify the radius or select another solution.";

GSMMODELINTERNAL_ERR_2850.Request    = "";
GSMMODELINTERNAL_ERR_2850.Diagnostic = "Corner 3D cannot be computed.";
GSMMODELINTERNAL_ERR_2850.Advice     = "Modify the radius or select another solution.";

GSMMODELINTERNAL_ERR_2860.Request    = "Feature cannot be computed.";
GSMMODELINTERNAL_ERR_2860.Diagnostic = "The error may be due to :\n - no possible solution or\n - an input orientation change or\n - inputs relative positionning change.";
GSMMODELINTERNAL_ERR_2860.Advice     = "Edit the feature and choose a correct solution.";

GSMMODELINTERNAL_WARNING_2861 = "The number of remaining sharp vertices has changed (from /p1 to /p2). Please, check the result now.";

// Extract
GSMMODELINTERNAL_ERR_2900.Request    = "";
GSMMODELINTERNAL_ERR_2900.Diagnostic = "Extract cannot be evaluated";
GSMMODELINTERNAL_ERR_2900.Advice     = "The resulting geometry of the input element is made \n of several sub-elements that are not connected. \n You can use a near to keep one sub-element.";

GSMMODELINTERNAL_ERR_2901.Request    = "";
GSMMODELINTERNAL_ERR_2901.Diagnostic = "Extract cannot be evaluated";
GSMMODELINTERNAL_ERR_2901.Advice     = "Curvature continuity is only available for a wire.";

GSMMODELINTERNAL_ERR_2902.Request    = "Extract computation failed.";
GSMMODELINTERNAL_ERR_2902.Diagnostic = "Error occurred during topological evaluation.";
GSMMODELINTERNAL_ERR_2902.Advice     = "The resulting geometry is invalid.";

// Sweep Adaptatif 
GSMMODELINTERNAL_ERR_3000.Request    = "Adaptive sweep computation failed.";
GSMMODELINTERNAL_ERR_3000.Diagnostic = "Error occurred during geometrical evaluation.";
GSMMODELINTERNAL_ERR_3000.Advice     = "The geometric consistency can be checked by using the manipulator.";

GSMMODELINTERNAL_ERR_3001.Request    = "Adaptive sweep computation failed.";
GSMMODELINTERNAL_ERR_3001.Diagnostic = "Error occurred during sections computation.";
GSMMODELINTERNAL_ERR_3001.Advice     = "Please check if the reference elements or constraints of sections are useable at the current place.";

GSMMODELINTERNAL_ERR_3002.Request    = "Adaptive sweep error while generating new sections from sketch.";
GSMMODELINTERNAL_ERR_3002.Diagnostic = "Sections /p1 are in update error.";
GSMMODELINTERNAL_ERR_3002.Advice     = "Please remove these sections or modify sketch.";

GSMMODELINTERNAL_ERR_3003.Request    = "Adaptive sweep error while generating new sections from sketch.";
GSMMODELINTERNAL_ERR_3003.Diagnostic = "Section /p1 is in update error.";
GSMMODELINTERNAL_ERR_3003.Advice     = "Please remove this section or modify sketch.";

GSMMODELINTERNAL_ERR_3004.Request    = "Adaptive sweep computation failed.";
GSMMODELINTERNAL_ERR_3004.Diagnostic = "Interpolation law computation failed.";
GSMMODELINTERNAL_ERR_3004.Advice     = "Please check inputs.";

GSMMODELINTERNAL_ERR_3005.Request    = "Adaptive sweep: Sketch HV axis is positioned according to a vector.";
GSMMODELINTERNAL_ERR_3005.Diagnostic = "You have not selected a surface or a plane as reference surface.";
GSMMODELINTERNAL_ERR_3005.Advice     = "We suggest you to select a reference surface.";

GSMMODELINTERNAL_ERR_3006.Request    = "Adaptive sweep: Unexpected error while positioning the sketch.";
GSMMODELINTERNAL_ERR_3006.Diagnostic = "Sketch positioning may not correspond to what is expected.";
GSMMODELINTERNAL_ERR_3006.Advice     = "Try to recreate the sketch without positioned sketch option.";

GSMMODELINTERNAL_ERR_3007.Request    = "Adaptive sweep: Unexpected error while positioning the sketch normaly to surface.";
GSMMODELINTERNAL_ERR_3007.Diagnostic = "Positioned sketch option has been ignored.";
GSMMODELINTERNAL_ERR_3007.Advice     = "Try to position the sketch manually.";

GSMMODELINTERNAL_WARNING_3008 = "Sections have been regenerated. Some parameters modification might be lost.";

// Diabolo
GSMMODELINTERNAL_ERR_3100.Request    = "Diabolo surface creation failed.";
GSMMODELINTERNAL_ERR_3100.Diagnostic = "The result contains at least one twisted surface.";
GSMMODELINTERNAL_ERR_3100.Advice     = "Decrease the draft angle value or change the operand.";

// Circle
GSMMODELINTERNAL_ERR_3150.Request    = "Circle creation failed.";
GSMMODELINTERNAL_ERR_3150.Diagnostic = "The selected solution does not exist any more.";
GSMMODELINTERNAL_ERR_3150.Advice     = "Edit /p1 and choose the correct solution.";

// Sweep
GSMMODELINTERNAL_ERR_3200.Request    = "";
GSMMODELINTERNAL_ERR_3200.Diagnostic = "The extremum element cannot be computed.";
GSMMODELINTERNAL_ERR_3200.Advice     = "";

GSMMODELINTERNAL_ERR_3201.Request    = "";
GSMMODELINTERNAL_ERR_3201.Diagnostic = "The computed swept surface is twisted.";
GSMMODELINTERNAL_ERR_3201.Advice     = "Decrease the angle value or change the inputs.";

GSMMODELINTERNAL_ERR_3202.Request    = "";
GSMMODELINTERNAL_ERR_3202.Diagnostic = "The euclidean parallel curve cannot be computed.";
GSMMODELINTERNAL_ERR_3202.Advice     = "Change length value or switch to standard length
if parallel curve cannot be geometrically obtained.";

GSMMODELINTERNAL_ERR_3203.Request    = "";
GSMMODELINTERNAL_ERR_3203.Diagnostic = "The swept surface cannot be computed up to this relimiting surface.";
GSMMODELINTERNAL_ERR_3203.Advice     = "";

GSMMODELINTERNAL_ERR_3204.Request    = "";
GSMMODELINTERNAL_ERR_3204.Diagnostic = "The guide curve intersects the relimiting surface.";
GSMMODELINTERNAL_ERR_3204.Advice     = "Create two swept surfaces, one on each side of the relimiting surface.";

//
// Warning discontinuites Healing...
GapG0="Point continuity : there is still a gap of /p1 between elements.";
DiscontinuityG1="Tangency continuity : there is still a discontinuity of /p1 degrees between elements.";

// Warning TM : Is not a 1-domain wire
GSMMODELINTERNAL_ERR_3250.Request    = "The result cannot be smoothed.";
GSMMODELINTERNAL_ERR_3250.Diagnostic = "The result is not a connex wire.";
GSMMODELINTERNAL_ERR_3250.Advice     = " ";

// Warning TM : G0 discont
GSMMODELINTERNAL_ERR_3300.Request    = "Point discontinuities are detected.";
GSMMODELINTERNAL_ERR_3300.Diagnostic = "The curve could not be totally smoothed.";
GSMMODELINTERNAL_ERR_3300.Advice     = " ";

// Warning TM : G1 discont
GSMMODELINTERNAL_ERR_3301.Request    = "Tangency discontinuities are detected.";
GSMMODELINTERNAL_ERR_3301.Diagnostic = "The curve could not be totally smoothed.";
GSMMODELINTERNAL_ERR_3301.Advice     = " ";

// Warning TM : G2 discont
GSMMODELINTERNAL_ERR_3302.Request    = "Curvature discontinuities are detected.";
GSMMODELINTERNAL_ERR_3302.Diagnostic = "The curve could not be totally smoothed.";
GSMMODELINTERNAL_ERR_3302.Advice     = " ";

// Extrapol
GSMMODELINTERNAL_ERR_3400.Request    = "Direction of extrapolation for the internal edge selected can't be determined.";
GSMMODELINTERNAL_ERR_3400.Diagnostic = "Both of the boundaries of the edge lay on /p1.";
GSMMODELINTERNAL_ERR_3400.Advice     = "Select one or both vertices.";

GSMMODELINTERNAL_ERR_3410.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3410.Diagnostic = "Extrapolated element /p1 and Up To element /p2 do not have the same support.";
GSMMODELINTERNAL_ERR_3410.Advice     = "Select a support or change these elements.";

GSMMODELINTERNAL_ERR_3420.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3420.Diagnostic = "After extrapolation, the intersection between Extrapolated element /p1 and Up To element /p2 does not exist.";
GSMMODELINTERNAL_ERR_3420.Advice     = "Change these elements.";

GSMMODELINTERNAL_ERR_3421.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3421.Diagnostic = "The extrapolation results in a self intersection for element /p1.";
GSMMODELINTERNAL_ERR_3421.Advice     = "Change this element or modify the Limit Type.";

GSMMODELINTERNAL_ERR_3425.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3425.Diagnostic = "The extrapolation reaches the closure of the underlying curve /p1.";
GSMMODELINTERNAL_ERR_3425.Advice     = "Define a smaller extrapolation length.";

GSMMODELINTERNAL_ERR_3430.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3430.Diagnostic = "Continuity of the support /p1 is incompatible with curvature extrapolation.";
GSMMODELINTERNAL_ERR_3430.Advice     = " ";

GSMMODELINTERNAL_ERR_3431.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3431.Diagnostic = "The operator does not find any solution with curvature extrapolation.";
GSMMODELINTERNAL_ERR_3431.Advice     = " ";

GSMMODELINTERNAL_ERR_3440.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3440.Diagnostic = "The wire cannot be extrapolated or the wire curvature is so large that the extrapolated wire cannot reach the target plane /p1.";
GSMMODELINTERNAL_ERR_3440.Advice     = "Define a smaller extrapolation length or modify inputs.";

GSMMODELINTERNAL_ERR_3441.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3441.Diagnostic = "The wire cannot be extrapolated or the wire curvature is so large that the extrapolated wire cannot reach the target plane.";
GSMMODELINTERNAL_ERR_3441.Advice     = "Define a smaller extrapolation length or modify inputs.";

GSMMODELINTERNAL_ERR_3442.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3442.Diagnostic = "Extrapolation UpTo impossible with UpTo element /p1.";
GSMMODELINTERNAL_ERR_3442.Advice     = "Modify the UpTo element or the Limit Type.";

GSMMODELINTERNAL_ERR_3443.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3443.Diagnostic = "The operator does not find any solution, it may be due to tangent of curve /p1 which is not in tangent plane.";
GSMMODELINTERNAL_ERR_3443.Advice     = "Change this element or modify the Limit Type.";

GSMMODELINTERNAL_ERR_3445.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3445.Diagnostic = "The extrapolation of the wire /p1 cannot be done with the Up To element /p2 which is not valid.";
GSMMODELINTERNAL_ERR_3445.Advice     = "Change these elements or modify the Limit Type.";

GSMMODELINTERNAL_ERR_3446.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3446.Diagnostic = "Extrapolation UpTo impossible because intersection between support /p1 and UpTo element /p2 is not valid.";
GSMMODELINTERNAL_ERR_3446.Advice     = "Modify the UpTo element or the Limit Type.";

GSMMODELINTERNAL_ERR_3447.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3447.Diagnostic = "The operator does not find any solution, it may be due to tangent of curve /p1 which is not in tangent plane /p2.";
GSMMODELINTERNAL_ERR_3447.Advice     = "Change these elements or modify the Limit Type.";

GSMMODELINTERNAL_ERR_3448.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3448.Diagnostic = "The line tangent to curve /p1 at the extremity of initial curve doesn't intersect the target plane /p2.";
GSMMODELINTERNAL_ERR_3448.Advice     = "Change these elements or modify the Limit Type.";

GSMMODELINTERNAL_ERR_3449.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3449.Diagnostic = "Degenerated situation:tangent situation between curve /p1 and plane /p2.";
GSMMODELINTERNAL_ERR_3449.Advice     = "Change these elements or modify the Limit Type.";

GSMMODELINTERNAL_ERR_3450.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3450.Diagnostic = "The extrapolation of the wire /p1 cannot be done with this Limit Type and the Up To element /p2.";
GSMMODELINTERNAL_ERR_3450.Advice     = "Change these elements or modify the Limit Type.";

GSMMODELINTERNAL_ERR_3455.Request    = "The computation failed.";
GSMMODELINTERNAL_ERR_3455.Diagnostic = "The computed extrapolated surface is twisted.";
GSMMODELINTERNAL_ERR_3455.Advice     = "Decrease the extrapolation value or change the inputs.";

// ShapeMorphing G0
GSMMODELINTERNAL_ERR_3500.Request    = "Invalid G0 deformation,";
GSMMODELINTERNAL_ERR_3500.Diagnostic = "between /p1 and /p2.";
GSMMODELINTERNAL_ERR_3500.Advice     = "Modify these elements.";

// ShapeMorphing G1
GSMMODELINTERNAL_ERR_3510.Request    = "Invalid G1 deformation,";
GSMMODELINTERNAL_ERR_3510.Diagnostic = "between /p1 and /p2.";
GSMMODELINTERNAL_ERR_3510.Advice     = "Modify these elements.";

// ShapeMorphing Continuities
GSMMODELINTERNAL_ERR_3520.Request    = "Invalid Target Continuities";
GSMMODELINTERNAL_ERR_3520.Diagnostic = ".";
GSMMODELINTERNAL_ERR_3520.Advice     = "Modify these elements.";

// ShapeMorphing Limit Curve
GSMMODELINTERNAL_ERR_3530.Request    = "Invalid limit for the deformation,";
GSMMODELINTERNAL_ERR_3530.Diagnostic = "on curve /p1 .";
GSMMODELINTERNAL_ERR_3530.Advice     = "Modify this element.";

// ShapeMorphing Coupling Points
GSMMODELINTERNAL_ERR_3540.Request    = "Invalid coupling points.";
GSMMODELINTERNAL_ERR_3540.Diagnostic = "";
GSMMODELINTERNAL_ERR_3540.Advice     = "Modify these elements.";

// Rough Offset : NoSolution    
GSMMODELINTERNAL_ERR_3600.Request    = "No Solution for this operation.";
GSMMODELINTERNAL_ERR_3600.Diagnostic = "The calculation gives no result.";
GSMMODELINTERNAL_ERR_3600.Advice     = "Try to modify the inputs.";

GSMMODELINTERNAL_ERR_3610.Request    = "Input Error.";
GSMMODELINTERNAL_ERR_3610.Diagnostic = "There are some holes in the input element.";
GSMMODELINTERNAL_ERR_3610.Advice     = "Try to improve the quality of this element.";

GSMMODELINTERNAL_ERR_3620.Request    = "No Solution for this operation.";
GSMMODELINTERNAL_ERR_3620.Diagnostic = "The deviation is too small.";
GSMMODELINTERNAL_ERR_3620.Advice     = "Try to increase the deviation.";

// Rough Offset : Cancel on Progress Bar
GSMMODELINTERNAL_ERR_3630.Request    = "Cancel interruption.";
GSMMODELINTERNAL_ERR_3630.Diagnostic = "";
GSMMODELINTERNAL_ERR_3630.Advice     = "Rough Offset operation is aborted.";

//Rough Offset : Impossible Computation - Not enough memory
GSMMODELINTERNAL_ERR_3640.Request    = "Impossible computation";
GSMMODELINTERNAL_ERR_3640.Diagnostic = "There isn't enough memory to run this operation.";
GSMMODELINTERNAL_ERR_3640.Advice     = "Try to change offset and deviation values.";

// Warning Extract-Naming Ambiguity
GSMMODELINTERNAL_WARNING_001="In order to resolve a naming ambiguity on /p1,a geometric resolution is performed.";

// 3D Curve Offset Error
GSMMODELINTERNAL_ERR_4000.Request    = "3D Curve Offset error";
GSMMODELINTERNAL_ERR_4000.Diagnostic = "Corner 3D cannot be computed.";
GSMMODELINTERNAL_ERR_4000.Advice     = "Try to modify the corner radius and/or tension.";

GSMMODELINTERNAL_ERR_4100.Request    = "3D Curve Offset error";
GSMMODELINTERNAL_ERR_4100.Diagnostic = "No solution has been found";
GSMMODELINTERNAL_ERR_4100.Advice     = "Try to modify the corner radius and/or tension.";

GSMMODELINTERNAL_ERR_4200.Request    = "3D Curve Offset error";
GSMMODELINTERNAL_ERR_4200.Diagnostic = "A 3D Corner turn back leads to an error";
GSMMODELINTERNAL_ERR_4200.Advice     = "Increase corner radius or decrease corner tension.";

GSMMODELINTERNAL_ERR_4300.Request    = "3D Curve Offset error";
GSMMODELINTERNAL_ERR_4300.Diagnostic = "Unknown error during 3D Corner creation";
GSMMODELINTERNAL_ERR_4300.Advice     = "";

GSMMODELINTERNAL_ERR_4400.Request    = "3D Curve Offset error";
GSMMODELINTERNAL_ERR_4400.Diagnostic = "Unknown error while closing wire";
GSMMODELINTERNAL_ERR_4400.Advice     = "";

GSMMODELINTERNAL_ERR_4450.Request    = "3D Curve Offset error";
GSMMODELINTERNAL_ERR_4450.Diagnostic = "Some singularities cannot be removed";
GSMMODELINTERNAL_ERR_4450.Advice     = "Try to modify the offset value.";

// Warning Variable Offset : HighVariation    
GSMMODELINTERNAL_WARNING_002="High Variation in Variable Offset operation.";

// Warning Section Root Ambiguity
GSMMODELINTERNAL_WARNING_003="The root section /p1 is no more featured by its plane, please define a plane for /p1.";

// Command not autorized
GSMMODELINTERNAL_ERR_4500.Request    = "Operation not autorized";
GSMMODELINTERNAL_ERR_4500.Diagnostic = "It is not allowed to create a volume feature under a Geometrical Set.";
GSMMODELINTERNAL_ERR_4500.Advice     = "";

// Variable Offset
GSMMODELINTERNAL_ERR_4600.Request    = "Variable Offset error";
GSMMODELINTERNAL_ERR_4600.Diagnostic = "Some faces are removed";
GSMMODELINTERNAL_ERR_4600.Advice     = "";

// Extrusion Warning
GSMMODELINTERNAL_ERR_4700.Request    = "Extrude warning.";
GSMMODELINTERNAL_ERR_4700.Diagnostic = "Input wire is self-intersecting. Profile has been healed successfully.";
GSMMODELINTERNAL_ERR_4700.Advice     = "";

// Fill Warning
GSMMODELINTERNAL_ERR_4710.Request    = "Fill warning.";
GSMMODELINTERNAL_ERR_4710.Diagnostic = "Input wire is self-intersecting. Profile has been healed successfully.";
GSMMODELINTERNAL_ERR_4710.Advice     = "";

// Assemble Warning
GSMMODELINTERNAL_ERR_4720.Request    = "Federated assemble warning.";
GSMMODELINTERNAL_ERR_4720.Diagnostic = "'All' federation has been applied on non connex join. 
This federation might no be effective between non connected sub-element.";
GSMMODELINTERNAL_ERR_4720.Advice     = "It is advised not to use this federation mode with non connex entities.";

// Loft error with unsuitable boundary
GSMMODELINTERNAL_ERR_4730.Request    = "Automatic tangency computation failed.";
GSMMODELINTERNAL_ERR_4730.Diagnostic = "The input boundary /p1 is not seen as an exact extraction of /p2.";
GSMMODELINTERNAL_ERR_4730.Advice     = "Remove all boundary options, especially relimitation ones.";
// Trim Error 
GSMMODELINTERNAL_ERR_4800.Request    = "Number of intersections on an input has been modified.";
GSMMODELINTERNAL_ERR_4800.Diagnostic = "First input modified: /p1, old intersects=/p2, new intersects=/p3.";
GSMMODELINTERNAL_ERR_4800.Advice     = "Edit the feature and click Preview button to validate the modification.";

//Tolerant modeling warning
GSMMODELINTERNAL_ERR_4900.Request    = "A 3D smoothing has been performed.";
GSMMODELINTERNAL_ERR_4900.Diagnostic = "Input deviation is greater than tolerant lay down tolerance.";
GSMMODELINTERNAL_ERR_4900.Advice     = "The created geometry may not be usable as laid down geometry.";

//Polyline
GSMMODELINTERNAL_ERR_5000.Request    = "Polyline error.";
GSMMODELINTERNAL_ERR_5000.Diagnostic = "At least one radius is not associated to a point.";
GSMMODELINTERNAL_ERR_5000.Advice     = "Edit the Polyline to clean the feature.";

//Interrupt
GSMMODELINTERNAL_ERR_5100 = "The update was interrupted on user request.";

//Curve Smooth
GSMMODELINTERNAL_ERR_5200 = "Curvature discontinuities are detected on frozen points.\n The curve could not be totally smoothed.";
GSMMODELINTERNAL_ERR_5201 = "Curvature discontinuities are detected on frozen edges.\n The curve could not be totally smoothed.";

//Isolate
GSMMODELINTERNAL_ERR_5300.Request    = "This element cannot be isolated.";
GSMMODELINTERNAL_ERR_5300.Diagnostic = "The naming of feature's cells depends on parents' naming.";
GSMMODELINTERNAL_ERR_5300.Advice     = "Try to remove some feature inputs manually.";

//2DViewSection
GSMMODELINTERNAL_ERR_5400.Request    = "The migration process has been canceled. No insertion position has been found according to linearity rules";
GSMMODELINTERNAL_ERR_5400.Diagnostic = "The parent element /p1 is located after the child element /p2.";
GSMMODELINTERNAL_ERR_5400.Advice     = "Try to solve manually the current model, and relaunch the migration process.";

GSMMODELINTERNAL_ERR_5410 = "The orientation of the section has changed. Check it is expected one.";

// TransfoExt 
GSMMODELINTERNAL_ERR_5500.Request    = "Internal error.";
GSMMODELINTERNAL_ERR_5500.Diagnostic = "NULL Handler error.";
GSMMODELINTERNAL_ERR_5500.Advice     = " ";

// Fill twisted areas of sweep
GSMMODELINTERNAL_ERR_5600.Request    = "";
GSMMODELINTERNAL_ERR_5600.Diagnostic = "At least one twisted area could not be filled.";
GSMMODELINTERNAL_ERR_5600.Advice     = "Try to enlarge the area by moving the cutters or by increasing the setback value.";

// Diabolo solution change
GSMMODELINTERNAL_ERR_5700.Request    = "";
GSMMODELINTERNAL_ERR_5700.Diagnostic = "Previous unique solution has changed to multiple solutions.";
GSMMODELINTERNAL_ERR_5700.Advice     = "Please edit the diabolo to select the desired solution.";

// Invalid Input for Diabolo
GSMMODELINTERNAL_ERR_5800.Request    = "";
GSMMODELINTERNAL_ERR_5800.Diagnostic = "The seat surface has been modified.";
GSMMODELINTERNAL_ERR_5800.Advice     = "Please edit the diabolo to validate the draft angles definition.";

// Invalid Input for Diabolo
GSMMODELINTERNAL_ERR_5900.Request    = "";
GSMMODELINTERNAL_ERR_5900.Diagnostic = "The location point specified is not valid.";
GSMMODELINTERNAL_ERR_5900.Advice     = "Please edit the diabolo to modify the definition of location points.";

// Warning eval min curve radius
GSMMODELINTERNAL_WARNING_004 = "The relation was using minimumCurvatureRadius evaluator with old level of code and has been upgraded.";
GSMMODELINTERNAL_WARNING_005 = "The relation has been upgraded.";
