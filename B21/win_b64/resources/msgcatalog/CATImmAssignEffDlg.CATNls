Title = "Assign Effectivity";

TopOptionsFrame.DomainFrame.DomainCombo.Help = "Domain ";
TopOptionsFrame.DomainFrame.DomainCombo.ShortHelp = "Domain ";
TopOptionsFrame.DomainFrame.DomainCombo.LongHelp = "Domain ";
TopOptionsFrame.DomainFrame.DomainLabel.Title = " Domain: ";

DateRangeFrame.Title = "Date(D)/Range(R)";
DateRangeFrame.TypeComboPanel.TypeComboLabel.Title = " Type: ";
DateRangeFrame.TypeComboPanel.TypeCombo.Help = "Effectivity can be either a date or a range.";
DateRangeFrame.TypeComboPanel.TypeCombo.ShortHelp = "Type of Effectivity";
DateRangeFrame.TypeComboPanel.TypeCombo.LongHelp = "Effectivity can be either a date or a range.";

DateRangeFrame.StartEndValuePanel.StartDateEntryFrame.StartEditor.Help = "Start Effectivity Value";
DateRangeFrame.StartEndValuePanel.StartDateEntryFrame.StartEditor.ShortHelp = "Start Effectivity Value";
DateRangeFrame.StartEndValuePanel.StartDateEntryFrame.StartEditor.LongHelp = "Start Effectivity Value";
DateRangeFrame.StartEndValuePanel.StartDateEntryFrame.StartCalendarBtn.Help = "Select Start Date using Chooser";
DateRangeFrame.StartEndValuePanel.StartDateEntryFrame.StartCalendarBtn.ShortHelp = "Select Start Date using Chooser";
DateRangeFrame.StartEndValuePanel.StartDateEntryFrame.StartCalendarBtn.LongHelp = "Select Start Date using Chooser";
DateRangeFrame.StartEndValuePanel.StartMilestoneButton.Help = "Select Existing Milestone as Start";
DateRangeFrame.StartEndValuePanel.StartMilestoneButton.ShortHelp = "Select Existing Milestone as Start";
DateRangeFrame.StartEndValuePanel.StartMilestoneButton.LongHelp = "Select Existing Milestone as Start";

DateRangeFrame.StartEndValuePanel.EndDateEntryFrame.EndEditor.Help = "End Effectivity Value";
DateRangeFrame.StartEndValuePanel.EndDateEntryFrame.EndEditor.ShortHelp = "End Effectivity Value";
DateRangeFrame.StartEndValuePanel.EndDateEntryFrame.EndEditor.LongHelp = "End Effectivity Value";
DateRangeFrame.StartEndValuePanel.EndDateEntryFrame.EndCalendarBtn.Help = "Select End Date using Chooser";
DateRangeFrame.StartEndValuePanel.EndDateEntryFrame.EndCalendarBtn.ShortHelp = "Select End Date using Chooser";
DateRangeFrame.StartEndValuePanel.EndDateEntryFrame.EndCalendarBtn.LongHelp = "Select End Date using Chooser";
DateRangeFrame.StartEndValuePanel.EndMilestoneButton.Help = "Select Existing Milestone as End";
DateRangeFrame.StartEndValuePanel.EndMilestoneButton.ShortHelp = "Select Existing Milestone as End";
DateRangeFrame.StartEndValuePanel.EndMilestoneButton.LongHelp = "Select Existing Milestone as End";
DateRangeFrame.StartEndValuePanel.StartValueLabel.Title = " Start: ";
DateRangeFrame.StartEndValuePanel.EndValueLabel.Title = "   End: ";

CategoriesSpecificationsFrame.Title = "Categories/Specifications";
CategoriesSpecificationsFrame.SpecificationTable.Help = "This table contains Specifications for Effectivity conditions.";
CategoriesSpecificationsFrame.SpecificationTable.ShortHelp = "Categories/Specifications for Effectivity Table Condition";
CategoriesSpecificationsFrame.SpecificationTable.LongHelp = "This table contains Specifications to apply to the condition that is currently selected in the Effectivity table.";
CategoriesSpecificationsFrame.SpecificationTable.ColumnTitle1 = "Operator        ";
CategoriesSpecificationsFrame.SpecificationTable.ColumnTitle2 = "Specification Alias                     ";
CategoriesSpecificationsFrame.SpecificationTable.ColumnTitle3 = "Specification ID                                                      ";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableAddButton.Help = "Add Specification";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableAddButton.ShortHelp = "Add Specification";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableAddButton.LongHelp = "Add Specification";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableDeleteButton.Help = "Remove Specification";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableDeleteButton.ShortHelp = "Remove Specification";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableDeleteButton.LongHelp = "Remove Specification";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableDeleteAllButton.Help = "Remove All Specifications";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableDeleteAllButton.ShortHelp = "Remove All Specifications";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableDeleteAllButton.LongHelp = "Remove All Specifications";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableNotButton.Help = "NOT/Negate Specification Operator";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableNotButton.ShortHelp = "NOT/Negate Specification Operator";
CategoriesSpecificationsFrame.CategoriesSpecificationsButtonFrame.SpecTableNotButton.LongHelp = "NOT/Negate Specification Operator";

EffectivityTableFrame.Title = "Effectivity Table";
EffectivityTableFrame.EffectivityTable.Help = "Effectivity Dates(D)/Ranges(R) Conditions to apply.";
EffectivityTableFrame.EffectivityTable.ShortHelp = "Effectivity Dates(D)/Ranges(R) Conditions";
EffectivityTableFrame.EffectivityTable.LongHelp = "Effectivity Dates(D)/Ranges(R) Conditions to apply.";
EffectivityTableFrame.EffectivityTable.ColumnTitle1 = "Type          ";
EffectivityTableFrame.EffectivityTable.ColumnTitle2 = "Start                      ";
EffectivityTableFrame.EffectivityTable.ColumnTitle3 = "End                        ";
EffectivityTableFrame.EffectivityTable.ColumnTitle4 = "Specification                                                                 ";
EffectivityTableFrame.EffectivityTableButtonFrame.EffectivityTableButtonLeftPanel.EffTableAddButton.Help = "New Effectivity Row";
EffectivityTableFrame.EffectivityTableButtonFrame.EffectivityTableButtonLeftPanel.EffTableAddButton.ShortHelp = "New Effectivity Row";
EffectivityTableFrame.EffectivityTableButtonFrame.EffectivityTableButtonLeftPanel.EffTableAddButton.LongHelp = "New Effectivity Row";
EffectivityTableFrame.EffectivityTableButtonFrame.EffectivityTableButtonLeftPanel.EffTableDeleteButton.Help = "Remove Effectivity Row";
EffectivityTableFrame.EffectivityTableButtonFrame.EffectivityTableButtonLeftPanel.EffTableDeleteButton.ShortHelp = "Remove Effectivity Row";
EffectivityTableFrame.EffectivityTableButtonFrame.EffectivityTableButtonLeftPanel.EffTableDeleteButton.LongHelp = "Remove Effectivity Row";
EffectivityTableFrame.EffectivityTableButtonFrame.EffectivityTableButtonLeftPanel.EffTableDeleteAllButton.Help = "Remove All Effectivity Rows";
EffectivityTableFrame.EffectivityTableButtonFrame.EffectivityTableButtonLeftPanel.EffTableDeleteAllButton.ShortHelp = "Remove All Effectivity Rows";
EffectivityTableFrame.EffectivityTableButtonFrame.EffectivityTableButtonLeftPanel.EffTableDeleteAllButton.LongHelp = "Remove All Effectivity Rows";

// Carryovers from Previous File that are used in dialog.
NOT = "NOT";
AND = "AND";
TypeCombo0 = "Date";
TypeCombo1 = "Range";
RowErr.Incomplete.Title = "Incomplete Row Criteria";
RowErr.AlreadyExists.Title = "Effectivity Criteria Already Exists";
RowErr.NoStartOrSpec = "You must specify a Start value or Specification before continuing.";
RowErr.NoStartValue = "You must specifiy a Start value before continuing.";
RowErr.EndWithoutStart = "You must specify a Start value to match End value \"/P1\" before continuing.";
RowErr.EffAlreadyExists = "Effectivity Date/Range already exists in condition criteria.";
RowErr.SpecAlreadyExists = "Category / Specification already exists in the condition criteria.";
RowErr.NoSelection.Title = "No Table Row Selected";
RowErr.SpecNotSelected = "You must select a Specification from the Categories/Specifications table for this operation."; 
RowErr.EffRowNotSelected = "You must select a row from the Effectivity Table for this operation.";
RowErr.EmptyTable.Title = "Empty Table Error";//VZB 
RowErr.EffTableEmpty = "Requested operation is not possible as Effectivity Table is empty."; //VZB
RowErr.SpecTableEmpty = "Requested operation is not possible as Categories/Specifications Table is empty."; //VZB
Remove.Title = "Confirm Removal";
EffRow.Remove.Text = "Remove the selected Effectivity row ?";
EffRow.RemoveAll.Text = "Remove all Effectivity rows ?";
Category.Remove.Text = "Remove the selected Specification ?";
Category.RemoveAll.Text = "Remove All Specifications ?";
ErrorMsg = "Invalid Input";
CatSpecErrorMsg = "No Category / Specification found for this criteria";
ErrorMsgYear = "Invalid year entered. Valid years are 1970 to 2038.";
ErrorMsgDate = "Invalid date entered. Valid years are 1970 to 2038, valid months are 1 to 12, and valid days are 1 to 31.";
ErrorMsgNoStartDate = "Must specify a start date.";
ErrorTitle = "Date / Range Error";
ErrorMsgInvalidDate = "The end date cannot be earlier than the beginning date.";
ErrorMsgInvalidRange = "The end range cannot be less than the beginning range.";
ErrorMsgZeroRange = "The start and end range must be greater than zero.";
CatSpecErrorTitle = "Category / Specification Error";
Error.Title = "Error";
ErrMsgDateStartAfterEnd = "The Start Date must be on or before \"/P1\".";
ErrMsgDateEndBeforeStart = "The End Date must be on or after \"/P1\".";
ErrMsgRangeStartAfterEnd = "The Range Start Value must be less than or equal to \"/P1\".";
ErrMsgRangeEndBeforeStart = "The Range End Value must be greater than or equal to \"/P1\".";
ErrMsgRangeNAN = "The range value specified must be a whole number greater than 0.";

