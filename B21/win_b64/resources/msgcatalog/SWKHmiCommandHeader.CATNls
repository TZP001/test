// ==========================================================================
// ==========================================================================
// SWKHmiCommandHeader English Message File
// ==========================================================================
// ==========================================================================

// Create Manikin command
// ----------------------
SWKHmiCommandHeader.DELMHmuCreateManikinHdr.Title="New Manikin...";
SWKHmiCommandHeader.DELMHmuCreateManikinHdr.Help="Inserts a new manikin";
SWKHmiCommandHeader.DELMHmuCreateManikinHdr.ShortHelp="Inserts a new manikin";
SWKHmiCommandHeader.DELMHmuCreateManikinHdr.LongHelp=
"This command creates a manikin which is inserted
into the product tree at a specified location.";

// Create Load command
// -------------------
SWKHmiCommandHeader.DELMHmuCreateLoadHdr.Title="New Load...";
SWKHmiCommandHeader.DELMHmuCreateLoadHdr.Help="Inserts a new load";
SWKHmiCommandHeader.DELMHmuCreateLoadHdr.ShortHelp="Inserts a new load";
SWKHmiCommandHeader.DELMHmuCreateLoadHdr.LongHelp=
"This command creates a load which is inserted into the selected manikin node.";

// Create Report command
// ---------------------
SWKHmiCommandHeader.DELMHmuCreateReportHdr.Title="New Report...";
SWKHmiCommandHeader.DELMHmuCreateReportHdr.Help="Inserts a new Report";
SWKHmiCommandHeader.DELMHmuCreateReportHdr.ShortHelp="Inserts a new Report";
SWKHmiCommandHeader.DELMHmuCreateReportHdr.LongHelp=
"This command creates a Report which is inserted into the selected manikin node.";

// Create SegmentOffset command
// ----------------------------
SWKHmiCommandHeader.DELMHmuCreateSegmentOffsetHdr.Title="New Offset...";
SWKHmiCommandHeader.DELMHmuCreateSegmentOffsetHdr.Help="Inserts a new offset";
SWKHmiCommandHeader.DELMHmuCreateSegmentOffsetHdr.ShortHelp="Inserts a new offset";
SWKHmiCommandHeader.DELMHmuCreateSegmentOffsetHdr.LongHelp=
"This command creates a Offset which is inserted into the selected manikin node.";

// New Constraint Contact command
// ------------------------------
SWKHmiCommandHeader.DELMHmuConstraintContactHdr.Title="Contact Constraint...";
SWKHmiCommandHeader.DELMHmuConstraintContactHdr.Help="Creates a new contact constraint to an existing manikin.";
SWKHmiCommandHeader.DELMHmuConstraintContactHdr.ShortHelp="Contact Constraint";
SWKHmiCommandHeader.DELMHmuConstraintContactHdr.LongHelp=
"This command creates a new contact constraint to an existing manikin.";

// New Constraint Coincidence command
// ----------------------------------
SWKHmiCommandHeader.DELMHmuConstraintCoincidenceHdr.Title="Coincidence Constraint...";
SWKHmiCommandHeader.DELMHmuConstraintCoincidenceHdr.Help="Creates a new coincidence constraint to an existing manikin.";
SWKHmiCommandHeader.DELMHmuConstraintCoincidenceHdr.ShortHelp="Coincidence Constraint";
SWKHmiCommandHeader.DELMHmuConstraintCoincidenceHdr.LongHelp=
"This command creates a new coincidence constraint to an existing manikin.";

// New Constraint Fix command
// --------------------------
SWKHmiCommandHeader.DELMHmuConstraintFixHdr.Title="Fix Constraint...";
SWKHmiCommandHeader.DELMHmuConstraintFixHdr.Help="Creates a new constraint on the world referential.";
SWKHmiCommandHeader.DELMHmuConstraintFixHdr.ShortHelp="Fix Constraint";
SWKHmiCommandHeader.DELMHmuConstraintFixHdr.LongHelp=
"This command creates a new constraint on a manikin using the world referential.";

// New Constraint Fix On command
// -----------------------------
SWKHmiCommandHeader.DELMHmuConstraintFixOnHdr.Title="Fix On Constraint...";
SWKHmiCommandHeader.DELMHmuConstraintFixOnHdr.Help="Creates a new constraint on an object's referential or on a manikin's referential.";
SWKHmiCommandHeader.DELMHmuConstraintFixOnHdr.ShortHelp="Fix On Constraint";
SWKHmiCommandHeader.DELMHmuConstraintFixOnHdr.LongHelp=
"This command creates a new constraint on a manikin using an object's referential or on a manikin's referential.";

// Update All Constraints command
// ------------------------------
SWKHmiCommandHeader.DELMHmuUpdateAllCstHdr.Title="Update";
SWKHmiCommandHeader.DELMHmuUpdateAllCstHdr.Help="Updates all constraints and manikin representations";
SWKHmiCommandHeader.DELMHmuUpdateAllCstHdr.ShortHelp="Updates all constraints and manikin representations";
SWKHmiCommandHeader.DELMHmuUpdateAllCstHdr.LongHelp="This command updates all manikin constraints in the present document.";

// Reset Target (Fix/Fix On constraints)
// -------------------------------------
SWKHmiCommandHeader.DELMHmuResetTargetHdr.Title="Reset Target";
SWKHmiCommandHeader.DELMHmuResetTargetHdr.Help="Reset Target";
SWKHmiCommandHeader.DELMHmuResetTargetHdr.ShortHelp="Reset Target";
SWKHmiCommandHeader.DELMHmuResetTargetHdr.LongHelp="Reset Target";

// Activate transfer with target (Fix/Fix On constraints)
// -------------------------------------
SWKHmiCommandHeader.DELMHmuContextualMenuTransferWithTargetHdr.Title="Transfer with Target";
SWKHmiCommandHeader.DELMHmuContextualMenuTransferWithTargetHdr.Help="Transfer with Target";
SWKHmiCommandHeader.DELMHmuContextualMenuTransferWithTargetHdr.ShortHelp="Transfer with Target";
SWKHmiCommandHeader.DELMHmuContextualMenuTransferWithTargetHdr.LongHelp="Transfer with Target";

// Deactivate transfer with target (Fix/Fix On constraints)
// -------------------------------------
SWKHmiCommandHeader.DELMHmuContextualMenuTransferWithoutTargetHdr.Title="Transfer without Target";
SWKHmiCommandHeader.DELMHmuContextualMenuTransferWithoutTargetHdr.Help="Transfer without Target";
SWKHmiCommandHeader.DELMHmuContextualMenuTransferWithoutTargetHdr.ShortHelp="Transfer without Target";
SWKHmiCommandHeader.DELMHmuContextualMenuTransferWithoutTargetHdr.LongHelp="Transfer without Target";

// Capture command
// -------------------------------------
SWKHmiCommandHeader.DELMHmuContextualMenuCaptureHdr.Title="Capture...";
SWKHmiCommandHeader.DELMHmuContextualMenuCaptureHdr.Help="Capture Vision";
SWKHmiCommandHeader.DELMHmuContextualMenuCaptureHdr.ShortHelp="Capture Vision";
SWKHmiCommandHeader.DELMHmuContextualMenuCaptureHdr.LongHelp="Capture Vision";

// Delete command
// -------------------------------------
CATCCPEditHeader.Delete.Title="Delete";
CATCCPEditHeader.Delete.Help="Delete";
CATCCPEditHeader.Delete.ShortHelp="Delete";
CATCCPEditHeader.Delete.LongHelp="Delete";

// Publication command
// -------------------
//SWKHmiCommandHeader.AsmMMUIPublication.Title="Publication";
//SWKHmiCommandHeader.AsmMMUIPublication.Help="Publish an offset";
//SWKHmiCommandHeader.AsmMMUIPublication.ShortHelp="Allow publication of offsets";
//SWKHmiCommandHeader.AsmMMUIPublication.LongHelp="Allow publication of offsets.";

// Posture command
// ---------------
SWKHmiCommandHeader.DELMHmuPostureHdr.Title="Posture Editor...";
SWKHmiCommandHeader.DELMHmuPostureHdr.Help="Posture Editor";
SWKHmiCommandHeader.DELMHmuPostureHdr.ShortHelp="Posture Editor";
SWKHmiCommandHeader.DELMHmuPostureHdr.LongHelp=
"This command opens the posture edition panel.";

// Hand Grasp command
// ------------------
SWKHmiCommandHeader.DELMHmuHandGraspSphericalHdr.Title="Hand in spherical";
SWKHmiCommandHeader.DELMHmuHandGraspSphericalHdr.Help="Spherical posture";
SWKHmiCommandHeader.DELMHmuHandGraspSphericalHdr.ShortHelp="Hand spherical posture";
SWKHmiCommandHeader.DELMHmuHandGraspSphericalHdr.LongHelp="Open hand in spherical posture.";

SWKHmiCommandHeader.DELMHmuHandGraspCylindricalHdr.Title="Hand in cylindrical";
SWKHmiCommandHeader.DELMHmuHandGraspCylindricalHdr.Help="Cylindrical posture";
SWKHmiCommandHeader.DELMHmuHandGraspCylindricalHdr.ShortHelp="Hand cylindrical posture";
SWKHmiCommandHeader.DELMHmuHandGraspCylindricalHdr.LongHelp="Open hand in cylindrical posture.";

SWKHmiCommandHeader.DELMHmuHandGraspPinchHdr.Title="Hand in pinch";
SWKHmiCommandHeader.DELMHmuHandGraspPinchHdr.Help="Pinch posture";
SWKHmiCommandHeader.DELMHmuHandGraspPinchHdr.ShortHelp="Hand pinch posture";
SWKHmiCommandHeader.DELMHmuHandGraspPinchHdr.LongHelp="Open hand in pinch posture.";

SWKHmiCommandHeader.DELMHmuHandGraspExecuteHdr.Title="Execute auto grasp";
SWKHmiCommandHeader.DELMHmuHandGraspExecuteHdr.Help="Auto grasp";
SWKHmiCommandHeader.DELMHmuHandGraspExecuteHdr.ShortHelp="Execute auto grasp";
SWKHmiCommandHeader.DELMHmuHandGraspExecuteHdr.LongHelp="Execute auto grasp.";

// Reset command
// -------------
SWKHmiCommandHeader.DELMHmuContextualMenuResetHdr.Title="Reset";
SWKHmiCommandHeader.DELMHmuContextualMenuResetHdr.Help="Resets the selected element(s)";
SWKHmiCommandHeader.DELMHmuContextualMenuResetHdr.ShortHelp="Resets the selected element(s)";
SWKHmiCommandHeader.DELMHmuContextualMenuResetHdr.LongHelp=
"This command resets the selected element(s)";

// Mirror Copy command
// -------------------
SWKHmiCommandHeader.DELMHmuContextualMenuMirrorCopyHdr.Title="Mirror Copy";
SWKHmiCommandHeader.DELMHmuContextualMenuMirrorCopyHdr.Help="Mirror Copy";
SWKHmiCommandHeader.DELMHmuContextualMenuMirrorCopyHdr.ShortHelp="Mirror Copy";
SWKHmiCommandHeader.DELMHmuContextualMenuMirrorCopyHdr.LongHelp=
"This command applies the selected settings from one side of the manikin to the other side.";

// Status Report command
// ---------------------
SWKHmiCommandHeader.DELMHmuContextualMenuStatusReportHdr.Title="Generate Status Report...";
SWKHmiCommandHeader.DELMHmuContextualMenuStatusReportHdr.Help="Exports description of the selected manikin(s) in a report";
SWKHmiCommandHeader.DELMHmuContextualMenuStatusReportHdr.ShortHelp="Exports description of the selected manikin(s) in a report";
SWKHmiCommandHeader.DELMHmuContextualMenuStatusReportHdr.LongHelp=
"This command exports useful parameters of the selected manikin(s) in a single report.";

// Swap command
// ------------
SWKHmiCommandHeader.DELMHmuContextualMenuSwapHdr.Title="Swap";
SWKHmiCommandHeader.DELMHmuContextualMenuSwapHdr.Help="Swaps the settings for the selected objects";
SWKHmiCommandHeader.DELMHmuContextualMenuSwapHdr.ShortHelp="Swaps the settings for the selected objects";
SWKHmiCommandHeader.DELMHmuContextualMenuSwapHdr.LongHelp=
"This command swaps the selected settings of the manikin from one side to the other side.";

// Reset Posture command
// ---------------------
SWKHmiCommandHeader.DELMHmuContextualMenuResetPostureHdr.Title="Reset Posture";
SWKHmiCommandHeader.DELMHmuContextualMenuResetPostureHdr.Help="Resets the selected element(s)";
SWKHmiCommandHeader.DELMHmuContextualMenuResetPostureHdr.ShortHelp="Resets the selected element(s)";
SWKHmiCommandHeader.DELMHmuContextualMenuResetPostureHdr.LongHelp=
"This command resets the selected element(s)";

// Mirror Copy Posture command
// ---------------------------
SWKHmiCommandHeader.DELMHmuContextualMenuMirrorCopyPostureHdr.Title="Mirror Copy Posture";
SWKHmiCommandHeader.DELMHmuContextualMenuMirrorCopyPostureHdr.Help="Mirror Copy";
SWKHmiCommandHeader.DELMHmuContextualMenuMirrorCopyPostureHdr.ShortHelp="Mirror Copy";
SWKHmiCommandHeader.DELMHmuContextualMenuMirrorCopyPostureHdr.LongHelp=
"This command applies the selected attributes from one side of the manikin to the other side.";

// Swap Posture command
// --------------------
SWKHmiCommandHeader.DELMHmuContextualMenuSwapPostureHdr.Title="Swap Posture";
SWKHmiCommandHeader.DELMHmuContextualMenuSwapPostureHdr.Help="Swaps the Posture";
SWKHmiCommandHeader.DELMHmuContextualMenuSwapPostureHdr.ShortHelp="Swaps the Posture";
SWKHmiCommandHeader.DELMHmuContextualMenuSwapPostureHdr.LongHelp=
"This command swaps the selected attributes of the manikin from one side to the other side.";


// Activate command
// ----------------
SWKHmiCommandHeader.DELMHmuContextualMenuActivateHdr.Title="Activate";
SWKHmiCommandHeader.DELMHmuContextualMenuActivateHdr.Help="Activates the selected element(s)";
SWKHmiCommandHeader.DELMHmuContextualMenuActivateHdr.ShortHelp="Activates the selected element(s)";
SWKHmiCommandHeader.DELMHmuContextualMenuActivateHdr.LongHelp=
"This command activates the selected element(s).";

// Deactivate command
// ------------------
SWKHmiCommandHeader.DELMHmuContextualMenuDeactivateHdr.Title="Deactivate";
SWKHmiCommandHeader.DELMHmuContextualMenuDeactivateHdr.Help="Deactivates the selected element(s)";
SWKHmiCommandHeader.DELMHmuContextualMenuDeactivateHdr.ShortHelp="Deactivates the selected element(s)";
SWKHmiCommandHeader.DELMHmuContextualMenuDeactivateHdr.LongHelp=
"This command deactivates the selected element(s)";

// Edit command
// ------------
SWKHmiCommandHeader.DELMHmuContextualMenuEditHdr.Title="Edit";
SWKHmiCommandHeader.DELMHmuContextualMenuEditHdr.Help="Edit";
SWKHmiCommandHeader.DELMHmuContextualMenuEditHdr.ShortHelp="Edit";
SWKHmiCommandHeader.DELMHmuContextualMenuEditHdr.LongHelp=
"This command edit the selected element(s).";

// Define Load Offset command
// ----------------------------
SWKHmiCommandHeader.DELMHmuContextualMenuDefineLoadOffsetHdr.Title="Define Offset...";
SWKHmiCommandHeader.DELMHmuContextualMenuDefineLoadOffsetHdr.Help="Define a load offset";
SWKHmiCommandHeader.DELMHmuContextualMenuDefineLoadOffsetHdr.ShortHelp="Define a load offset";
SWKHmiCommandHeader.DELMHmuContextualMenuDefineLoadOffsetHdr.LongHelp=
"This command creates a Offset for the load.";

// Define command
// --------------
SWKHmiCommandHeader.DELMHmuContextualMenuDefinitionHdr.Title="Definition...";
SWKHmiCommandHeader.DELMHmuContextualMenuDefinitionHdr.Help="Definition";
SWKHmiCommandHeader.DELMHmuContextualMenuDefinitionHdr.ShortHelp="Definition";
SWKHmiCommandHeader.DELMHmuContextualMenuDefinitionHdr.LongHelp=
"This command defines the selected element.";

// Update command
// --------------
SWKHmiCommandHeader.DELMHmuContextualMenuUpdateHdr.Title="Update";
SWKHmiCommandHeader.DELMHmuContextualMenuUpdateHdr.Help="Updates the selected element(s)";
SWKHmiCommandHeader.DELMHmuContextualMenuUpdateHdr.ShortHelp="Update";
SWKHmiCommandHeader.DELMHmuContextualMenuUpdateHdr.LongHelp=
"This command updates the selected element(s).";

// View Report command
// -------------------
SWKHmiCommandHeader.DELMHmuContextualMenuShowLogHdr.Title="View";
SWKHmiCommandHeader.DELMHmuContextualMenuShowLogHdr.Help="Shows the selected report(s)";
SWKHmiCommandHeader.DELMHmuContextualMenuShowLogHdr.ShortHelp="View the report";
SWKHmiCommandHeader.DELMHmuContextualMenuShowLogHdr.LongHelp=
"This command shows the file(s) associated with the selected report(s).";

// Set Report Parameters command
// -----------------------------
SWKHmiCommandHeader.DELMHmuContextualMenuSetReportParamsHdr.Title="Define Input Parameters...";
SWKHmiCommandHeader.DELMHmuContextualMenuSetReportParamsHdr.Help="Define Input Parameters";
SWKHmiCommandHeader.DELMHmuContextualMenuSetReportParamsHdr.ShortHelp="Define Input Parameters";
SWKHmiCommandHeader.DELMHmuContextualMenuSetReportParamsHdr.LongHelp=
"This command edits the analyses parameters for the selected report.";

// Sitting Posture command
// -----------------------
SWKHmiCommandHeader.DELMHmuContextualMenuSittingHdr.Title="Sit";
SWKHmiCommandHeader.DELMHmuContextualMenuSittingHdr.Help="Sitting Posture";
SWKHmiCommandHeader.DELMHmuContextualMenuSittingHdr.ShortHelp="Sitting Posture";
SWKHmiCommandHeader.DELMHmuContextualMenuSittingHdr.LongHelp=
"This command makes the manikin sit.";

// Initial Posture command
// -----------------------
SWKHmiCommandHeader.DELMHmuContextualMenuInitialHdr.Title="Initial";
SWKHmiCommandHeader.DELMHmuContextualMenuInitialHdr.Help="Initial Posture";
SWKHmiCommandHeader.DELMHmuContextualMenuInitialHdr.ShortHelp="Initial Posture";
SWKHmiCommandHeader.DELMHmuContextualMenuInitialHdr.LongHelp=
"This command replaces the manikin in its initial posture.";

// FKMove command
// --------------
SWKHmiCommandHeader.DELMHmuFKMoveHdr.Title="Forward Kinematics...";
SWKHmiCommandHeader.DELMHmuFKMoveHdr.Help="Forward Kinematics";
SWKHmiCommandHeader.DELMHmuFKMoveHdr.ShortHelp="Forward Kinematics";
SWKHmiCommandHeader.DELMHmuFKMoveHdr.LongHelp=
"This command allows to move the manikin
segments in forward kinematics.";

// IK Worker Frame Mode command
// ----------------------------
SWKHmiCommandHeader.DELMHmuIKModeHdr.Title="IK Worker Frame Mode...";
SWKHmiCommandHeader.DELMHmuIKModeHdr.Help="Inverse Kinematics Worker Frame Mode";
SWKHmiCommandHeader.DELMHmuIKModeHdr.ShortHelp="Inverse Kinematics Worker Frame Mode";
SWKHmiCommandHeader.DELMHmuIKModeHdr.LongHelp=
"This command makes an automatic compass snap on the segment selected,
and activates the IK keeping the compass in the worker frame.";

// IK Segment Frame Mode command
// -----------------------------
SWKHmiCommandHeader.DELMHmuIKModeSegmentFrameHdr.Title="IK Segment Frame Mode...";
SWKHmiCommandHeader.DELMHmuIKModeSegmentFrameHdr.Help="Inverse Kinematics Segment Frame Mode";
SWKHmiCommandHeader.DELMHmuIKModeSegmentFrameHdr.ShortHelp="Inverse Kinematics Segment Frame Mode";
SWKHmiCommandHeader.DELMHmuIKModeSegmentFrameHdr.LongHelp=
"This command makes an automatic compass snap on the segment selected,
and activates the IK keeping the compass in the segment frame.";

// Place Mode command
// ------------------
SWKHmiCommandHeader.DELMHmuPlaceModeHdr.Title="Place Mode...";
SWKHmiCommandHeader.DELMHmuPlaceModeHdr.Help="Place Mode";
SWKHmiCommandHeader.DELMHmuPlaceModeHdr.ShortHelp="Place Mode";
SWKHmiCommandHeader.DELMHmuPlaceModeHdr.LongHelp=
"This command automatically places the manikin at the compass location.";

// Place Mode command (new)
// ------------------------
SWKHmiCommandHeader.DELMHmuPlaceAutoCompassModeHdr.Title="Place Mode...";
SWKHmiCommandHeader.DELMHmuPlaceAutoCompassModeHdr.Help="Place Mode";
SWKHmiCommandHeader.DELMHmuPlaceAutoCompassModeHdr.ShortHelp="Place Mode";
SWKHmiCommandHeader.DELMHmuPlaceAutoCompassModeHdr.LongHelp=
"This command automatically places the compass and place the manikin at the compass location.";

// Place Mode command (Z Plane)
// ----------------------------
SWKHmiCommandHeader.DELMHmuPlaceZAutoCompassModeHdr.Title="Place Mode (Z only)...";
SWKHmiCommandHeader.DELMHmuPlaceZAutoCompassModeHdr.Help="Place Mode (Z only)";
SWKHmiCommandHeader.DELMHmuPlaceZAutoCompassModeHdr.ShortHelp="Place Mode (Z only)";
SWKHmiCommandHeader.DELMHmuPlaceZAutoCompassModeHdr.LongHelp=
"This command automatically places the compass and place the manikin at the compass Z-coordinate location.";

// Manikin Display command
// -----------------------
SWKHmiCommandHeader.DELMHmuManikinDisplayHdr.Title="Display...";
SWKHmiCommandHeader.DELMHmuManikinDisplayHdr.Help="Manikin Display Attributes";
SWKHmiCommandHeader.DELMHmuManikinDisplayHdr.ShortHelp="Changes the display of a manikin";
SWKHmiCommandHeader.DELMHmuManikinDisplayHdr.LongHelp=
"This command shows or hides segments, ellipses, surfaces,
center of gravity and lines of sight on the chosen manikin.";

// Manikin IK Behaviors command
// ----------------------------
SWKHmiCommandHeader.DELMHmuIKBehaviorsHdr.Title="IK Behaviors...";
SWKHmiCommandHeader.DELMHmuIKBehaviorsHdr.Help="IK Behaviors";
SWKHmiCommandHeader.DELMHmuIKBehaviorsHdr.ShortHelp="IK Behaviors";
SWKHmiCommandHeader.DELMHmuIKBehaviorsHdr.LongHelp=
"This command allows to change the IK Behaviors of an existing manikin";

// Segment Texture command
// -----------------------
SWKHmiCommandHeader.DELMHmuSegmentTextureHdr.Title="Segment Texture";
SWKHmiCommandHeader.DELMHmuSegmentTextureHdr.Help="Applies a texture";
SWKHmiCommandHeader.DELMHmuSegmentTextureHdr.ShortHelp="Applies a texture on a segment";
SWKHmiCommandHeader.DELMHmuSegmentTextureHdr.LongHelp=
"This command retrieves an existing texture stored in
a file and applies it on the chosen segment of a manikin.";

// Manikin Part Memo command
// --------------------------
SWKHmiCommandHeader.DELMHmuManikinPartMemoHdr.Title="Descriptions...";
SWKHmiCommandHeader.DELMHmuManikinPartMemoHdr.Help="Adds a description to a manikin object";
SWKHmiCommandHeader.DELMHmuManikinPartMemoHdr.ShortHelp=
"Adds a description to a manikin object";
SWKHmiCommandHeader.DELMHmuManikinPartMemoHdr.LongHelp=
"This command allows to add descriptions to a
manikin, a posture, an anthropometry or a vision.";

// Anthropometry command
// ---------------------
SWKHmiCommandHeader.DELMHmuManikinAnthropometryHdr.Title="Anthropometry";
SWKHmiCommandHeader.DELMHmuManikinAnthropometryHdr.Help="Anthropometry";
SWKHmiCommandHeader.DELMHmuManikinAnthropometryHdr.ShortHelp="Opens the Human Measurements Editor workbench";
SWKHmiCommandHeader.DELMHmuManikinAnthropometryHdr.LongHelp=
"This command opens a workbench in which you
can modify the anthropometry of the selected manikin.";

// BodyElements command
// --------------------
SWKHmiCommandHeader.DELMHmuBodyElementsHdr.Title="Posture Analysis";
SWKHmiCommandHeader.DELMHmuBodyElementsHdr.Help="Posture Analysis";
SWKHmiCommandHeader.DELMHmuBodyElementsHdr.ShortHelp="Opens the Human Posture Analysis workbench";
SWKHmiCommandHeader.DELMHmuBodyElementsHdr.LongHelp=
"This command opens the Human Posture Analysis workbench on the activated segment.";

// Activity Analysis command
// --------------------
SWKHmiCommandHeader.DELMEauHAAHdr.Title="Activity Analysis";
SWKHmiCommandHeader.DELMEauHAAHdr.Help="Activity Analysis";
SWKHmiCommandHeader.DELMEauHAAHdr.ShortHelp="Opens the Human Activity Analysis workbench";
SWKHmiCommandHeader.DELMEauHAAHdr.LongHelp=
"This command opens the Human Activity Analysis workbench on the activated segment.";

// Vision command
// --------------
SWKHmiCommandHeader.DELMHmuManikinVisionHdr.Title="Vision...";
SWKHmiCommandHeader.DELMHmuManikinVisionHdr.Help="Open Vision Window";
SWKHmiCommandHeader.DELMHmuManikinVisionHdr.ShortHelp="Open Vision Window";
SWKHmiCommandHeader.DELMHmuManikinVisionHdr.LongHelp=
"This command opens a window in which you can
modify the vision parameters of the desired manikin.";

// Reach Mode (old)
// ----------------
SWKHmiCommandHeader.DELMHmuReachModeHdr.Title="Reach Mode";
SWKHmiCommandHeader.DELMHmuReachModeHdr.Help="Reach Mode";
SWKHmiCommandHeader.DELMHmuReachModeHdr.ShortHelp="Reach Mode";
SWKHmiCommandHeader.DELMHmuReachModeHdr.LongHelp=
"This command makes use the inverse kinematics (IK)
to make the manikin reach a specific target object.";

// Reach Mode (position only)
// --------------------------
SWKHmiCommandHeader.DELMHmuReachModeDirectionHdr.Title="Reach (position only)...";
SWKHmiCommandHeader.DELMHmuReachModeDirectionHdr.Help="Reach (position only)";
SWKHmiCommandHeader.DELMHmuReachModeDirectionHdr.ShortHelp="Reach (position only)";
SWKHmiCommandHeader.DELMHmuReachModeDirectionHdr.LongHelp=
"This command makes use the inverse kinematics (IK) to make the manikin
reach a specific target object, using position of the compass only.";

// Reach Mode (position & orientation)
// -----------------------------------
SWKHmiCommandHeader.DELMHmuReachModeFrameHdr.Title="Reach (position & orientation)...";
SWKHmiCommandHeader.DELMHmuReachModeFrameHdr.Help="Reach (position & orientation)";
SWKHmiCommandHeader.DELMHmuReachModeFrameHdr.ShortHelp="Reach (position & orientation)";
SWKHmiCommandHeader.DELMHmuReachModeFrameHdr.LongHelp=
"This command makes use the inverse kinematics (IK) to make the manikin
reach a specific target object, using 3 directions of the compass.";

// StandardPose command
// --------------------
SWKHmiCommandHeader.DELMHmuManikinStandardPoseHdr.Title="Standard Pose...";
SWKHmiCommandHeader.DELMHmuManikinStandardPoseHdr.Help="Standard Pose";
SWKHmiCommandHeader.DELMHmuManikinStandardPoseHdr.ShortHelp="Standard Pose";
SWKHmiCommandHeader.DELMHmuManikinStandardPoseHdr.LongHelp=
"This command applies standard postures on a manikin.";

// Attach/Detach command
// ---------------------
SWKHmiCommandHeader.DELMHmuSegmentAttachHdr.Title="Attach/Detach";
SWKHmiCommandHeader.DELMHmuSegmentAttachHdr.Help="Attach/Detach";
SWKHmiCommandHeader.DELMHmuSegmentAttachHdr.ShortHelp="Attach/Detach";
SWKHmiCommandHeader.DELMHmuSegmentAttachHdr.LongHelp=
"This command attaches or detaches an existing
 geometry to/from the selected segment.";

// Restore Position command
// ------------------------
SWKHmiCommandHeader.DELMHmuRestorePositionHdr.Title="Restore Position";
SWKHmiCommandHeader.DELMHmuRestorePositionHdr.Help="Restore Position";
SWKHmiCommandHeader.DELMHmuRestorePositionHdr.ShortHelp="Restore Position";
SWKHmiCommandHeader.DELMHmuRestorePositionHdr.LongHelp=
"This command restores the position an object had the first time it was attached.";

// Reach Envelope command
// ----------------------
SWKHmiCommandHeader.DELMHmuReachEnvelopeHdr.Title="Reach Envelope...";
SWKHmiCommandHeader.DELMHmuReachEnvelopeHdr.Help="Computes a reach envelope";
SWKHmiCommandHeader.DELMHmuReachEnvelopeHdr.ShortHelp="Computes a reach envelope";
SWKHmiCommandHeader.DELMHmuReachEnvelopeHdr.LongHelp=
"This command computes and displays the
reach envelope for the selected manikin.";

// Delete Reach Envelope command
// -----------------------------
SWKHmiCommandHeader.DELMHmuReachEnvDestroyHdr.Title="Delete";
SWKHmiCommandHeader.DELMHmuReachEnvDestroyHdr.Help="Deletes the reach envelope";
SWKHmiCommandHeader.DELMHmuReachEnvDestroyHdr.ShortHelp="Deletes the reach envelope";
SWKHmiCommandHeader.DELMHmuReachEnvDestroyHdr.LongHelp=
"This command deletes the selected reach envelope.";

// AnthroGenderMan command
// -----------------------
SWKHmiCommandHeader.DELMHmuAnthroGenderManHdr.Title="Male";
SWKHmiCommandHeader.DELMHmuAnthroGenderManHdr.Help="Switches gender to male";
SWKHmiCommandHeader.DELMHmuAnthroGenderManHdr.ShortHelp="Switches gender to male";
SWKHmiCommandHeader.DELMHmuAnthroGenderManHdr.LongHelp=
"This command switches the gender of the current manikin to male.";

// AnthroGenderWoman command
// -------------------------
SWKHmiCommandHeader.DELMHmuAnthroGenderWomanHdr.Title="Female";
SWKHmiCommandHeader.DELMHmuAnthroGenderWomanHdr.Help="Switches gender to female";
SWKHmiCommandHeader.DELMHmuAnthroGenderWomanHdr.ShortHelp="Switches gender to female";
SWKHmiCommandHeader.DELMHmuAnthroGenderWomanHdr.LongHelp=
"This command switches the gender of the current manikin to female.";

// AnthroPopulation command
// ------------------------
SWKHmiCommandHeader.DELMHmuAnthroPopulationHdr.Title = "Population...";
SWKHmiCommandHeader.DELMHmuAnthroPopulationHdr.Help = "Changes the population";
SWKHmiCommandHeader.DELMHmuAnthroPopulationHdr.ShortHelp = "Population";
SWKHmiCommandHeader.DELMHmuAnthroPopulationHdr.LongHelp =
"This command changes the population currently used by this manikin.";

// AnthroConstructionTypeStand command
// -----------------------------------
SWKHmiCommandHeader.DELMHmuAnthroConstructionTypeStandHdr.Title="Anthro Construction Type Stand";
SWKHmiCommandHeader.DELMHmuAnthroConstructionTypeStandHdr.Help="Changes the construction type to 'Stand'";
SWKHmiCommandHeader.DELMHmuAnthroConstructionTypeStandHdr.ShortHelp="Changes the construction type to 'Stand'";
SWKHmiCommandHeader.DELMHmuAnthroConstructionTypeStandHdr.LongHelp=
"This command creates an anthropometry adapted
for tasks where the subject remains standing.";

// AnthroConstructionTypeSit command
// ---------------------------------
SWKHmiCommandHeader.DELMHmuAnthroConstructionTypeSitHdr.Title="Anthro Construction Type Sit";
SWKHmiCommandHeader.DELMHmuAnthroConstructionTypeSitHdr.Help="Changes the construction type to 'Sit'";
SWKHmiCommandHeader.DELMHmuAnthroConstructionTypeSitHdr.ShortHelp="Changes the construction type to 'Sit'";
SWKHmiCommandHeader.DELMHmuAnthroConstructionTypeSitHdr.LongHelp=
"This command creates an anthropometry adapted
for tasks where the subject remains seated.";

// PostureStand command
// --------------------
SWKHmiCommandHeader.DELMHmuPostureStandHdr.Title = "Stand";
SWKHmiCommandHeader.DELMHmuPostureStandHdr.Help = "Applies a standing posture";
SWKHmiCommandHeader.DELMHmuPostureStandHdr.ShortHelp = "Applies a standing posture";
SWKHmiCommandHeader.DELMHmuPostureStandHdr.LongHelp =
"This command applies a standing posture.";

// PostureSit command
// ------------------
SWKHmiCommandHeader.DELMHmuPostureSitHdr.Title = "Sit";
SWKHmiCommandHeader.DELMHmuPostureSitHdr.Help = "Applies a sitting posture";
SWKHmiCommandHeader.DELMHmuPostureSitHdr.ShortHelp = "Applies a sitting posture";
SWKHmiCommandHeader.DELMHmuPostureSitHdr.LongHelp =
"This command applies a sitting posture.";

// PostureReach command
// --------------------
SWKHmiCommandHeader.DELMHmuPostureReachHdr.Title = "Reach";
SWKHmiCommandHeader.DELMHmuPostureReachHdr.Help = "Applies a reaching posture";
SWKHmiCommandHeader.DELMHmuPostureReachHdr.ShortHelp = "Applies a reaching posture";
SWKHmiCommandHeader.DELMHmuPostureReachHdr.LongHelp =
"This command applies a reaching posture.";

// PostureExtendedReach command
// ----------------------------
SWKHmiCommandHeader.DELMHmuPostureExtendedReachHdr.Title = "Extended Reach";
SWKHmiCommandHeader.DELMHmuPostureExtendedReachHdr.Help = "Applies the 'Extended Reach' posture";
SWKHmiCommandHeader.DELMHmuPostureExtendedReachHdr.ShortHelp = "Applies the 'Extended Reach' posture";
SWKHmiCommandHeader.DELMHmuPostureExtendedReachHdr.LongHelp =
"This command applies the 'Extended Reach' posture.";

// PostureSpan command
// -------------------
SWKHmiCommandHeader.DELMHmuPostureSpanHdr.Title = "Span";
SWKHmiCommandHeader.DELMHmuPostureSpanHdr.Help = "Applies the 'Span' posture";
SWKHmiCommandHeader.DELMHmuPostureSpanHdr.ShortHelp = "Applies the 'Span' posture";
SWKHmiCommandHeader.DELMHmuPostureSpanHdr.LongHelp =
"This command applies the 'Span' posture.";

// AnthroDisplay command
// ---------------------
SWKHmiCommandHeader.DELMHmuAnthroDisplayHdr.Title = "Display...";
SWKHmiCommandHeader.DELMHmuAnthroDisplayHdr.Help = "Changes manikins display attributes.";
SWKHmiCommandHeader.DELMHmuAnthroDisplayHdr.ShortHelp = "Display";
SWKHmiCommandHeader.DELMHmuAnthroDisplayHdr.LongHelp =
"This command changes the display attributes for a manikin.";

// AnthroMemo command
// ------------------
SWKHmiCommandHeader.DELMHmuAnthroMemoHdr.Title = "Descriptions...";
SWKHmiCommandHeader.DELMHmuAnthroMemoHdr.Help = "Edits Descriptions";
SWKHmiCommandHeader.DELMHmuAnthroMemoHdr.ShortHelp = "Descriptions";
SWKHmiCommandHeader.DELMHmuAnthroMemoHdr.LongHelp =
"This command allows to records information on the anthropometry.";

// AnthroReset command
// -------------------
SWKHmiCommandHeader.DELMHmuAnthroResetHdr.Title = "Reset";
SWKHmiCommandHeader.DELMHmuAnthroResetHdr.Help = "Resets all variables to automatic";
SWKHmiCommandHeader.DELMHmuAnthroResetHdr.ShortHelp = "Reset";
SWKHmiCommandHeader.DELMHmuAnthroResetHdr.LongHelp =
"This command resets all variables to automatic.";

// AnthroInterpol command
// ----------------------
SWKHmiCommandHeader.DELMHmuAnthroInterpolHdr.Title = "Interpolation...";
SWKHmiCommandHeader.DELMHmuAnthroInterpolHdr.Help = "Sets the interpolation mode of the anthropometric solver";
SWKHmiCommandHeader.DELMHmuAnthroInterpolHdr.ShortHelp = "Interpolation";
SWKHmiCommandHeader.DELMHmuAnthroInterpolHdr.LongHelp =
"This command sets the interpolation mode of the anthropometric solver.";

// AnthroGround command
// --------------------
SWKHmiCommandHeader.AnthroGround.Help="Shows/hides horizontal ground";
SWKHmiCommandHeader.AnthroGround.ShortHelp="Horizontal ground";
SWKHmiCommandHeader.AnthroGround.LongHelp =
"Ground.
Shows or hides the horizontal ground.";

// AnthroEditList command
// ----------------------
SWKHmiCommandHeader.DELMHmuAnthroEditListHdr.Title = "Variable List...";
SWKHmiCommandHeader.DELMHmuAnthroEditListHdr.Help = "Displays the variable list";
SWKHmiCommandHeader.DELMHmuAnthroEditListHdr.ShortHelp = "Displays the variable list";
SWKHmiCommandHeader.DELMHmuAnthroEditListHdr.LongHelp =
"List.
Shows the variable window in which you can
view the names of the variables corresponding
to the arrows.
You can also use this window to change the
values of these variables";

// AnthroEditFilter command
// ------------------------
SWKHmiCommandHeader.DELMHmuAnthroEditFilterHdr.Title = "Filter...";
SWKHmiCommandHeader.DELMHmuAnthroEditFilterHdr.Help = "Edits the Variable Filter";
SWKHmiCommandHeader.DELMHmuAnthroEditFilterHdr.ShortHelp = "Filter";
SWKHmiCommandHeader.DELMHmuAnthroEditFilterHdr.LongHelp =
"Edit Filter.
Opens the filter window, which helps manage
the display of the variables depending on
their type, body part, and user/system
management.";

// Exit to Manikin Wks command
// ---------------------------
SWKHmiCommandHeader.DELMHmuExitToManikinWksHdr.Title="Exit Workbench";
SWKHmiCommandHeader.DELMHmuExitToManikinWksHdr.Help="Returns to the previous workbench";
SWKHmiCommandHeader.DELMHmuExitToManikinWksHdr.ShortHelp="Returns to the previous workbench";
SWKHmiCommandHeader.DELMHmuExitToManikinWksHdr.LongHelp=
"This command is used to leave the current workbench and return to the previous one.";

// Load catalog command
// --------------------
SWKHmiCommandHeader.DELMHmuLoadFromSWLibraryHdr.Title="Load manikin's attributes from a catalog...";
SWKHmiCommandHeader.DELMHmuLoadFromSWLibraryHdr.Help="Load manikin's attributes from a catalog";
SWKHmiCommandHeader.DELMHmuLoadFromSWLibraryHdr.ShortHelp="Load manikin's attributes from a catalog";
SWKHmiCommandHeader.DELMHmuLoadFromSWLibraryHdr.LongHelp=
"This command load manikin's attributes from a catalog.";

// Save catalog command
// --------------------
SWKHmiCommandHeader.DELMHmuSaveInSWLibraryHdr.Title="Save manikin's attributes in catalog...";
SWKHmiCommandHeader.DELMHmuSaveInSWLibraryHdr.Help="Save manikin's attributes in catalog";
SWKHmiCommandHeader.DELMHmuSaveInSWLibraryHdr.ShortHelp="Save manikin's attributes in catalog";
SWKHmiCommandHeader.DELMHmuSaveInSWLibraryHdr.LongHelp=
"This command allows to save manikin's attributes in catalog.";

// Edit Angular Limitation command
// -------------------------------
SWKHmiCommandHeader.DELMHmuEditAngularLimitationHdr.Title="Angular Limitations...";
SWKHmiCommandHeader.DELMHmuEditAngularLimitationHdr.Help="Edits the angular limitations and the preferred angles";
SWKHmiCommandHeader.DELMHmuEditAngularLimitationHdr.ShortHelp="Edits the angular limitations and the preferred angles";
SWKHmiCommandHeader.DELMHmuEditAngularLimitationHdr.LongHelp=
"This command allows the edition of the mobility of a degree of freedom.";

// Set Best Angular Limitation Angle command
// -----------------------------------------
SWKHmiCommandHeader.DELMHmuSetBestAngularLimitationHdr.Title="Optimize Limitations...";
SWKHmiCommandHeader.DELMHmuSetBestAngularLimitationHdr.Help="Optimizes the angular limitations according to the best preferred angles";
SWKHmiCommandHeader.DELMHmuSetBestAngularLimitationHdr.ShortHelp="Optimizes the angular limitations according to the best preferred angles";
SWKHmiCommandHeader.DELMHmuSetBestAngularLimitationHdr.LongHelp=
"This command sets the angular limitations to match the best preferred angle.";

// Set Angular Limitation As Percentile command
// --------------------------------------------
SWKHmiCommandHeader.DELMHmuSetAngLimAsPercHdr.Title="Set Angular Limitations with Percentage...";
SWKHmiCommandHeader.DELMHmuSetAngLimAsPercHdr.Help="Sets the angular limitations according to a percentage value";
SWKHmiCommandHeader.DELMHmuSetAngLimAsPercHdr.ShortHelp="Sets the angular limitations according to a percentage between 0 and 100";
SWKHmiCommandHeader.DELMHmuSetAngLimAsPercHdr.LongHelp=
"This command can be used to set angular limitations of a DOF according to a percentage value (between 0 and 100)";

// Lock DOF command
// ----------------
SWKHmiCommandHeader.DELMHmuLockDOFHdr.Title="Lock DOF...";
SWKHmiCommandHeader.DELMHmuLockDOFHdr.Help="Locks the active DOF";
SWKHmiCommandHeader.DELMHmuLockDOFHdr.ShortHelp="Locks the active DOF";
SWKHmiCommandHeader.DELMHmuLockDOFHdr.LongHelp=
"This command locks the active degree of freedom of all segments in the current selection.";

// Remove Limitations command
// --------------------------
SWKHmiCommandHeader.DELMHmuNoLimitsHdr.Title="Remove angular limitations...";
SWKHmiCommandHeader.DELMHmuNoLimitsHdr.Help="Removes the angular limitations";
SWKHmiCommandHeader.DELMHmuNoLimitsHdr.ShortHelp="Removes the angular limitations";
SWKHmiCommandHeader.DELMHmuNoLimitsHdr.LongHelp=
"This command removes the angular limitations of all segments in the current selection.";

// Reset DOF command
// -----------------
SWKHmiCommandHeader.DELMHmuResetHdr.Title="Reset angular limitations...";
SWKHmiCommandHeader.DELMHmuResetHdr.Help="Reset angular limitations";
SWKHmiCommandHeader.DELMHmuResetHdr.ShortHelp="Reset angular limitations";
SWKHmiCommandHeader.DELMHmuResetHdr.LongHelp=
"This command bring back the values that it had before being locked or removed or set back to the default values.";

// Customized Joint command
// ------------------------
SWKHmiCommandHeader.DELMHmuCustomizedJointHdr.Title="Customized Joint...";
SWKHmiCommandHeader.DELMHmuCustomizedJointHdr.Help="Customized Joint";
SWKHmiCommandHeader.DELMHmuCustomizedJointHdr.ShortHelp="Customized Joint";
SWKHmiCommandHeader.DELMHmuCustomizedJointHdr.LongHelp=
"Customized Joint...";

// PosturalScore command
// ---------------------
SWKHmiCommandHeader.DELMHmuPosturalScoreHdr.Title="Postural Score...";
SWKHmiCommandHeader.DELMHmuPosturalScoreHdr.Help="Opens the Postural Score Panel";
SWKHmiCommandHeader.DELMHmuPosturalScoreHdr.ShortHelp="Opens the Postural Score Panel";
SWKHmiCommandHeader.DELMHmuPosturalScoreHdr.LongHelp=
"This command opens the Postural Score analysis panel.";

// SetToBestPosture command
// ------------------------
SWKHmiCommandHeader.DELMHmuSetToBestPostureHdr.Title="Find Best Posture";
SWKHmiCommandHeader.DELMHmuSetToBestPostureHdr.Help="Finds the posture which maximizes the postural score";
SWKHmiCommandHeader.DELMHmuSetToBestPostureHdr.ShortHelp="Finds the posture which maximizes the postural score";
SWKHmiCommandHeader.DELMHmuSetToBestPostureHdr.LongHelp=
"This command puts the current manikin in the posture which maximizes the postural score
(See the 'Postural Score' command for details).";

// Shuttle command
// ---------------
SWKHmiCommandHeader.DELMHmuManikinShuttleHdr.Title="Shuttle";
SWKHmiCommandHeader.DELMHmuManikinShuttleHdr.Help="Edits a group of objects you want to move";
SWKHmiCommandHeader.DELMHmuManikinShuttleHdr.ShortHelp="Shuttle";
SWKHmiCommandHeader.DELMHmuManikinShuttleHdr.LongHelp="Edits a group of objects you want to move";

// Manikin simulation command
// --------------------------
SWKHmiCommandHeader.DELMHmuManikinSimulationHdr.Title="Simulation";
SWKHmiCommandHeader.DELMHmuManikinSimulationHdr.Help="Edits shuttle and kinematic Simulations according to clash specifications";
SWKHmiCommandHeader.DELMHmuManikinSimulationHdr.ShortHelp="Simulation";
SWKHmiCommandHeader.DELMHmuManikinSimulationHdr.LongHelp="Edits shuttle and kinematic Simulations according to clash specifications";

// Generate Replay command
// -----------------------
SWKHmiCommandHeader.DELMHmuCompileManikinHdr.Title="Generate Replay";
SWKHmiCommandHeader.DELMHmuCompileManikinHdr.Help="Generates a replay";
SWKHmiCommandHeader.DELMHmuCompileManikinHdr.ShortHelp="Generate Replay";
SWKHmiCommandHeader.DELMHmuCompileManikinHdr.LongHelp="Generates a replay from a simulation";

// Generate Video command
// ----------------------
SWKHmiCommandHeader.DELMHmuVideoCompilatorHdr.Title="Generate Video";
SWKHmiCommandHeader.DELMHmuVideoCompilatorHdr.Help="Generates a video";
SWKHmiCommandHeader.DELMHmuVideoCompilatorHdr.ShortHelp="Generate Video";
SWKHmiCommandHeader.DELMHmuVideoCompilatorHdr.LongHelp="Generates a video from a simulation";

// Replay command
// --------------
SWKHmiCommandHeader.DELMHmuReplayManikinHdr.Title="Replay";
SWKHmiCommandHeader.DELMHmuReplayManikinHdr.Help="Plays a recorded Simulation";
SWKHmiCommandHeader.DELMHmuReplayManikinHdr.ShortHelp="Replay";
SWKHmiCommandHeader.DELMHmuReplayManikinHdr.LongHelp="Plays a recorded Simulation";

// Track command
// -------------
SWKHmiCommandHeader.CATFisTrackHdr.Title="Track";
SWKHmiCommandHeader.CATFisTrackHdr.Help="Edits the track of a moving object";
SWKHmiCommandHeader.CATFisTrackHdr.ShortHelp="Track";
SWKHmiCommandHeader.CATFisTrackHdr.LongHelp="Edits the track of a moving object";

// Player command
// --------------
SWKHmiCommandHeader.Player.Title="Player";
SWKHmiCommandHeader.Player.Help="Plays a Simulation";
SWKHmiCommandHeader.Player.ShortHelp="Play a Simulation";
SWKHmiCommandHeader.Player.LongHelp="Plays a simulation";

// Space measure command
// ---------------------
SWKHmiCommandHeader.DELMHmuSpaceMeasureManikinHdr.Title="Distance and Band Analysis";
SWKHmiCommandHeader.DELMHmuSpaceMeasureManikinHdr.Help="Measures the distance between and runs band analysis on selected products";
SWKHmiCommandHeader.DELMHmuSpaceMeasureManikinHdr.ShortHelp="Distance and Band Analysis";
SWKHmiCommandHeader.DELMHmuSpaceMeasureManikinHdr.LongHelp="Measures the distance between and runs band analysis on selected products";

// Space measure Arc command
// -------------------------
SWKHmiCommandHeader.DELMHmuSpaceMeasureArcManikinHdr.Title="Arc through Three Points";
SWKHmiCommandHeader.DELMHmuSpaceMeasureArcManikinHdr.Help="Measures length, radius and angle of an arc drawn through three points";
SWKHmiCommandHeader.DELMHmuSpaceMeasureArcManikinHdr.ShortHelp="Arc through Three Points";
SWKHmiCommandHeader.DELMHmuSpaceMeasureArcManikinHdr.LongHelp="Measures length, radius and angle of an arc drawn through three points";

// Space measure Between command
// -----------------------------
SWKHmiCommandHeader.DELMHmuSpaceMeasureBetweenManikinHdr.Title="Measure Between";
SWKHmiCommandHeader.DELMHmuSpaceMeasureBetweenManikinHdr.Help="Measures the distance and angle between two items";
SWKHmiCommandHeader.DELMHmuSpaceMeasureBetweenManikinHdr.ShortHelp="Measure Between";
SWKHmiCommandHeader.DELMHmuSpaceMeasureBetweenManikinHdr.LongHelp="Measures the distance and angle between two items";

// Space Clash command
// -------------------
SWKHmiCommandHeader.DELMHmuSpaceClashHdr.Title="Clash...";
SWKHmiCommandHeader.DELMHmuSpaceClashHdr.Help="Analyzes interferences between products";
SWKHmiCommandHeader.DELMHmuSpaceClashHdr.ShortHelp="Clash";
SWKHmiCommandHeader.DELMHmuSpaceClashHdr.LongHelp="Analyzes interferences between products";

// Clash Detection Off command
// ---------------------------
SWKHmiCommandHeader.CATDMUDynClashOff.Title="Clash Detection Off";
SWKHmiCommandHeader.CATDMUDynClashOff.ShortHelp="Clash Detection\n(Off)";
SWKHmiCommandHeader.CATDMUDynClashOff.Help="Deactivates automatic clash detection";
SWKHmiCommandHeader.CATDMUDynClashOff.LongHelp="Deactivates automatic clash detection for simulation";

// Clash Detection On command
// --------------------------
SWKHmiCommandHeader.CATDMUDynClashOn.Title="Clash Detection On";
SWKHmiCommandHeader.CATDMUDynClashOn.ShortHelp="Clash Detection\n(On)";
SWKHmiCommandHeader.CATDMUDynClashOn.Help="Activates automatic clash detection";
SWKHmiCommandHeader.CATDMUDynClashOn.LongHelp="Activates automatic clash detection for simulation";

// Clash Detection Stop command
// ----------------------------
SWKHmiCommandHeader.CATDMUDynClashStop.Title="Clash Detection Stop";
SWKHmiCommandHeader.CATDMUDynClashStop.ShortHelp="Clash Detection\n(Stop)";
SWKHmiCommandHeader.CATDMUDynClashStop.Help="Activates automatic clash detection on stop mode";
SWKHmiCommandHeader.CATDMUDynClashStop.LongHelp="Activates automatic clash detection stop mode for simulation";

// Catalog Browser command
// -----------------------
SWKHmiCommandHeader.DELMHmuCatalogBrowserHdr.Title="Products and Resources Catalog Browser...";
SWKHmiCommandHeader.DELMHmuCatalogBrowserHdr.Help="Opens the catalog browser";
SWKHmiCommandHeader.DELMHmuCatalogBrowserHdr.ShortHelp="Opens the catalog browser";
SWKHmiCommandHeader.DELMHmuCatalogBrowserHdr.LongHelp=
"This command is used to import products and resources from a catalog.";

// Swept Volume command
// --------------------
SWKHmiCommandHeader.DELMHmuSweptVolumeHdr.Title="Swept Volume...";
SWKHmiCommandHeader.DELMHmuSweptVolumeHdr.Help="Creates a swept volume from manikin movements";
SWKHmiCommandHeader.DELMHmuSweptVolumeHdr.ShortHelp="Creates a swept volume from manikin movements";
SWKHmiCommandHeader.DELMHmuSweptVolumeHdr.LongHelp=
"This command is used to create a swept volume from a manikin and insert this volume in the active document.";

// Export Manikin command
// --------------------
SWKHmiCommandHeader.DELMHmuExportManikinRepHdr.Title="Export Manikin...";
SWKHmiCommandHeader.DELMHmuExportManikinRepHdr.Help="Exports the viewer of the manikin";
SWKHmiCommandHeader.DELMHmuExportManikinRepHdr.ShortHelp="Exports the viewer of the manikin";
SWKHmiCommandHeader.DELMHmuExportManikinRepHdr.LongHelp=
"This command is used to export the viewer of the manikin(s) in the selected format in another document.";

// Snap command
// ------------
SWKHmiCommandHeader.SnapResourcesHdr.Title="Snap";
SWKHmiCommandHeader.SnapResourcesHdr.Help="Snap/Constraint an object at selected location and orientation.";
SWKHmiCommandHeader.SnapResourcesHdr.ShortHelp="Snap";
SWKHmiCommandHeader.SnapResourcesHdr.LongHelp="Snap/Constraint an object at selected location and orientation.";

// Snap 3 Points command
// ---------------------
SWKHmiCommandHeader.Snap3PointsHdr.Title="Snap Three Points";
SWKHmiCommandHeader.Snap3PointsHdr.Help="Snap Three Points.";
SWKHmiCommandHeader.Snap3PointsHdr.ShortHelp="Snap Three Points";
SWKHmiCommandHeader.Snap3PointsHdr.LongHelp="Snap Three Points.";

// Snap Center of Polygon command
// ------------------------------
SWKHmiCommandHeader.SnapCenterPolygonHdr.Title="Snap Center of Polygon";
SWKHmiCommandHeader.SnapCenterPolygonHdr.Help="Snap Center of Polygon.";
SWKHmiCommandHeader.SnapCenterPolygonHdr.ShortHelp="Snap Center of Polygon";
SWKHmiCommandHeader.SnapCenterPolygonHdr.LongHelp="Snap Center of Polygon.";

// Snap Surface command
// --------------------
SWKHmiCommandHeader.SnapSurfaceHdr.Title="Snap Surface";
SWKHmiCommandHeader.SnapSurfaceHdr.Help="Snap Surface.";
SWKHmiCommandHeader.SnapSurfaceHdr.ShortHelp="Snap Surface";
SWKHmiCommandHeader.SnapSurfaceHdr.LongHelp="Snap Surface.";

// Quick Translate command
// -----------------------
SWKHmiCommandHeader.QuickTranslateHdr.Title="Quick Translate...";
SWKHmiCommandHeader.QuickTranslateHdr.Help="Quick Translate";
SWKHmiCommandHeader.QuickTranslateHdr.ShortHelp="Quick Translate";
SWKHmiCommandHeader.QuickTranslateHdr.LongHelp="Translate an object from one location to another.";

