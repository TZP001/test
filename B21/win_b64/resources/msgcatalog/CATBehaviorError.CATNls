//Les Binds 
BindReachItself.Request.Expert="Input Error.";	
BindReachItself.Diagnostic.Expert="Result of the Bind is the Bind itself.";
BindReachItself.Advice.Expert ="Check your input.";
BindReachItself.Request.User="Input Error";
BindReachItself.Diagnostic.User="Result of the Bind is the Bind itself.";
BindReachItself.Advice.User="Contact your expert.";

BindReachNothing.Request.Expert="Input Error.";	
BindReachNothing.Diagnostic.Expert="Bind cannot reach /p1 through the path /p2.";
BindReachNothing.Advice.Expert="Check your input and the avalaibility of /p1.";
BindReachNothing.Request.User="Input Error.";
BindReachNothing.Diagnostic.User="cannot reach /p1.";
BindReachNothing.Advice.User="if /p1 exists, contact your expert.";

// IN_Object lie mais non value
LinkedAndSeen.Request.Expert="Input error";
LinkedAndSeen.Diagnostic.Expert="The input /p1 is linked to the unset parameter /p2 of /p3.";
LinkedAndSeen.Advice.Expert="Check /p1.";

LinkedAndSeen.Request.User="Input error";
LinkedAndSeen.Diagnostic.User="The input /p1 is linked to the unset parameter /p2 of /p3.";
LinkedAndSeen.Advice.User="Check /p1.";

LinkedAndHidden.Request.Expert="Input error";
LinkedAndHidden.Diagnostic.Expert="The input /p1 is linked to an unset parameter.";
LinkedAndHidden.Advice.Expert="Check your input.";

LinkedAndHidden.Request.User="Input error";
LinkedAndHidden.Diagnostic.User="The input /p1 is linked to an unset parameter.";
LinkedAndHidden.Advice.User="Contact your expert.";

// Knowledge types incompatible
KnowledgeTypesError.Request.Expert="Knowledge types are not compatible";
KnowledgeTypesError.Diagnostic.Expert="Knowledge type \"/p2\" of attribute \"/p1\" is not compatible with type \"/p4\" of its value \"/p3\".";
KnowledgeTypesError.Advice.Expert="Check your input.";

KnowledgeTypesError.Request.User="Knowledge types are not compatible";
KnowledgeTypesError.Diagnostic.User="Knowledge type \"/p2\" of attribute \"/p1\" is not compatible with type \"/p4\" of its value \"/p3\".";
KnowledgeTypesError.Advice.User="Contact your expert.";

// Toutes les erreurs de typages
NotAFeature.Request.Expert="Execution Error";
NotAFeature.Diagnostic.Expert="Technological types can be added only on feature object.";
NotAFeature.Advice.Expert="Check your design.";

NotAFeature.Request.User="Execution Error";
NotAFeature.Diagnostic.User="Technological types can be added only on feature object.";
NotAFeature.Advice.User="Check your design.";

NotABehavingObject.Request.Expert="Execution Error";
NotABehavingObject.Diagnostic.Expert="/p1 does not support technological types.";
NotABehavingObject.Advice.Expert="Check your design.";

NotABehavingObject.Request.User="Execution Error";
NotABehavingObject.Diagnostic.User="/p1 does not support technological types.";
NotABehavingObject.Advice.User="Check your design.";

TypedReference.Request.Expert="Execution Error";
TypedReference.Diagnostic.Expert="/p1 is an instance of a reference already typed with /p2.";
TypedReference.Advice.Expert="Check your design.";

TypedReference.Request.User="Execution Error";
TypedReference.Diagnostic.User="/p1 is an instance of a reference already typed with /p2.";
TypedReference.Advice.User="Check your design.";


TypedInstance.Request.Expert="Execution Error";
TypedInstance.Diagnostic.Expert="/p1 is already typed with /p2 which is not compatible with /p3.";
TypedInstance.Advice.Expert="Check your design.";

TypedInstance.Request.User="Execution Error";
TypedInstance.Diagnostic.User="/p1 is already typed with /p2 which is not compatible with /p3.";
TypedInstance.Advice.User="Check your design.";

// erreur de compatibilite entre deux types 
// erreur de compatibilite entre deux types 
TypeDoesNotExist.Request="The type /p1 does not currently exist in the runtime view.";
TypeDoesNotExist.Diagnostic="";
TypeDoesNotExist.Advice="";

TypesNotCompatible.Request="The type /p1 is not compatible with /p2";
TypesNotCompatible.Diagnostic="";
TypesNotCompatible.Advice="";

