//=====================================================================================
//                          COPYRIGHT DASSAULT SYSTEMES 2002
//-------------------------------------------------------------------------------------
// Messages for CGM topologic cleaner rules
//-------------------------------------------------------------------------------------

// CATGeoClnTouchedResiduels

TRE_1_CHK.Short		= "Residual touched cells checking failed.";
TRE_1_CHK.Error		= "Residual touched cells on /p1 checking failed.";
TRE_1_CLN_OK.Short	= "Residual touched cells cleaning successful.";
TRE_1_CLN_OK.Error	= "Residual touched cells cleaning on /p1 successful.";
TRE_1_CLN_KO.Short	= "Residual touched cells cleaning failed.";
TRE_1_CLN_KO.Error	= "Residual touched cells cleaning on /p1 failed.";

ESH_1_CHK.Short		= "Edge sharpness checking failed.";
ESH_1_CHK.Error		= "Edge sharpness on /p1 checking failed.";
ESH_1_CLN_OK.Short	= "Edge sharpness cleaning successful.";
ESH_1_CLN_OK.Error	= "Edge sharpness cleaning on /p1 successful.";
ESH_1_CLN_KO.Short	= "Edge sharpness cleaning failed.";
ESH_1_CLN_KO.Error	= "Edge sharpness cleaning on /p1 failed.";

LYO_1_CHK.Short		= "Vertex LyingOn checking failed.";
LYO_1_CHK.Error		= "Vertex LyingOn on /p1 checking failed.";
LYO_1_CLN_OK.Short	= "Vertex LyingOn cleaning successful.";
LYO_1_CLN_OK.Error	= "Vertex LyingOn cleaning on /p1 successful.";
LYO_1_CLN_KO.Short	= "Vertex LyingOn cleaning failed.";
LYO_1_CLN_KO.Error	= "Vertex LyingOn cleaning on /p1 failed.";

LYO_2_CHK.Short		= "Edge LyingOn checking failed.";
LYO_2_CHK.Error		= "Edge LyingOn on /p1 checking failed.";
LYO_2_CLN_OK.Short	= "Edge LyingOn cleaning successful.";
LYO_2_CLN_OK.Error	= "Edge LyingOn cleaning on /p1 successful.";
LYO_2_CLN_KO.Short	= "Edge LyingOn cleaning failed.";
LYO_2_CLN_KO.Error	= "Edge LyingOn cleaning on /p1 failed.";

BOB_2_CHK.Short		= "Body bounding box checking failed.";
BOB_2_CHK.Error		= "Body bounding box on /p1 checking failed.";
BOB_2_CLN_OK.Short	= "Body bounding box cleaning successful.";
BOB_2_CLN_OK.Error	= "Body bounding box cleaning on /p1 successful.";
BOB_2_CLN_KO.Short	= "Body bounding box cleaning failed.";
BOB_2_CLN_KO.Error	= "Body bounding box cleaning on /p1 failed.";

FAI_1_CHK.Short		= "Face auto-intersection checking failed.";
FAI_1_CHK.Error		= "Face auto-intersection on /p1 checking failed.";
FAI_1_CLN_OK.Short	= "Face auto-intersection cleaning successful.";
FAI_1_CLN_OK.Error	= "Face auto-intersection cleaning on /p1 successful.";
FAI_1_CLN_KO.Short	= "Face auto-intersection cleaning failed.";
FAI_1_CLN_KO.Error	= "Face auto-intersection cleaning on /p1 failed.";

FEX_1_CHK.Short		= "Curve/Surface unextrapolation is needed.";
FEX_1_CHK.Error		= "/p1 needs Curve/Surface unextrapolation.";
FEX_1_CLN_OK.Short	= "Curve/Surface unextrapolation successful.";
FEX_1_CLN_OK.Error	= "Curve/Surface unextrapolation on /p1 successful.";
FEX_1_CLN_KO.Short	= "Curve/Surface unextrapolation failed.";
FEX_1_CLN_KO.Error	= "Curve/Surface unextrapolation on /p1 failed.";

FEX_2_CHK.Short		= "Curve/Surface unextrapolation is needed.";
FEX_2_CHK.Error		= "/p1 needs Curve/Surface unextrapolation.";
FEX_2_CLN_OK.Short	= "Curve/Surface unextrapolation successful.";
FEX_2_CLN_OK.Error	= "Curve/Surface unextrapolation on /p1 successful.";
FEX_2_CLN_KO.Short	= "Curve/Surface unextrapolation failed.";
FEX_2_CLN_KO.Error	= "Curve/Surface unextrapolation on /p1 failed.";

FVX_1_CHK.Short		= "Fat vertices cleaning is needed.";
FVX_1_CHK.Error		= "/p1 needs fat vertices cleaning.";
FVX_1_CLN_OK.Short	= "Fat vertices cleaning successful.";
FVX_1_CLN_OK.Error	= "Fat vertices cleaning on /p1 successful.";
FVX_1_CLN_KO.Short	= "Fat vertices cleaning failed.";
FVX_1_CLN_KO.Error	= "Fat vertices cleaning on /p1 failed.";

FVX_2_CHK.Short		= "Fat vertices cleaning is needed.";
FVX_2_CHK.Error		= "/p1 needs fat vertices cleaning.";
FVX_2_CLN_OK.Short	= "Fat vertices cleaning successful.";
FVX_2_CLN_OK.Error	= "Fat vertices cleaning on /p1 successful.";
FVX_2_CLN_KO.Short	= "Fat vertices cleaning failed.";
FVX_2_CLN_KO.Error	= "Fat vertices cleaning on /p1 failed.";

FGM_1_CHK.Short		= "Fat geometries cleaning is needed.";
FGM_1_CHK.Error		= "/p1 needs fat geometries cleaning.";
FGM_1_CLN_OK.Short	= "Fat geometries cleaning successful.";
FGM_1_CLN_OK.Error	= "Fat geometries cleaning on /p1 successful.";
FGM_1_CLN_KO.Short	= "Fat geometries cleaning failed.";
FGM_1_CLN_KO.Error	= "Fat geometries cleaning on /p1 failed.";

FGM_2_CHK.Short		= "Fat geometries cleaning is needed.";
FGM_2_CHK.Error		= "/p1 needs fat geometries cleaning.";
FGM_2_CLN_OK.Short	= "Fat geometries cleaning successful.";
FGM_2_CLN_OK.Error	= "Fat geometries cleaning on /p1 successful.";
FGM_2_CLN_KO.Short	= "Fat geometries cleaning failed.";
FGM_2_CLN_KO.Error	= "Fat geometries cleaning on /p1 failed.";

SCE_0_CHK.Short		= "Surface closure for Loop checking failed.";
SCE_0_CHK.Error		= "Surface closure for Loop /p1 checking failed.";
SCE_0_CLN_OK.Short	= "Surface closure for Loop cleaning successful.";
SCE_0_CLN_OK.Error	= "Surface closure for Loop cleaning on /p1 successful.";
SCE_0_CLN_KO.Short	= "Surface closure for Loop cleaning failed.";
SCE_0_CLN_KO.Error	= "Surface closure for Loop cleaning on /p1 failed.";

FED_1_CHK.Short		= "Fat edges cleaning is needed.";
FED_1_CHK.Error		= "/p1 needs fat edges cleaning.";
FED_1_CLN_OK.Short	= "Fat edges cleaning successful.";
FED_1_CLN_OK.Error	= "Fat edges cleaning on /p1 successful.";
FED_1_CLN_KO.Short	= "Fat edges cleaning failed.";
FED_1_CLN_KO.Error	= "Fat edges cleaning on /p1 failed.";

FED_2_CHK.Short		= "Fat edges cleaning is needed.";
FED_2_CHK.Error		= "/p1 needs fat edges cleaning.";
FED_2_CLN_OK.Short	= "Fat edges cleaning successful.";
FED_2_CLN_OK.Error	= "Fat edges cleaning on /p1 successful.";
FED_2_CLN_KO.Short	= "Fat edges cleaning failed.";
FED_2_CLN_KO.Error	= "Fat edges cleaning on /p1 failed.";

FED_3_CHK.Short		= "Fat edges cleaning is needed.";
FED_3_CHK.Error		= "/p1 needs fat edges cleaning.";
FED_3_CLN_OK.Short	= "Cleaning not implemented.";
FED_3_CLN_OK.Error	= "Cleaning not implemented.";
FED_3_CLN_KO.Short	= "Cleaning not implemented.";
FED_3_CLN_KO.Error	= "Cleaning not implemented.";

CWE_1_CHK.Short		= "Closed wire with edgecount > 1 checking failed.";
CWE_1_CHK.Error		= "Closed wire with edgecount > 1 on /p1 checking failed.";
CWE_1_CLN_OK.Short	= "Cleaning not implemented.";
CWE_1_CLN_OK.Error	= "Cleaning not implemented.";
CWE_1_CLN_KO.Short	= "Cleaning not implemented.";
CWE_1_CLN_KO.Error	= "Cleaning not implemented.";

INF_3_CHK.Short		= "Body Inside ModelSize checking failed.";
INF_3_CHK.Error		= "Body Inside ModelSize on /p1 checking failed.";
INF_3_CLN_OK.Short	= "Cleaning not implemented.";
INF_3_CLN_OK.Error	= "Cleaning not implemented.";
INF_3_CLN_KO.Short	= "Cleaning not implemented.";
INF_3_CLN_KO.Error	= "Cleaning not implemented.";

TEL_1_CHK.Short		= "Topological Edge Length > Resolution checking failed.";
TEL_1_CHK.Error		= "Topological Edge Length > Resolution on /p1 checking failed.";
TEL_1_CLN_OK.Short	= "Cleaning not implemented.";
TEL_1_CLN_OK.Error	= "Cleaning not implemented.";
TEL_1_CLN_KO.Short	= "Cleaning not implemented.";
TEL_1_CLN_KO.Error	= "Cleaning not implemented.";

EFL_0_CHK.Short		= "Only One Edge in a Full Loop checking failed.";
EFL_0_CHK.Error		= "Only One Edge in a Full Loop on /p1 checking failed.";
EFL_0_CLN_OK.Short	= "Cleaning not implemented.";
EFL_0_CLN_OK.Error	= "Cleaning not implemented.";
EFL_0_CLN_KO.Short	= "Cleaning not implemented.";
EFL_0_CLN_KO.Error	= "Cleaning not implemented.";
