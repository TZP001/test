//=======================================================================
// MODULE : V5ToV4ReportServices
//=======================================================================
//--------------------------------------
//  Messages from V5ToV4Report
//--------------------------------------
V5ToV4ReportServices.TooLargeGap1 = "Its gap ";
V5ToV4ReportServices.TooLargeGap2 = " is too large. Max value shoud be ";
V5ToV4ReportServices.TooSmallEdge = "The edge length is too small. Min value shoud be ";
V5ToV4ReportServices.SmallInvalidEdge = "The edge is not valid but it has been eliminated because its length is lower than ";
V5ToV4ReportServices.TooSmallSurface = "This surface has at least one too small border. Min value shoud be ";
V5ToV4ReportServices.TooLargeEdge = "The curve is out of V4 domain. The value for extremities coordinates should be within [ ";
V5ToV4ReportServices.VertexOutsideV4ValidDomain = "One point is out of V4 domain."; 
V5ToV4ReportServices.PlaneOutsideV4ValidDomain = "One plane is totally out of V4 domain."; 
V5ToV4ReportServices.FaceOutsideV4ValidDomain = "The face is out of V4 domain : this element cannot be migrated"; 
V5ToV4ReportServices.CannotBeFitted = "One face(s) support cannot be correctly transfered ";
V5ToV4ReportServices.TooSmallFace = "Small face.";
V5ToV4ReportServices.SetNonMigratedBecauseOfSmallSupport = "A face cannot be transfered because of a too small support";
V5ToV4ReportServices.OpenFace = "This face cannot be closed";
V5ToV4ReportServices.NonMigratedFace = "This face cannot be migrated.";
V5ToV4ReportServices.HasACurveToleranceGap = "This element has a curve tolerance gap.";
V5ToV4ReportServices.WireMadeOfSmallEdges = "A wire made of too small edges cannot be created";
V5ToV4ReportServices.CannotBeClosed = "The shell cannot be closed into a volume.";
V5ToV4ReportServices.DegeneratedVolume = "A V4 volume cannot be created because it is degenerated.";
V5ToV4ReportServices.SeveralConnexDomains = "A V4 volume cannot be created because there are probably several connex domains in a single V5 shell.";
V5ToV4ReportServices.SeveralConnexDomainsInSkin = "A V4 skin cannot be created because there are probably several connex domains in a single V5 shell.";
V5ToV4ReportServices.SetNoFaceInsideShell = "No face can be detected in one shell.";
V5ToV4ReportServices.CannotBeJoined = "The faces cannot be joined into one shell.";
V5ToV4ReportServices.CannotBeCreated = "An error occured during shell creation.";
V5ToV4ReportServices.CannotBeTranslated = "An error occured during wire creation.";
V5ToV4ReportServices.IsInError = "Errors have been detected inside the V5 topology of this body.";
V5ToV4ReportServices.GravityGap = "The distance between the gravity centers of the V5 body and the V4 body is ";
V5ToV4ReportServices.VolumeRatio = "The relative ratio between the V5 and the V4 volume is ";
V5ToV4ReportServices.InvalidV4Volume = "Invalid V4 volume";
V5ToV4ReportServices.WrongMathsBlock = "A V4 plane has an invalid mathematical block.";
V5ToV4ReportServices.InvalidFaceDetectedInV4Volume = "Invalid face detected in V4 volume";
V5ToV4ReportServices.InvalidV4Topology = "Invalid V4 topology";
V5ToV4ReportServices.SuccessRate1 = " of the ";
V5ToV4ReportServices.SuccessFaceRate2 = " faces cannot be migrated. The successful rate for the faces is ";
V5ToV4ReportServices.SuccessVolumeRate2 = " volumes cannot be migrated. The successful rate for the volumes is ";
V5ToV4ReportServices.SuccessVolumeRate3 = " volume cannot be migrated. The successful rate for the volumes is ";
V5ToV4ReportServices.InvalidEdge = "The edge is invalid";
V5ToV4ReportServices.HasTheSameFaceOnBothSides = "This edge is shared by the same face.";
V5ToV4ReportServices.NonManifoldConfig = " There is one or several non manifold edges";
V5ToV4ReportServices.SimplifCheck = " The number of faces after simplification is ";
V5ToV4ReportServices.NoUnifier = " No unifying topology ";
V5ToV4ReportServices.WasSuccessfullyHealed = "A healing was required to match the V4 tolerances.";
V5ToV4ReportServices.ManageBodyWithOnlySmallFaces = "A body containing only one small face has been deleted";
V5ToV4ReportServices.IsATooSmallFaceInInternalEliminatedVolume = "A small face belonging to an internal degenerated volume has been deleted.";
V5ToV4ReportServices.Locate = "at location (x/y/z) : ";
V5ToV4ReportServices.BoundingBox = "Bounding Box extremities at location (x/y/z) : ";
V5ToV4ReportServices.Information = "Information for the feature";
V5ToV4ReportServices.NoInformation = "No Information for the feature";
V5ToV4ReportServices.Warning = "Warning for the feature";
V5ToV4ReportServices.Diagnosis = "Diagnosis";
V5ToV4ReportServices.Result = "Result of migration :";
V5ToV4ReportServices.ErrorFeatureBox = "Do you want to locate the error by creating corresponding features ?";
V5ToV4ReportServices.ErrorFeatureBoxTitle = "Save warning";
V5ToV4ReportServices.InvalidBRep = "Invalid Brep Geometry.";
V5ToV4ReportServices.OpenVolumeAndBorderFace = "This edge is a free border. The volume associated cannot be created.";
V5ToV4ReportServices.SetErrorInV4ConcatenationStep = "An error occured during V4 concatenation step. One volume cannot be created and its faces will be translated in No Show";
V5ToV4ReportServices.NoBody = "The CATPart document contains no body, the migration in associative mode cannot be performed";
V5ToV4ReportServices.GapOf = "Gap of ";
V5ToV4ReportServices.ProgressBarComment0 = "Opening Model ...";
V5ToV4ReportServices.ProgressBarComment1 = "Conversion into V4 Data  ...";
V5ToV4ReportServices.ProgressBarComment2 = "Checking V4 Compliance Rules ...";
V5ToV4ReportServices.ProgressBarComment3 = "Closing Model ...";
// RI517172
V5ToV4ReportServices.LumpCannotBeOriented = "The volume cannot be oriented ";
// RI508716
V5ToV4ReportServices.MemoryAllocationFailed = "Memory allocation is impossible. Do not take the results into account. Try to save your model on a computer with more memory. ";
