//------------------------------------------------------
// Resource file for internal Topological Check-Up 
// En_EN
//----------------------------------------------------------------------
// CAUTION : each index is of maximum length of seventy-two characters !
//-----------------------------------------------------------------------
//
//
Vertex.ConfusionOnGeometry=
"contains /P4 Vertices [/P2,/P3,...] at same location (/P5, /P6, /P7) with maximum gap /P8.";
//
Edge.ConfusionOnGeometry=
"contains /P4 Edges [/P2,/P3,...] at same location with maximum gap /P5.";
//
//
//    *******************************************************
//    *  BODY rule : must be streamable
//    *******************************************************
//
Streamable.Failed =
"contains object /P2 which is not streamable in version /P4.";
//
//    *******************************************************
//    *  BODY rule : aggregate Domain must be locate in 3D
//    *******************************************************
//
DomainInBody.WrongType =
"is bounded by /P2 which is Invalid. Its High Dimension must be 3.";
//
DomainIn3D =
"is bounded by /P2 which is correctly Located In 3D Space.";
//
DomainIn2D =
"is bounded by /P2 which is correctly Located In 2D Space.";
//
DomainInSpace.failed =
"is bounded by /P2 which is not Located neither in 3D nor in 2D.";
//
//
ActiveBody.throw =
"can not certified as Active Body (internal break during analyse).";
//
//
ActiveBody.InactiveCell = "is said Active Body, but contains incompatible /P2.";
//
ActiveBody ="is Active Body (/P2 Vertices gives back the /P3 Edges, then the /P4 Faces).";
//
//    ******************************************************************
//    *  TOPOLOGY rule : Check must be done with a topology not touched
//    ******************************************************************
//
Topology.Touched =
"is a touched topology (temporary attribute for boolean operation or smartduplication).";
//
Body.PointOutOfSpace=
"Contains a /P2 of Coords [/P3, /P4, /P5] out of infinite limit /P6.";
//
//    ******************************************************************
//    *  report->PotDeVin(this,"Body","BoundingBoxTooSmall",1,witness,0,NULL,2,valbox);
//    ******************************************************************
//
Body.BoundingBoxTooSmall =
"has a too small BoundingBox, Distance /P4 (for /P2 outside body box) > Resolution /P3.";
//
Body.BoundingBoxVertexOutside =
"/P6 BoundingBox. /P2 is located at /P6=/P3 outside /P6-box [/P4,/P5].";
//
Body.BoundingBoxVertexNotComputable =
"BoundingBox can not be validated with /P2.";
//
Body.BoundingBoxVertices =
"BoundingBox valid for the /P2 Vertices X=[/P3,/P4]  Y=[/P5,/P6]  Z=[/P7,/P8] (Resolution /P9).";
//
Infinite.OutsideModelSize =
"is not infinite and contains /P2 at coords ( /P4, /P5, /P6 ) outside Model Size /P3.";
//




