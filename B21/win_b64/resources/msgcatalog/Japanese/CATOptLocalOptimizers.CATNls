nbMaxEvalSmy="実行の終了状況";
nbMaxEvalMsg=" 勾配が更新の最大数に達しました \nさらに更新することによって解が改善される可能性があります｡";
timeExceededMsg=" 勾配が更新の最大時間に達しました \nさらに更新することによって解が改善される可能性があります｡";

timeExceededSmy="実行の終了状況";

consecutiveBadSmy="実行の終了状況";
consecutiveBadMsg="勾配が更新の最大数に達し､改善は行われませんでした｡";

NoFeasibleRegionFound="ｱﾙｺﾞﾘｽﾞﾑによって､実行可能な始点を見つけることができません｡";

// SOC - 23/09/02
missingFreeParmMsg="最適化を実行するには､少なくとも1つの任意ﾊﾟﾗﾒｰﾀを選択してください｡ \n";
missingFreeParmSmy="任意ﾊﾟﾗﾒｰﾀの不足";
missingParamToOptimizeMsg="このｱﾙｺﾞﾘｽﾞﾑには最適化するﾊﾟﾗﾒｰﾀが必要です｡";
missingParamToOptimizeSmy="最適化するﾊﾟﾗﾒｰﾀの不足";
algorithmCompatibilityMsg="この勾配ｱﾙｺﾞﾘｽﾞﾑは､拘束がないと機能しません｡ \n少なくとも1つの拘束を作成するか､ｱﾙｺﾞﾘｽﾞﾑのﾘｽﾄで[拘束なしの勾配ｱﾙｺﾞﾘｽﾞﾑ]を選択してください";
algorithmCompatibilitySmy="定義された最適化と非互換のｱﾙｺﾞﾘｽﾞﾑです";
internalErrorSmy="内部ｴﾗｰ";


FirstUpdateError="最初の勾配の更新時のｴﾗｰ｡ﾛｰｶﾙ探索を中止します｡";

GradientEvaluationError=" ﾍﾞｸﾄﾙ勾配評価時のｴﾗｰ｡中止します｡";

EvaluationErrorAfterGradient="ﾍﾞｸﾄﾙ勾配計算後に値を復元できません｡ﾛｰｶﾙ探索を中止します｡";

EqualityConstraintsIgnored="選択したｱﾙｺﾞﾘｽﾞﾑは同等拘束をｻﾎﾟｰﾄしません｡すべての同等拘束は無視されました｡詳細についてはﾄﾞｷｭﾒﾝﾄを参照してください｡";

OptimizerForDerivativesProviderName=" 導関数ﾌﾟﾛﾊﾞｲﾀﾞに関するﾛｰｶﾙ ｱﾙｺﾞﾘｽﾞﾑ ";
OptimizerCurrentEvaluation=" 評価 ";

ObjectiveNotDerProvider=" 目標は導関数ﾌﾟﾛﾊﾞｲﾀﾞではありません｡";
ConstraintsNoDer="拘束の導関数を取得できません ";
ObjectiveNoDer="目標の導関数を取得できません";
ObjectiveUnableToGetOutputValues="目標の出力値を取得できません";

AbsoluteBoundsReached="結合された少なくとも1つの任意ﾊﾟﾗﾒｰﾀの境界に到達しました｡";




