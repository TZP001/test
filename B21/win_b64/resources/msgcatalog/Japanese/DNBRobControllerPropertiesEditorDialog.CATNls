// DO NOT EDIT :: THE CAA2 WIZARD WILL REPLACE ALL THE CODE HERE

GeneralCntrFrame.ControllerType.Title="ｺﾝﾄﾛｰﾗｰ ﾀｲﾌﾟ: ";
GeneralCntrFrame.ControllerType.ShortHelp="ｺﾝﾄﾛｰﾗｰのﾀｲﾌﾟ｡ﾕｰｻﾞｰ定義情報";
GeneralCntrFrame.ControllerType.LongHelp="ｺﾝﾄﾛｰﾗｰのﾀｲﾌﾟ｡ﾕｰｻﾞｰ定義情報 \nﾛﾎﾞｯﾄ ﾗｲﾌﾞﾗﾘｰからのﾛﾎﾞｯﾄごとに評価され､ \n特定の製造元またはﾛﾎﾞｯﾄ ｼﾘｰｽﾞを示します｡";
GeneralCntrFrame.ControllerType.Help="ｺﾝﾄﾛｰﾗｰのﾀｲﾌﾟ｡ﾕｰｻﾞｰ定義情報";

GeneralCntrFrame.pTypeEditor.Title="ｺﾝﾄﾛｰﾗｰ ﾀｲﾌﾟ: ";
GeneralCntrFrame.pTypeEditor.ShortHelp="ｺﾝﾄﾛｰﾗｰのﾀｲﾌﾟ｡ﾕｰｻﾞｰ定義情報";
GeneralCntrFrame.pTypeEditor.LongHelp="ｺﾝﾄﾛｰﾗｰのﾀｲﾌﾟ｡ﾕｰｻﾞｰ定義情報 \nﾛﾎﾞｯﾄ ﾗｲﾌﾞﾗﾘｰからのﾛﾎﾞｯﾄごとに評価され､ \n特定の製造元またはﾛﾎﾞｯﾄ ｼﾘｰｽﾞを示します｡";
GeneralCntrFrame.pTypeEditor.Help="ｺﾝﾄﾛｰﾗｰのﾀｲﾌﾟ｡ﾕｰｻﾞｰ定義情報";



GeneralCntrFrame.SingularityTolerance.Title="特異性ﾄﾚﾗﾝｽ: ";
GeneralCntrFrame.SingularityTolerance.ShortHelp="ﾘｽﾄの特異性ﾄﾚﾗﾝｽ角度";
GeneralCntrFrame.SingularityTolerance.LongHelp="ﾘｽﾄの特異性ﾄﾚﾗﾝｽ角度 \n反転ｷﾈﾏﾃｨｸｽによって到達不能と見なされる､ \nﾘｽﾄの特異性位置のまわりのｿﾞｰﾝを定義します｡ \n許可される値は0度から10度までの間です｡";
GeneralCntrFrame.SingularityTolerance.Help="ﾘｽﾄの特異性ﾄﾚﾗﾝｽ角度";

GeneralCntrFrame.pSingularityTolEdt.Title="特異性ﾄﾚﾗﾝｽ: ";
GeneralCntrFrame.pSingularityTolEdt.ShortHelp="ﾘｽﾄの特異性ﾄﾚﾗﾝｽ角度";
GeneralCntrFrame.pSingularityTolEdt.LongHelp="ﾘｽﾄの特異性ﾄﾚﾗﾝｽ角度 \n反転ｷﾈﾏﾃｨｸｽによって到達不能と見なされる､ \nﾘｽﾄの特異性位置のまわりのｿﾞｰﾝを定義します｡ \n許可される値は0度から10度までの間です｡";
GeneralCntrFrame.pSingularityTolEdt.Help="ﾘｽﾄの特異性ﾄﾚﾗﾝｽ角度";


GeneralCntrFrame.JointInterpolationMode.Title="ｼﾞｮｲﾝﾄ補間ﾓｰﾄﾞ: ";
GeneralCntrFrame.JointInterpolationMode.ShortHelp="接合値の計算に使用される補間ﾓｰﾄﾞ";
GeneralCntrFrame.JointInterpolationMode.LongHelp="ｼﾞｮｲﾝﾄ補間ﾓｰﾄﾞ \n非直交座標動作での直交座標ﾀｰｹﾞｯﾄへの移動時の､ \n実際の接合値の計算方法を定義します｡ \n\n許可される値は次のとおりです｡ \n最小角度 \n解角度 \n回転数 \n絶対最小角度 \n回転記号";
GeneralCntrFrame.JointInterpolationMode.Help="接合値の計算に使用される補間ﾓｰﾄﾞ";

GeneralCntrFrame._pJtInterpolationModeCombo.Title="ｼﾞｮｲﾝﾄ補間ﾓｰﾄﾞ: ";
GeneralCntrFrame._pJtInterpolationModeCombo.ShortHelp="接合値の計算に使用される補間ﾓｰﾄﾞ";
GeneralCntrFrame._pJtInterpolationModeCombo.LongHelp="ｼﾞｮｲﾝﾄ補間ﾓｰﾄﾞ \n許可される値は次のとおりです｡ \n最小角度 \n解角度 \n回転数 \n絶対最小角度 \n回転記号";
GeneralCntrFrame._pJtInterpolationModeCombo.Help="接合値の計算に使用される補間ﾓｰﾄﾞ";


HeartBeatFrame.Title="ﾊｰﾄﾋﾞｰﾄ";
HeartBeatFrame.ShortHelp="動作計画計算で使用されるｺﾝﾄﾛｰﾗｰ ｻﾝﾌﾟﾘﾝｸﾞ比率";
HeartBeatFrame.LongHelp="ﾊｰﾄﾋﾞｰﾄは､移動中に \n反転ｷﾈﾏﾃｨｸｽおよび動作計画の更新を計算する \nｺﾝﾄﾛｰﾗｰのｻﾝﾌﾟﾘﾝｸﾞ比率を定義します｡";
HeartBeatFrame.Help="動作計画計算で使用されるｺﾝﾄﾛｰﾗｰ ｻﾝﾌﾟﾘﾝｸﾞ比率｡";


HeartBeatFrame.SampleRate.Title="比率: ";
HeartBeatFrame.SampleRate.ShortHelp="動作計画計算で使用されるｺﾝﾄﾛｰﾗｰ ｻﾝﾌﾟﾘﾝｸﾞ比率";
HeartBeatFrame.SampleRate.LongHelp="ﾊｰﾄﾋﾞｰﾄは､移動中に \n反転ｷﾈﾏﾃｨｸｽおよび動作計画の更新を計算する \nｺﾝﾄﾛｰﾗｰのｻﾝﾌﾟﾘﾝｸﾞ比率を定義します｡";
HeartBeatFrame.SampleRate.Help="動作計画計算で使用されるｺﾝﾄﾛｰﾗｰ ｻﾝﾌﾟﾘﾝｸﾞ比率";

HeartBeatFrame.pSamplerateEdt.Title="比率: ";
HeartBeatFrame.pSamplerateEdt.ShortHelp="動作計画計算で使用されるｺﾝﾄﾛｰﾗｰ ｻﾝﾌﾟﾘﾝｸﾞ比率";
HeartBeatFrame.pSamplerateEdt.LongHelp="ﾊｰﾄﾋﾞｰﾄは､移動中に \n反転ｷﾈﾏﾃｨｸｽおよび動作計画の更新を計算する \nｺﾝﾄﾛｰﾗｰのｻﾝﾌﾟﾘﾝｸﾞ比率を定義します｡";
HeartBeatFrame.pSamplerateEdt.Help="動作計画計算で使用されるｺﾝﾄﾛｰﾗｰ ｻﾝﾌﾟﾘﾝｸﾞ比率";


TimeCompensationFrame.Title="時間補正";
TimeCompensationFrame.ShortHelp="時間補正";
TimeCompensationFrame.LongHelp="時間補正";
TimeCompensationFrame.Help="時間補正";

TimeCompensationFrame.ResponseDelay.Title="応答遅延: ";
TimeCompensationFrame.ResponseDelay.ShortHelp="動作ﾄﾘｶﾞ ｺﾏﾝﾄﾞと実際の移動の間の遅延時間";
TimeCompensationFrame.ResponseDelay.LongHelp="動作ｺﾏﾝﾄﾞの活動化と \nﾛﾎﾞｯﾄの実際の動作の間の時間量です｡ \n対応するﾃﾞｰﾀ ﾀｲﾌﾟはﾀﾞﾌﾞﾙです";
TimeCompensationFrame.ResponseDelay.Help="動作ﾄﾘｶﾞ ｺﾏﾝﾄﾞと実際の移動の間の遅延時間";

TimeCompensationFrame.pRespDelayEdt.Title="応答遅延: ";
TimeCompensationFrame.pRespDelayEdt.ShortHelp="動作ﾄﾘｶﾞ ｺﾏﾝﾄﾞと実際の移動の間の遅延時間";
TimeCompensationFrame.pRespDelayEdt.LongHelp="動作ｺﾏﾝﾄﾞの活動化と \nﾛﾎﾞｯﾄの実際の動作の間の時間量です｡ \n対応するﾃﾞｰﾀ ﾀｲﾌﾟはﾀﾞﾌﾞﾙです";
TimeCompensationFrame.pRespDelayEdt.Help="動作ﾄﾘｶﾞ ｺﾏﾝﾄﾞと実際の移動の間の遅延時間";

TimeCompensationFrame.SettleTime.Title="処理時間: ";
TimeCompensationFrame.SettleTime.ShortHelp="点に到達した後のﾏﾆﾋﾟｭﾚｰﾀ ﾊﾞｲﾌﾞﾚｰｼｮﾝ処理時間";
TimeCompensationFrame.SettleTime.LongHelp="点に到達した後のﾏﾆﾋﾟｭﾚｰﾀ ﾊﾞｲﾌﾞﾚｰｼｮﾝの処理に必要な推定時間量です｡ \n対応するﾃﾞｰﾀ ﾀｲﾌﾟはﾀﾞﾌﾞﾙです｡";
TimeCompensationFrame.SettleTime.Help="点に到達した後のﾏﾆﾋﾟｭﾚｰﾀ ﾊﾞｲﾌﾞﾚｰｼｮﾝ処理時間";

TimeCompensationFrame.pSettleTimeEdt.Title="処理時間: ";
TimeCompensationFrame.pSettleTimeEdt.ShortHelp="点に到達した後のﾏﾆﾋﾟｭﾚｰﾀ ﾊﾞｲﾌﾞﾚｰｼｮﾝ処理時間";
TimeCompensationFrame.pSettleTimeEdt.LongHelp="点に到達した後のﾏﾆﾋﾟｭﾚｰﾀ ﾊﾞｲﾌﾞﾚｰｼｮﾝの処理に必要な推定時間量です｡ \n対応するﾃﾞｰﾀ ﾀｲﾌﾟはﾀﾞﾌﾞﾙです｡";
TimeCompensationFrame.pSettleTimeEdt.Help="点に到達した後のﾏﾆﾋﾟｭﾚｰﾀ ﾊﾞｲﾌﾞﾚｰｼｮﾝ処理時間";


ScalingFrame.Title="ｽｹｰﾘﾝｸﾞ";
ScalingFrame.ShortHelp="ｽｹｰﾘﾝｸﾞ";
ScalingFrame.LongHelp="ｽｹｰﾘﾝｸﾞ";
ScalingFrame.Help="ｽｹｰﾘﾝｸﾞ";


ScalingFrame.Acceleration.Title="加速度";
ScalingFrame.Acceleration.ShortHelp="加速度｡ \n一定または可変を選択";
ScalingFrame.Acceleration.LongHelp="加速度｡ \n一定または可変を選択";
ScalingFrame.Acceleration.Help="加速度｡ \n一定または可変を選択";

ScalingFrame.AcclBtnFrame.Constant.Title="一定";
ScalingFrame.AcclBtnFrame.Constant.ShortHelp="一定";
ScalingFrame.AcclBtnFrame.Constant.LongHelp="動作時間を目的の値まで延長するために､速度値がｽｹｰﾘﾝｸﾞされます";
ScalingFrame.AcclBtnFrame.Constant.Help="動作時間を目的の値まで延長するために､速度値がｽｹｰﾘﾝｸﾞされます";

ScalingFrame.AcclBtnFrame.Variable.Title="可変";
ScalingFrame.AcclBtnFrame.Variable.ShortHelp="可変";
ScalingFrame.AcclBtnFrame.Variable.LongHelp="動作時間を目的の値まで延長するために､加速度値がｽｹｰﾘﾝｸﾞされます";
ScalingFrame.AcclBtnFrame.Variable.Help="動作時間を目的の値まで延長するために､加速度値がｽｹｰﾘﾝｸﾞされます";

TimebasedMotionFrame.Title="時間ﾍﾞｰｽの動作";
TimebasedMotionFrame.ShortHelp="時間ﾍﾞｰｽの動作";
TimebasedMotionFrame.LongHelp="時間ﾍﾞｰｽの動作";
TimebasedMotionFrame.Help="時間ﾍﾞｰｽの動作";

TimebasedMotionFrame.Type.Title="ﾀｲﾌﾟ: ";
TimebasedMotionFrame.Type.ShortHelp="ﾀｲﾌﾟ｡ \n完全一致または拘束を選択";
TimebasedMotionFrame.Type.LongHelp="ﾀｲﾌﾟ｡ \n完全一致または拘束を選択";
TimebasedMotionFrame.Type.Help="ﾀｲﾌﾟ｡ \n完全一致または拘束を選択";

TimebasedMotionFrame.MotTypeBtnFrame.Exact.Title="完全一致";
TimebasedMotionFrame.MotTypeBtnFrame.Exact.ShortHelp="完全一致: \n動作時間が定義済みの値に等しい";
TimebasedMotionFrame.MotTypeBtnFrame.Exact.LongHelp="完全一致: \nﾃﾞﾊﾞｲｽは指定した時間量の間､動作を実行します｡";
TimebasedMotionFrame.MotTypeBtnFrame.Exact.Help="完全一致: \n動作時間が定義済みの値に等しい";

TimebasedMotionFrame.MotTypeBtnFrame.Constrained.Title="拘束";
TimebasedMotionFrame.MotTypeBtnFrame.Constrained.ShortHelp="拘束: \n動作時間が定義済み値以上";
TimebasedMotionFrame.MotTypeBtnFrame.Constrained.LongHelp="拘束: \nﾃﾞﾊﾞｲｽは､速度制限および加速度限界を考慮して､ \n可能な最も速い速度で移動します｡ \nしたがって､移動には要求した時間より長い時間がかかる可能性があります";
TimebasedMotionFrame.MotTypeBtnFrame.Constrained.Help="拘束: \n動作時間が定義済み値以上";


// END WIZARD REPLACEMENT ZONE
