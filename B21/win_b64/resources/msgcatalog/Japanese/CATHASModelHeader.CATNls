//---------------------------------------------------
// Ressource File for CATHASModelHeader Class
// En_US
//---------------------------------------------------

// == Healing Assistant+
// =================================================
// Insert Geometrical Set
// ========================================================================================
// == GSMBody Insert == 
CATHASModelHeader.HASCreateGSMBody.Title            = "形状ｾｯﾄ...";
CATHASModelHeader.HASCreateGSMBody.Help             = "形状ｾｯﾄを作成します";
CATHASModelHeader.HASCreateGSMBody.ShortHelp        = "形状ｾｯﾄ";
CATHASModelHeader.HASCreateGSMBody.LongHelp         = 
"形状ｾｯﾄ
形状ｾｯﾄを作成します｡";

// =================================================
// Insert Linear Geometrical Set
// ========================================================================================
// == ShapeBody Insert == 
//CATHASModelHeader.HASCreateShapeBody.Title		= "Linear Geometrical Set...";
//CATHASModelHeader.HASCreateShapeBody.Help			= "Creates an Linear Geometrical Set";
//CATHASModelHeader.HASCreateShapeBody.ShortHelp	= "Linear Geometrical Set";
//CATHASModelHeader.HASCreateShapeBody.LongHelp		= 
//"Linear Geometrical Set
//Creates an linear Geometrical set.";

// =================================================
// ToolBar Check Topologique
// =================================================
// == Local Check Topologique  == 
CATHASModelHeader.HASCheckTopo.Title				= "ﾌｪｰｽ ﾁｪｯｶｰ...";
CATHASModelHeader.HASCheckTopo.Help					= "ﾌｪｰｽのﾄﾎﾟﾛｼﾞをﾁｪｯｸします";
CATHASModelHeader.HASCheckTopo.ShortHelp			= "ﾌｪｰｽ ﾁｪｯｶｰ";
CATHASModelHeader.HASCheckTopo.LongHelp				= 
"ﾌｪｰｽ ﾁｪｯｶｰ
ﾄﾎﾟﾛｼﾞ ﾁｪｯｸ基準に従って､入力ｻｰﾌｪｽを
別々のｵｰﾌﾟﾝ ﾎﾞﾃﾞｨｰにｿｰﾄします｡";

// == Oriented Faces  == 
CATHASModelHeader.HASOrientedFaces.Title			= "ﾌｪｰｽの向き...";
CATHASModelHeader.HASOrientedFaces.Help				= "ﾌｪｰｽの向きを表示します";
CATHASModelHeader.HASOrientedFaces.ShortHelp		= "ﾌｪｰｽの向き";
CATHASModelHeader.HASOrientedFaces.LongHelp			= 
"ﾌｪｰｽの向き
ﾌｪｰｽの向きを表示します｡";

// =================================================
// ToolBar Check Geometry
// =================================================
// == ConnectChecker == 
CATHASModelHeader.HASConnectChecker.Title			= "ｻｰﾌｪｽ結合ﾁｪｯｶｰ...";
CATHASModelHeader.HASConnectChecker.Help			= "ｻｰﾌｪｽの結合性をﾁｪｯｸします";
CATHASModelHeader.HASConnectChecker.ShortHelp		= "ｻｰﾌｪｽ結合ﾁｪｯｶｰ";
CATHASModelHeader.HASConnectChecker.LongHelp		= 
"ｻｰﾌｪｽ結合ﾁｪｯｶｰ
複数のｻｰﾌｪｽ間の距離､
角度､または曲率解析を
実行します｡";

// == Part Comparison  == 
CATHASModelHeader.HASPartCompare.Title			= "ﾊﾟｰﾂを比較...";
CATHASModelHeader.HASPartCompare.Help			= "ﾊﾟｰﾂを比較します";
CATHASModelHeader.HASPartCompare.ShortHelp		= "ﾊﾟｰﾂを比較";
CATHASModelHeader.HASPartCompare.LongHelp		= 
"ﾊﾟｰﾂを比較
2つのｳｨﾝﾄﾞｳで2つのﾊﾟｰﾂを比較して､比較した結果を保持します";

// == Review Comparison  == 
CATHASModelHeader.GVCReviewPartCompare.Title			= "比較およびﾚﾋﾞｭｰ...";
CATHASModelHeader.GVCReviewPartCompare.Help			= "比較およびﾚﾋﾞｭｰ";
CATHASModelHeader.GVCReviewPartCompare.ShortHelp		= "比較およびﾚﾋﾞｭｰ";
CATHASModelHeader.GVCReviewPartCompare.LongHelp		= 
"2つのﾊﾟｰﾂを比較してﾚﾋﾞｭｰを作成します｡";

// == Review New Area  == 
CATHASModelHeader.GVCReviewNewArea.Title			= "新規の修正を作成...";
CATHASModelHeader.GVCReviewNewArea.Help			= "新規の修正を作成します";
CATHASModelHeader.GVCReviewNewArea.ShortHelp		= "新規の修正を作成";
CATHASModelHeader.GVCReviewNewArea.LongHelp		= 
"新規の修正を作成します｡その後ﾕｰｻﾞｰは､この中に形状を移動できます｡";

// == Review Annotations  == 
CATHASModelHeader.GVCReviewAnnotText.Title			= "ﾃｷｽﾄ注釈";
CATHASModelHeader.GVCReviewAnnotText.Help			= "新規のﾃｷｽﾄ注釈を作成します";
CATHASModelHeader.GVCReviewAnnotText.ShortHelp		= "ﾃｷｽﾄ注釈";
CATHASModelHeader.GVCReviewAnnotText.LongHelp		= 
"新規のﾃｷｽﾄ注釈を作成します";

CATHASModelHeader.GVCReviewAnnotDistance.Title			= "距離注釈";
CATHASModelHeader.GVCReviewAnnotDistance.Help			= "新規の距離注釈を作成します";
CATHASModelHeader.GVCReviewAnnotDistance.ShortHelp		= "距離注釈";
CATHASModelHeader.GVCReviewAnnotDistance.LongHelp		= 
"新規の距離注釈を作成します";

CATHASModelHeader.GVCReviewAnnotDeviation.Title			= "偏差注釈";
CATHASModelHeader.GVCReviewAnnotDeviation.Help			= "新規の偏差注釈を作成します";
CATHASModelHeader.GVCReviewAnnotDeviation.ShortHelp		= "新規の偏差注釈";
CATHASModelHeader.GVCReviewAnnotDeviation.LongHelp		= 
"新規の偏差注釈を作成します｡";

// == CurveConnectChecker (nouvelle commande polyvalente)== 
CATHASModelHeader.HASCurveConnectChecker.Title		= "結合性ﾁｪｯｶｰ解析...";
CATHASModelHeader.HASCurveConnectChecker.Help		= "結合解析を実行します";
CATHASModelHeader.HASCurveConnectChecker.ShortHelp	= "結合性ﾁｪｯｶｰ解析";
CATHASModelHeader.HASCurveConnectChecker.LongHelp	= 
"結合性ﾁｪｯｶｰ解析
ｻｰﾌｪｽ/曲線間の結合をﾁｪｯｸし､
G0､G1､G2､およびG3偏差を測定します｡";

// =================================================
// ToolBar Repair Topology 
// =================================================
// == GlobalJoin == 
CATHASModelHeader.HASGlobalJoin.Title               = "接合...";
CATHASModelHeader.HASGlobalJoin.Help                = "曲線またはｻｰﾌｪｽを接合します";
CATHASModelHeader.HASGlobalJoin.ShortHelp           = "接合";
CATHASModelHeader.HASGlobalJoin.LongHelp            = 
"接合
曲線またはｻｰﾌｪｽを接合します｡";

// == LocalJoin == 
CATHASModelHeader.HASLocalJoin.Title               = "ﾛｰｶﾙ接合...";
CATHASModelHeader.HASLocalJoin.Help                = "入力ｴｯｼﾞをﾏｰｼﾞします";
CATHASModelHeader.HASLocalJoin.ShortHelp           = "ﾛｰｶﾙ接合";
CATHASModelHeader.HASLocalJoin.LongHelp            = 
"ﾛｰｶﾙ接合
ﾕｰｻﾞｰ定義の一連のｴｯｼﾞをﾏｰｼﾞし､
ｻｰﾌｪｽを修復します｡";


// =================================================
// ToolBar Repair Geometry
// =================================================
// == GlobalHealing == 
CATHASModelHeader.HASGlobalHealing.Title            = "修復...";
CATHASModelHeader.HASGlobalHealing.Help             = "ｻｰﾌｪｽを修復します";
CATHASModelHeader.HASGlobalHealing.ShortHelp        = "修復";
CATHASModelHeader.HASGlobalHealing.LongHelp         = 
"修復
ｻｰﾌｪｽ間の小さなｷﾞｬｯﾌﾟを埋めて､ｻｰﾌｪｽを修復します｡";

// == LocalHealing == 
CATHASModelHeader.HASLocalHealing.Title				= "ﾛｰｶﾙ修復...";
CATHASModelHeader.HASLocalHealing.Help				= "ｻｰﾌｪｽをﾛｰｶﾙに修復します";
CATHASModelHeader.HASLocalHealing.ShortHelp			= "ﾛｰｶﾙ修復";
CATHASModelHeader.HASLocalHealing.LongHelp			= 
"ﾛｰｶﾙ修復
小さなｷﾞｬｯﾌﾟを埋めて､ｻｰﾌｪｽを修復します｡";

// == Improved Face Boundary == 
CATHASModelHeader.HASImprovedFaces.Title			= "ﾌｪｰｽの平滑化...";
CATHASModelHeader.HASImprovedFaces.Help				= "ﾌｪｰｽの境界を平滑化します";
CATHASModelHeader.HASImprovedFaces.ShortHelp		= "ﾌｪｰｽの平滑化";
CATHASModelHeader.HASImprovedFaces.LongHelp			=
"ﾌｪｰｽの平滑化
境界を修正してG0､G1またはG2品質を実現し､
曲線の数を減らします｡";

// == CurveSmooth == 
CATHASModelHeader.HASCurveSmooth.Title              = "曲線を平滑化...";
CATHASModelHeader.HASCurveSmooth.Help               = "曲線を平滑化します";
CATHASModelHeader.HASCurveSmooth.ShortHelp          = "曲線を平滑化";
CATHASModelHeader.HASCurveSmooth.LongHelp           =
"曲線を平滑化
指定されたしきい値で曲線の接線と曲率の不連続性を平滑化します｡";

// =================================================
// ToolBar Shape Analysis
// =================================================
// == ApproxManager == 
CATHASModelHeader.HASApproxManager.Title            = "ｺﾝﾊﾞｰﾀ ｳｨｻﾞｰﾄﾞ...";
CATHASModelHeader.HASApproxManager.Help             = "既存の曲線またはｻｰﾌｪｽを変換します";
CATHASModelHeader.HASApproxManager.ShortHelp        = "ｺﾝﾊﾞｰﾀ ｳｨｻﾞｰﾄﾞ";
CATHASModelHeader.HASApproxManager.LongHelp         = 
"ｺﾝﾊﾞｰﾀ ｳｨｻﾞｰﾄﾞ
曲線またはｻｰﾌｪｽを､公差に基づくか､
あるいは指定された次数またはｾｸﾞﾒﾝﾄの最大数に従って､
NUPBSに変換します｡";

// == PorcupineCurvatureAnalysis == 
CATHASModelHeader.HASPCurvatureAnalysis.Title		= "曲率の法線ﾍﾞｸﾄﾙ解析...";
CATHASModelHeader.HASPCurvatureAnalysis.Help		= "法線ﾍﾞｸﾄﾙ解析を表示します";
CATHASModelHeader.HASPCurvatureAnalysis.ShortHelp	= "曲率の法線ﾍﾞｸﾄﾙ解析";
CATHASModelHeader.HASPCurvatureAnalysis.LongHelp	= 
"曲率の法線ﾍﾞｸﾄﾙ解析
法線ﾍﾞｸﾄﾙ表現を使用して
一連の曲線の曲率を
解析します｡";

// =================================================
// ToolBar Generic Tools
// =================================================
// == GeomInfo == 
CATHASModelHeader.HASGeomInfo.Title                 = "形状情報...";
CATHASModelHeader.HASGeomInfo.Help                  = "選択したﾌｪｰｽ/ｴｯｼﾞの形状情報を表示します";
CATHASModelHeader.HASGeomInfo.ShortHelp             = "形状情報";
CATHASModelHeader.HASGeomInfo.LongHelp              = 
"形状情報
選択したﾌｪｰｽ/ｴｯｼﾞの形状情報を表示します｡";

// == DressUp == 
CATHASModelHeader.HASDressUp.Title					= "ﾄﾞﾚｽｱｯﾌﾟを適用...";
CATHASModelHeader.HASDressUp.Help					= "選択したﾄﾞﾚｽｱｯﾌﾟ ｵﾌﾟｼｮﾝを適用します";
CATHASModelHeader.HASDressUp.ShortHelp				= "ﾄﾞﾚｽｱｯﾌﾟを適用";
CATHASModelHeader.HASDressUp.LongHelp				= 
"ﾄﾞﾚｽｱｯﾌﾟを適用
選択したｴﾚﾒﾝﾄに､事前定義の
ﾄﾞﾚｽｱｯﾌﾟ ｵﾌﾟｼｮﾝを適用します｡";

// == DressUpUndo == 
CATHASModelHeader.HASDressUpUndo.Title				= "ﾄﾞﾚｽｱｯﾌﾟを除去...";
CATHASModelHeader.HASDressUpUndo.Help				= "選択した表示ｵﾌﾟｼｮﾝを除去します";
CATHASModelHeader.HASDressUpUndo.ShortHelp			= "ﾄﾞﾚｽｱｯﾌﾟを除去";
CATHASModelHeader.HASDressUpUndo.LongHelp			= 
"ﾄﾞﾚｽｱｯﾌﾟを除去
選択したｴﾚﾒﾝﾄから､事前定義の
表示ｵﾌﾟｼｮﾝを除去します｡";

// == GeoBoundary == 
CATHASModelHeader.HASGeoBoundary.Title				= "境界ｵﾌﾟｼｮﾝを適用...";
CATHASModelHeader.HASGeoBoundary.Help				= "選択した境界ｵﾌﾟｼｮﾝを適用します";
CATHASModelHeader.HASGeoBoundary.ShortHelp			= "境界ｵﾌﾟｼｮﾝを適用";
CATHASModelHeader.HASGeoBoundary.LongHelp			= 
"境界ｵﾌﾟｼｮﾝを適用
ｻｰﾌｪｽ境界の表示ｵﾌﾟｼｮﾝを選択したｴﾚﾒﾝﾄに
適用します｡";

// == GeoBoundaryUndo == 
CATHASModelHeader.HASGeoBoundaryUndo.Title			= "境界ｵﾌﾟｼｮﾝを除去...";
CATHASModelHeader.HASGeoBoundaryUndo.Help			= "選択した境界ｵﾌﾟｼｮﾝを除去します";
CATHASModelHeader.HASGeoBoundaryUndo.ShortHelp		= "境界ｵﾌﾟｼｮﾝを除去";
CATHASModelHeader.HASGeoBoundaryUndo.LongHelp		= 
"境界ｵﾌﾟｼｮﾝを除去
ｻｰﾌｪｽ境界の表示ｵﾌﾟｼｮﾝを選択したｴﾚﾒﾝﾄから
除去します｡";

// == BorderEdgesMode == 
CATHASModelHeader.HASBorderEdgesMode.Title			= "ｻｰﾌｪｽ境界...";
CATHASModelHeader.HASBorderEdgesMode.Help			= "ｻｰﾌｪｽ境界を表示します";
CATHASModelHeader.HASBorderEdgesMode.ShortHelp		= "ｻｰﾌｪｽ境界";
CATHASModelHeader.HASBorderEdgesMode.LongHelp		= 
"ｻｰﾌｪｽ境界
ｻｰﾌｪｽ境界のﾄﾎﾟﾛｼﾞ表示を変更します｡";

// =================================================
// ToolBar Wireframe
// =================================================
// == Point == 
CATHASModelHeader.HASPoint.Title                    = "点...";
CATHASModelHeader.HASPoint.Help                     = "1つ以上の点を作成します";
CATHASModelHeader.HASPoint.ShortHelp                = "点";
CATHASModelHeader.HASPoint.LongHelp                 = 
"点
1つ以上の点を作成します｡";

// == MultiplePoint == 
CATHASModelHeader.HASMultiplePoint.Title            = "複数の点と平面を作成...";
CATHASModelHeader.HASMultiplePoint.Help             = "複数の点または平面を一度に作成します";
CATHASModelHeader.HASMultiplePoint.ShortHelp        = "複数の点と平面を作成";
CATHASModelHeader.HASMultiplePoint.LongHelp         = 
"複数の点と平面を作成:
複数の点と平面を一度に作成します｡";

// == Line == 
CATHASModelHeader.HASLine.Title                     = "直線...";
CATHASModelHeader.HASLine.Help                      = "直線を作成します";
CATHASModelHeader.HASLine.ShortHelp                 = "直線";
CATHASModelHeader.HASLine.LongHelp                  = 
"直線
直線を作成します｡";

// == Plane == 
CATHASModelHeader.HASPlane.Title                    = "平面...";
CATHASModelHeader.HASPlane.Help                     = "平面を作成します";
CATHASModelHeader.HASPlane.ShortHelp                = "平面";
CATHASModelHeader.HASPlane.LongHelp                 = 
"平面
平面を作成します｡";

// == Project == 
CATHASModelHeader.HASProject.Title                  = "投影...";
CATHASModelHeader.HASProject.Help                   = "ｻﾎﾟｰﾄ ｴﾚﾒﾝﾄ上に点または曲線を投影します";
CATHASModelHeader.HASProject.ShortHelp              = "投影";
CATHASModelHeader.HASProject.LongHelp				= 
"投影
ｻﾎﾟｰﾄ ｴﾚﾒﾝﾄ上に点または曲線を投影します｡";

// == Intersect== 
CATHASModelHeader.HASIntersect.Title		    	= "交差...";
CATHASModelHeader.HASIntersect.Help				    = "2つの形状ｴﾚﾒﾝﾄの交差によって形状を作成します";
CATHASModelHeader.HASIntersect.ShortHelp		    = "交差";
CATHASModelHeader.HASIntersect.LongHelp			    = 
"交差
2つの形状ｴﾚﾒﾝﾄの交差によって
形状を作成します｡";

// == Connect Curve == 
CATHASModelHeader.HASConnect.Title                  = "結合曲線...";
CATHASModelHeader.HASConnect.Help                   = "2つの曲線間に結合曲線を作成します";
CATHASModelHeader.HASConnect.ShortHelp              = "結合曲線";
CATHASModelHeader.HASConnect.LongHelp               = 
"結合曲線
連続性拘束を考慮し､2つの曲線間に
結合曲線を作成します｡";

// =================================================
// ToolBar Surface
// =================================================
// == Fill == 
CATHASModelHeader.HASFill.Title				    	= "ﾌｨﾙ ｻｰﾌｪｽ...";
CATHASModelHeader.HASFill.Help				    	= "閉じた境界の中にﾌｨﾙ ｻｰﾌｪｽを作成します";
CATHASModelHeader.HASFill.ShortHelp			    	= "ﾌｨﾙ";
CATHASModelHeader.HASFill.LongHelp			    	= 
"ﾌｨﾙ ｻｰﾌｪｽ
閉じた境界の中にﾌｨﾙ ｻｰﾌｪｽを作成します｡";

// ToolBar Operations
// =================================================
// == UnTrim == 
CATHASModelHeader.HASUnTrim.Title                   = "ﾄﾘﾑを戻す...";
CATHASModelHeader.HASUnTrim.Help                    = "ﾄﾘﾑしたｻｰﾌｪｽと曲線のﾄﾘﾑを戻します";
CATHASModelHeader.HASUnTrim.ShortHelp               = "ﾄﾘﾑを戻す";
CATHASModelHeader.HASUnTrim.LongHelp                = 
"ﾄﾘﾑを戻す
すでにﾄﾘﾑしたｻｰﾌｪｽと曲線のﾄﾘﾑを戻します";

// == Disassemble == 
CATHASModelHeader.HASDisassemble.Title              = "分解...";
CATHASModelHeader.HASDisassemble.Help               = "複数ｾﾙ ﾎﾞﾃﾞｨｰを分解して単一ｾﾙ ﾎﾞﾃﾞｨｰにします";
CATHASModelHeader.HASDisassemble.ShortHelp          = "分解";
CATHASModelHeader.HASDisassemble.LongHelp           = 
"分解
複数ｾﾙ ﾎﾞﾃﾞｨｰを分解して
単一ｾﾙ ﾎﾞﾃﾞｨｰにします";

// == Split == 
CATHASModelHeader.HASSplit.Title                    = "分割...";
CATHASModelHeader.HASSplit.Help                     = "ｶｯﾄ ｴﾚﾒﾝﾄを使用してｴﾚﾒﾝﾄを分割し境界設定します";
CATHASModelHeader.HASSplit.ShortHelp                = "分割";
CATHASModelHeader.HASSplit.LongHelp                 = 
"分割
ｶｯﾄ ｴﾚﾒﾝﾄを使用してｴﾚﾒﾝﾄを分割し境界設定します｡";

// == Trim == 
CATHASModelHeader.HASTrim.Title                     = "ﾄﾘﾑ...";
CATHASModelHeader.HASTrim.Help                      = "2つのｴﾚﾒﾝﾄを分割し､ｱｾﾝﾌﾞﾙします";
CATHASModelHeader.HASTrim.ShortHelp                 = "ﾄﾘﾑ";
CATHASModelHeader.HASTrim.LongHelp                  = 
"ﾄﾘﾑ
2つのｴﾚﾒﾝﾄを分割し､ｱｾﾝﾌﾞﾙします｡";

// == Boundary ==
CATHASModelHeader.HASBoundary.Title                 = "境界...";
CATHASModelHeader.HASBoundary.Help                  = "ｻｰﾌｪｽの周囲に曲線を作成します";
CATHASModelHeader.HASBoundary.ShortHelp             = "境界";
CATHASModelHeader.HASBoundary.LongHelp              = 
"境界
ｻｰﾌｪｽのｴｯｼﾞから
境界を作成します｡";

// == Extract Solide == 
CATHASModelHeader.HASExtractSolide.Title            = "抽出...";
CATHASModelHeader.HASExtractSolide.Help             = "ﾌｪｰｽまたはｻｰﾌｪｽのｴｯｼﾞを抽出します";
CATHASModelHeader.HASExtractSolide.ShortHelp        = "抽出";
CATHASModelHeader.HASExtractSolide.LongHelp         = 
"抽出
ﾌｪｰｽまたはｻｰﾌｪｽのｴｯｼﾞを抽出します｡";

// == Extrapol == 
CATHASModelHeader.HASExtrapol.Title			    	= "外挿...";
CATHASModelHeader.HASExtrapol.Help			    	= "外挿によってｻｰﾌｪｽまたは曲線を作成します";
CATHASModelHeader.HASExtrapol.ShortHelp		    	= "外挿";
CATHASModelHeader.HASExtrapol.LongHelp		    	= 
"外挿
境界の1つの外挿によりｻｰﾌｪｽを､または端点の1つに曲線を
作成します｡";

// == Inverse== 
CATHASModelHeader.HASInvert.Title                   = "方向を反転...";
CATHASModelHeader.HASInvert.Help                    = "ｴﾚﾒﾝﾄの方向を反転します";
CATHASModelHeader.HASInvert.ShortHelp               = "方向を反転";
CATHASModelHeader.HASInvert.LongHelp                = 
"方向を反転
ｴﾚﾒﾝﾄの方向を反転します｡";

// == Near == 
CATHASModelHeader.HASNear.Title                     = "近傍...";
CATHASModelHeader.HASNear.Help                      = "最も近いｴﾚﾒﾝﾄを抽出";
CATHASModelHeader.HASNear.ShortHelp                 = "近傍";
CATHASModelHeader.HASNear.LongHelp                  =
"近傍
複数ｴﾚﾒﾝﾄから､基準ｴﾚﾒﾝﾄに最も近いｴﾚﾒﾝﾄを
作成します｡";

//
// ========================================================================================
// == Healing Assistant-











