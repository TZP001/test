TestLocking = "Test the locking mecanism";
//
//
DescriptionLocked_ERR0100.Request    = "Attempt to modify a locked description named /p1";
DescriptionLocked_ERR0100.Diagnostic = "a protection has been set (/p3-/p4-/p5 at /p6:/p7:/p8) for that reason : /p2"; 
DescriptionLocked_ERR0100.Advice     = "Remove the protection on the description if the reason does not matter";
//
//
DuplicateAssociationToPPR_ERR1000.Request    = "Attempt to create an association named /p";
DuplicateAssociationToPPR_ERR1000.Diagnostic = "Such association already exist"; 
DuplicateAssociationToPPR_ERR1000.Advice     = "Do not use names of existing associations";
//
DuplicateLinkToPPR_ERR1001.Request    = "Attempt to create a link to /p1 in an association named /p2";
DuplicateLinkToPPR_ERR1001.Diagnostic = "Such a link already exist in that association"; 
DuplicateLinkToPPR_ERR1001.Advice     = "Do not link twice the same object in an association";
//
LinkToAnotherDocument_ERR1002.Request    = "Attempt to create a link to /p1 in an association named /p2";
LinkToAnotherDocument_ERR1002.Diagnostic = "Links in that association are all pointing to document /p1, so you cannot create a link to /p2 as this will lead to point to /p3"; 
LinkToAnotherDocument_ERR1002.Advice     = "All the links of an association must point on the same document";
//
//
DuplicateScript_ERR1010.Request    = "Attempt to create a script named /p";
DuplicateScript_ERR1010.Diagnostic = "Such a script already exist"; 
DuplicateScript_ERR1010.Advice     = "Do not use names of existing scripts";
//
//
ActionAlreadyInGroup_ERR1020.Request    = "Attempt to add an action named /p1 to group /p2";
ActionAlreadyInGroup_ERR1020.Diagnostic = "This action already belongs to a group"; 
ActionAlreadyInGroup_ERR1020.Advice     = "Remove it from its group before adding it to another group";
//
ActionSourceBadForGroup_ERR1021.Request    = "Attempt to add an action named /p1 to group /p2";
ActionSourceBadForGroup_ERR1021.Diagnostic = "The source of this action is within the output objects pointed by the group"; 
ActionSourceBadForGroup_ERR1021.Advice     = "Choose an action whose direction is consistent with the group's one";
//
ActionDestinationBadForGroup_ERR1022.Request    = "Attempt to add an action named /p1 to group /p2";
ActionDestinationBadForGroup_ERR1022.Diagnostic = "The destination of this action is within the input objects pointed by the group"; 
ActionDestinationBadForGroup_ERR1022.Advice     = "Choose an action whose direction is consistent with the group's one";
//
UntiedActionForGroup_ERR1023.Request    = "Attempt to add an action named /p1 to group /p2";
UntiedActionForGroup_ERR1023.Diagnostic = "The source and/or the destination of this action must be objects"; 
UntiedActionForGroup_ERR1023.Advice     = "Choose a tied action whose direction is consistent with the group's one";
//
//
NoGenerativeKnowledgeLicense_ERR1030.Request    = "Attempt to generate from the /p1 script definition of the functional element /p2";
NoGenerativeKnowledgeLicense_ERR1030.Diagnostic = "A license is necessary to use GenerativeKnowledge capabilities"; 
NoGenerativeKnowledgeLicense_ERR1030.Advice     = "Make sure you have access to a PKT (Product Knowledge Template) license";
//
NoGenerativeKnowledgeLicense_ERR1031.Request    = "Attempt to get the wizard while defining the /p1 script of the functional element /p2";
NoGenerativeKnowledgeLicense_ERR1031.Diagnostic = "A license is necessary to use GenerativeKnowledge capabilities"; 
NoGenerativeKnowledgeLicense_ERR1031.Advice     = "Make sure you have access to a PKT (Product Knowledge Template) license";
