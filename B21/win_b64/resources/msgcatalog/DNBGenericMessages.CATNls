
// Messages for Message Window
Error.NoResource="Error: Unable to simulate /P01. No Resource assigned to activity.";
Error.NotAMechanism="Error: Unable to simulate /P01. Resource assigned, /P02, is not a mechanism.";
Error.NoGrabbingDevice="Error: Unable to simulate Grab activity /P01. Grabbing Object is not correctly assigned.";
Error.NoGrabbedDevice="Error: Unable to simulate Grab activity /P01. Grabbed Object is not correctly assigned.";
Error.NoTag="Error: Unable to simulate /P01. No Tag is assigned.";
Error.NotARobot="Error: Unable to simulate /P01. Resource assigned must be a robot.";
Error.UnableToSimulate="Error: Unable to simulate /P01.";
Error.InvalidHomeName="Error: Unable to simulate /P01, invalid home name /P02.";
Error.NoRscAllowed="Error: Unable to simulate /P01. Assigned device, /P02, belongs to ResourceList.";
Error.NoLinks="Unable to simulate: /P01 is not linked in the process.  Please link it, then try again.";

Error.CantReachTag="Error: Unable to reach tag location";

// CATDlgNotify messages
MoveActivityFactoryError.Title = "Unable to get Factory";
MoveActivityFactoryError.Message = "Internal Error: Unable to retrieve Move Activity Factory.";

UnableToCreateTagError.Title = "Unable to Create Tag";
UnableToCreateTagError.Message = "Internal Error: Unable to create TagActivity object.";

SPPChildManagementError.Title = "Unable to get CATISPPChildManagement";
SPPChildManagementError.Message = "Internal Error: Unable to retrieve CATISPPChildManagement interface.";

NotAMech.Title = "Selection Error";
NotAMech.Message = "Picked Object is not a Mechanism.";

UnreachableTag.Title = "Unreachable Tag";
UnreachableTag.Message = "Tag Selected is Unreachable";

NotATagOrPath.Title = "Selection Error";
NotATagOrPath.Message = "Internal Error: The object selected is neither a Path or Node object.";

NoActionCreated.Title = "Root Process Selected ";
NoActionCreated.Message = "Error : Cannot create an Action for Root Process, Atleast create a Path";

AddActionFailed.Title = "Cannot Create Action";
AddActionFailed.Message = "Error : Add Action Failed, cannot create for AtomicActivities";

NoActionAdded.Title = "Cannot Add Action";
NoActionAdded.Message = "Error : Action created already exists, Change the name";

NoResourceAssigned.Title = "No Resource";
NoResourceAssigned.Message = "Invalid or No Resource assigned to Activity.";

Error.CollisionDetected = "Collision detected for /P01, simulation time: /P02  ";
Error.LocalCollisionDetected = "Collision detected for /P01, simulation time: /P02, travel distance: /P03  ";
Error.ActivityCollisionDetected = "Collision detected for /P01, simulation time: /P02, activity: /P04, travel distance: /P03  ";
Info.Distance = "/P01 minimum distance for /P02 and /P03 is /P04, simulation time: /P05  ";
Info.LocalDistance = "/P01 minimum distance for /P02 and /P03 is /P04, simulation time: /P05, travel distance: /P06 ";
Info.ActivityDistance = "/P01 minimum distance for /P02 and /P03 is /P04, simulation time: /P05, activity: /P07, travel distance: /P06 ";

Error.NoHandle = "Unable to build the handle";

CmdError.Title = "Error";
CmdError.Message = "Operation not allowed in the current context";

CurvesId = "Curves";
HighlightId = "Highlight";

OffId = "Off";
// HighlightId = "Highlight"; // previously declared
VerboseId = "Verbose";
InterruptId = "Interrupt";

Precedence.LoopDetected1="Loop detected while setting '/P02' as precedent for '/P01'";
Precedence.LoopDetected2="Precedence constraint ignored on activity '/P01'!";

Precedence.InvalidPrecedent1="Invalid precedent '/P02' detected for '/P01'";
Precedence.InvalidPrecedent2="Precedence constraint ignored on activity '/P01'!";

RepositionActivities.ProcCycle = "Cycle detected for the activity: ";
BadAttachment = "Child grabbing parent: /P01 => /P02. The attachment will be ignored";

BadAttachmentOnTag = "The attachment /P01: /P02 => /P03 is not supported and will be ignored.";
InactiveProd="Product '/P01' cannot be properly be simulated! It may be deactivated. Try to activate it, then restart the simulation.";


OffMonId = "Off";
OnMonId = "On";

NoId = "N/A";
ClearanceId = "Clearance";
ContactId = "Contact";
ClashId = "Clash";

PauseAct1 = "Simulation will be paused @ /P01 sec";
PauseAct2 = "Press the play button to continue...";
PauseAct3 = "Previously selected activity was: /P01.";
PauseAct4 = "Current activity will be set to: /P01.";

DNBSimMaxTime = "Simulation has reached MaxTime and will be stopped.";

DNBYesId = "Yes";
DNBNoId = "No";
DNBProcessId = "Process";
DNBParentId = "Parent";
DNBContinueId = "Continue";
DNBPauseId = "Pause";
DNBNotAvailId = "N/A";

Error.StartStart = "Error in Start/Start relation (in seconds):";
Error.EndEnd = "Error in End/End relation (in seconds):";

InitStateInfo.Message = "Simulation Initial State will be automatically migrated first time you run a simulation command. If you want to do the migration yourself, please execute Restore Initial State command and save the document.";
InvalidISTitle = "Initial state inconsistency was detected. It might impact the simulation results";
InvalidIS = "    Device pointing to /P01 has mismatched initial state";
InvalidISFix = "    To fix, please Restore Initial State, Jog device to desired position, then Save Initial State";

ErrorDisabledBkpEnd="Cannot update simulation at the end of /P01 activity. ";
ErrorDisabledBkpBegin="Cannot update simulation at the beginning of /P01 activity. ";
ErrorDisabledBkpCommon="  It is disabled most likely due to a preceding Switch activity.";

EndOfExportId = "End of export";
