//fichier CATStCLADefaultCommandHeader

// BREAK
CATStCLADefaultCommandHeader.BreakGeomHead.Title = "Break...";
CATStCLADefaultCommandHeader.BreakGeomHead.ShortHelp = "Break Surface or Curve";
CATStCLADefaultCommandHeader.BreakGeomHead.Help = "Removes a cell from a surface, or break a two-cell surface into two basic surfaces";
CATStCLADefaultCommandHeader.BreakGeomHead.LongHelp =
"Break Surface or Curve
Removes a cell from a surface or break
a two-cell surface into two basic surfaces.";

// AFFIX
CATStCLADefaultCommandHeader.AffixGeomHead.Title = "Untrim...";
CATStCLADefaultCommandHeader.AffixGeomHead.ShortHelp = "Untrim Surface or Curve";
CATStCLADefaultCommandHeader.AffixGeomHead.Help = "Untrims previously trimmed surfaces and curves";
CATStCLADefaultCommandHeader.AffixGeomHead.LongHelp =
"Untrim Surface or Curve
Untrims previously trimmed
surfaces and curves.";

// NEW PATCH COMMAND
CATStCLADefaultCommandHeader.PatchHead.Title = "Patch";
CATStCLADefaultCommandHeader.PatchHead.ShortHelp = "Patch";
CATStCLADefaultCommandHeader.PatchHead.Help = "Allows creation of multiple types of patches";
CATStCLADefaultCommandHeader.PatchHead.LongHelp =
"Patch
Supports creation of a planar or a 3 point patch or
a 4point patch or patch from an existing geometry
based on the selected reference support and 
construction points.";

// PLANAR PATCH
CATStCLADefaultCommandHeader.PlanePatchHead.Title = "Planar Patch";
CATStCLADefaultCommandHeader.PlanePatchHead.ShortHelp = "Planar Patch";
CATStCLADefaultCommandHeader.PlanePatchHead.Help = "Creates a planar single-patch surfacic element";
CATStCLADefaultCommandHeader.PlanePatchHead.LongHelp =
"Planar Patch
Creates a planar single-patch surface
starting where you first click.";

// 3-POINT PATCH
CATStCLADefaultCommandHeader.3PointsPatchHead.Title = "3-Point Patch";
CATStCLADefaultCommandHeader.3PointsPatchHead.ShortHelp = "3-Point Patch";
CATStCLADefaultCommandHeader.3PointsPatchHead.Help = "Creates a planar single-patch surface passing through three points";
CATStCLADefaultCommandHeader.3PointsPatchHead.LongHelp =
"3-Point Patch
Creates a planar and rectangular 
single-patch surface where the first two 
points define one side of the rectangle."; 

// 4-POINT PATCH
CATStCLADefaultCommandHeader.4PointsPatchHead.Title = "4-Point Patch";
CATStCLADefaultCommandHeader.4PointsPatchHead.ShortHelp = "4-Point Patch";
CATStCLADefaultCommandHeader.4PointsPatchHead.Help = "Creates a single-patch surface passing through four points";
CATStCLADefaultCommandHeader.4PointsPatchHead.LongHelp =
"4-Point Patch
Creates a single-patch surface passing
through four points, where the first three
have to lie on existing geometry.";

// EXTRUDE SURFACE
CATStCLADefaultCommandHeader.ExtrudeSurfaceHead.Title = "Extrude Surface...";
CATStCLADefaultCommandHeader.ExtrudeSurfaceHead.ShortHelp = "Extrude Surface";
CATStCLADefaultCommandHeader.ExtrudeSurfaceHead.Help = "Creates a ruled surface by extension from a curve";
CATStCLADefaultCommandHeader.ExtrudeSurfaceHead.LongHelp =
"Extrude Surface
Extrudes a curve in a given direction
to create a symmetric or non-symmetric
ruled surface. The resulting surface
is a tabulated surface.";	

// new control points (test command from the test toolbar)
CATStCLADefaultCommandHeader.CPHead.Title = "To Test CAA API V2";
CATStCLADefaultCommandHeader.CPHead.ShortHelp = "To Test CAA API V2";
CATStCLADefaultCommandHeader.CPHead.Help = "To Test CAA API V2";
CATStCLADefaultCommandHeader.CPHead.LongHelp =
"To Test CAA API V2.";

// new control points (test command from the test toolbar)
CATStCLADefaultCommandHeader.NewAnalysisHead.Title     = "To Test new analysis";
CATStCLADefaultCommandHeader.NewAnalysisHead.ShortHelp = "To Test new analysis";
CATStCLADefaultCommandHeader.NewAnalysisHead.Help      = "To Test new analysis";
CATStCLADefaultCommandHeader.NewAnalysisHead.LongHelp  =
"To Test new analysis.";

// SEGMENTATION (CONVERTER WIZARD)
CATStCLADefaultCommandHeader.SegmentationHead.Title = "Converter Wizard...";
CATStCLADefaultCommandHeader.SegmentationHead.ShortHelp = "Converter Wizard";
CATStCLADefaultCommandHeader.SegmentationHead.Help = "Converts an existing curve or surface";
CATStCLADefaultCommandHeader.SegmentationHead.LongHelp = 
"Converter Wizard
Converts a curve or a surface into NUPBS depending
on the tolerance or according to a specified 
order or maximum number of segments.";

// CURVE ON SURFACE
CATStCLADefaultCommandHeader.CurveOnSurfaceHead.Title = "Curve on Surface...";
CATStCLADefaultCommandHeader.CurveOnSurfaceHead.ShortHelp = "Curve on Surface";
CATStCLADefaultCommandHeader.CurveOnSurfaceHead.Help = "Creates a curve on a surface";
CATStCLADefaultCommandHeader.CurveOnSurfaceHead.LongHelp = 
"Curve on Surface
Creates a curve on a surface
or along any isoparametric
curve on the surface.
Click anywhere over the surface
to create intermediary points.";

// GAUSSIAN CURVATURE
CATStCLADefaultCommandHeader.GaussCurvatureHead.Title = "Gaussian Curvature";
CATStCLADefaultCommandHeader.GaussCurvatureHead.ShortHelp = "Gaussian Curvature";
CATStCLADefaultCommandHeader.GaussCurvatureHead.Help = "Analyzes the Gaussian curvature on shape";
CATStCLADefaultCommandHeader.GaussCurvatureHead.LongHelp = 
"Gaussian Curvature
Maps a color texture on a surface
according to the curvature in each point.";


// SURFACIC CURVATURE ANALYSIS
CATStCLADefaultCommandHeader.SpecSurfCurvatHead.Title = "Surfacic Curvature Analysis...";
CATStCLADefaultCommandHeader.SpecSurfCurvatHead.ShortHelp = "Surfacic Curvature Analysis";
CATStCLADefaultCommandHeader.SpecSurfCurvatHead.Help = "Analyzes the Gaussian curvature on shape";
CATStCLADefaultCommandHeader.SpecSurfCurvatHead.LongHelp = 
"Gaussian Curvature
Maps a color texture on a surface
according to the curvature in each point.";


// ENVIRONNEMENT MAPPING
CATStCLADefaultCommandHeader.EnvMappingHead.Title = "Old Environment Mapping";
CATStCLADefaultCommandHeader.EnvMappingHead.ShortHelp = "Old Environment Mapping";
CATStCLADefaultCommandHeader.EnvMappingHead.Help = "Adds reflection mapping over the complete body";
CATStCLADefaultCommandHeader.EnvMappingHead.LongHelp =
"Environment Mapping
Adds reflection mapping of a given 
environment over the complete body.";

// ISOPHOTES ANALYSIS
CATStCLADefaultCommandHeader.IsophotesHead.Title = "Isophotes Analysis...";
CATStCLADefaultCommandHeader.IsophotesHead.ShortHelp = "Isophotes Analysis";
CATStCLADefaultCommandHeader.IsophotesHead.Help = "Maps black stripes over the complete body";
CATStCLADefaultCommandHeader.IsophotesHead.LongHelp =
"Isophotes Analysis
Maps black stripes over the complete
body according to a direction.";

// OFFSET GEOMETRY
CATStCLADefaultCommandHeader.OffsetGeomHead.Title = "Offset...";
CATStCLADefaultCommandHeader.OffsetGeomHead.ShortHelp = "Offset";
CATStCLADefaultCommandHeader.OffsetGeomHead.Help = "Offsets surfaces with a given distance";
CATStCLADefaultCommandHeader.OffsetGeomHead.LongHelp =
"Offset
Offsets surfaces with 
a given distance.";

// EXTRAPOL GEOMETRY
CATStCLADefaultCommandHeader.ExtendGeomHead.Title = "Styling Extrapolate...";
CATStCLADefaultCommandHeader.ExtendGeomHead.ShortHelp = "Styling Extrapolate";
CATStCLADefaultCommandHeader.ExtendGeomHead.Help = "Extrapol curves or surfaces of a given length";
CATStCLADefaultCommandHeader.ExtendGeomHead.LongHelp =
"Styling Extrapolate
Extrapolates curves or surfaces
of a given length .";

// EXTEND GEOMETRY    R11                                                 
CATStCLADefaultCommandHeader.ParamXtendHead.Title = "Extend...";
CATStCLADefaultCommandHeader.ParamXtendHead.ShortHelp = "Extend";
CATStCLADefaultCommandHeader.ParamXtendHead.Help = "Extends curves or surfaces of a given length";
CATStCLADefaultCommandHeader.ParamXtendHead.LongHelp =
"Extend
Extends curves or surfaces
of a given length";

// NP3
// STYLING EXTRAPOLATE 
CATStCLADefaultCommandHeader.StylingExtrapolateHead.Title = "Styling Extrapolate...";
CATStCLADefaultCommandHeader.StylingExtrapolateHead.ShortHelp = "Styling Extrapolate";
CATStCLADefaultCommandHeader.StylingExtrapolateHead.Help = "Extrapol curves or surfaces of a given length";
CATStCLADefaultCommandHeader.StylingExtrapolateHead.LongHelp = 
"Styling Extrapolate 
Extrapolates curves or surfaces 
of a given length.";


// PROJECT CURVE
CATStCLADefaultCommandHeader.ProjectCurveHead.Title = "Project Curve...";
CATStCLADefaultCommandHeader.ProjectCurveHead.ShortHelp = "Project Curve";
CATStCLADefaultCommandHeader.ProjectCurveHead.Help = "Projects curves on surfaces";
CATStCLADefaultCommandHeader.ProjectCurveHead.LongHelp =
"Project Curve
Projects curve(s) on surface(s)
thus creating 2D or 3D curves.";

// ADVANCED FILL
CATStCLADefaultCommandHeader.OpenFillHead.Title = "Fill...";
CATStCLADefaultCommandHeader.OpenFillHead.ShortHelp = "Fill";
CATStCLADefaultCommandHeader.OpenFillHead.Help = "Creates surfaces filling space between existing surfaces";
CATStCLADefaultCommandHeader.OpenFillHead.LongHelp =
"Fill
Creates surfaces filling the space 
between geometrical elements, delimited 
by a closed or partially closed contour.";

// GEOMETRY EXTRACTION
CATStCLADefaultCommandHeader.PatchOnPatchHead.Title = "Geometry Extraction";
CATStCLADefaultCommandHeader.PatchOnPatchHead.ShortHelp = "Geometry Extraction";
CATStCLADefaultCommandHeader.PatchOnPatchHead.Help = "Extracts a part of geometry: surface or curve";
CATStCLADefaultCommandHeader.PatchOnPatchHead.LongHelp = 
"Geometry Extraction
Creates a surface or a curve 
by extracting and approximating 
a part of the original geometry.";

// CONNECT CHECKER
CATStCLADefaultCommandHeader.ConnectCheckerHead.Title = "Connect Checker...";
CATStCLADefaultCommandHeader.ConnectCheckerHead.ShortHelp = "Connect Checker";
CATStCLADefaultCommandHeader.ConnectCheckerHead.Help = "Checks surface connections";
CATStCLADefaultCommandHeader.ConnectCheckerHead.LongHelp =
"Connect Checker
Performs a connection analysis
between two surfaces: distance,
angle, or curvature analysis.";

// NEW CONNECT CHECKER
CATStCLADefaultCommandHeader.CCKAnalysisHead.Title = "Connect Checker Analysis...";
CATStCLADefaultCommandHeader.CCKAnalysisHead.ShortHelp = "Connect Checker Analysis";
CATStCLADefaultCommandHeader.CCKAnalysisHead.Help = "Performs a connection analysis";
CATStCLADefaultCommandHeader.CCKAnalysisHead.LongHelp =
"Connect Checker Analysis
checks connections between surfaces/curves
and measures G0, G1, G2 and G3 deviations";

// R18 - NEW CONNECT CHECKER ANALYSIS
CATStCLADefaultCommandHeader.NewCCKAnalysisHead.Title = "Connect Checker Analysis...";
CATStCLADefaultCommandHeader.NewCCKAnalysisHead.ShortHelp = "Connect Checker Analysis";
CATStCLADefaultCommandHeader.NewCCKAnalysisHead.Help = "Performs a connection analysis";
CATStCLADefaultCommandHeader.NewCCKAnalysisHead.LongHelp =
"Connect Checker Analysis
checks connections between surfaces/curves
and measures G0, G1, G2 and G3 deviations";

// PORCUPINE ANALYSIS
CATStCLADefaultCommandHeader.CurvaAnalysisHead.Title = "Porcupine Curvature Analysis...";
CATStCLADefaultCommandHeader.CurvaAnalysisHead.ShortHelp = "Porcupine Curvature Analysis";
CATStCLADefaultCommandHeader.CurvaAnalysisHead.Help = "Performs a porcupine curvature analysis on any curve";
CATStCLADefaultCommandHeader.CurvaAnalysisHead.LongHelp =
"Porcupine Curvature Analysis
Analyzes the curvature of
a set of curves using 
a porcupine representation.";

// PORCUPINE CURVATURE
CATStCLADefaultCommandHeader.PorcupineCurvatureHead.Title = "Porcupine Curvature Analysis...";
CATStCLADefaultCommandHeader.PorcupineCurvatureHead.ShortHelp = "Porcupine Curvature Analysis";
CATStCLADefaultCommandHeader.PorcupineCurvatureHead.Help = "Performs a porcupine curvature analysis on any curve";
CATStCLADefaultCommandHeader.PorcupineCurvatureHead.LongHelp =
"Porcupine Curvature Analysis
Analyzes the curvature of
a set of curves using 
a porcupine representation.";

// REFLECTION LINES
CATStCLADefaultCommandHeader.ReflectLinesHead.Title     = "Reflection Lines...";
CATStCLADefaultCommandHeader.ReflectLinesHead.ShortHelp = "Reflection Lines";
CATStCLADefaultCommandHeader.ReflectLinesHead.Help      = "Analyzes a set of surfaces with reflection lines";
CATStCLADefaultCommandHeader.ReflectLinesHead.LongHelp  =
"Reflection Lines
Dynamically computes the true 
reflection of a grid of neons
on a set of surfaces according 
to the point of view.";

// INFLECTION LINES
CATStCLADefaultCommandHeader.InflectLinesHead.Title     = "Inflection Lines...";
CATStCLADefaultCommandHeader.InflectLinesHead.ShortHelp = "Inflection Lines";
CATStCLADefaultCommandHeader.InflectLinesHead.Help      = "Analyzes a set of surfaces with inflection lines";
CATStCLADefaultCommandHeader.InflectLinesHead.LongHelp  =
"Inflection Lines
Dynamically computes
the inflection lines
(zero curvature points)
on a set of surfaces.";

//ISOPARAMETRIC CURVE ANALYSIS : BTO - 3DPLM
CATStCLADefaultCommandHeader.IsoparamAnalysisHead.Title = "Isoparametirc Curve Analysis...";
CATStCLADefaultCommandHeader.IsoparamAnalysisHead.ShortHelp = "Isoparametric Curve Analysis";
CATStCLADefaultCommandHeader.IsoparamAnalysisHead.Help = "Analyzes a set of surface with isoparametric curves" ;
CATStCLADefaultCommandHeader.IsoparamAnalysisHead.LongHelp = 
"Isoparametric Curve Analysis
 Analyzes a set of surfaces 
 based on set direction 
 and Number of Curves";

// CUTTING PLANE
CATStCLADefaultCommandHeader.CuttingPlnHead.Title = "Cutting Planes...";
CATStCLADefaultCommandHeader.CuttingPlnHead.ShortHelp =  "Cutting Planes ";
CATStCLADefaultCommandHeader.CuttingPlnHead.Help =  "Analyzes surfaces using plane sections";
CATStCLADefaultCommandHeader.CuttingPlnHead.LongHelp =
"Cutting Planes
Analyzes a set of surfaces 
based on plane intersections.";

// CUTTING PLANES
CATStCLADefaultCommandHeader.CuttingPlanesHead.Title = "Cutting Planes...";
CATStCLADefaultCommandHeader.CuttingPlanesHead.ShortHelp =  "Cutting Planes ";
CATStCLADefaultCommandHeader.CuttingPlanesHead.Help =  "Analyzes surfaces using plane sections";
CATStCLADefaultCommandHeader.CuttingPlanesHead.LongHelp =
"Cutting Planes
Analyzes a set of surfaces 
based on plane intersections.";

// R19 NEW CUTTING PLANE ANALYSIS
CATStCLADefaultCommandHeader.CuttingPlaneAnalysisHead.Title = "Cutting Plane Analysis...";
CATStCLADefaultCommandHeader.CuttingPlaneAnalysisHead.ShortHelp =  "Cutting Plane Analysis";
CATStCLADefaultCommandHeader.CuttingPlaneAnalysisHead.Help =  "Analyzes surfaces using plane sections";
CATStCLADefaultCommandHeader.CuttingPlaneAnalysisHead.LongHelp =
"Cutting Plane
Analyzes a set of surfaces 
based on plane intersections.";

// DISTANCE ANALYSIS
CATStCLADefaultCommandHeader.DynDistanceHead.Title = "Distance Analysis...";
CATStCLADefaultCommandHeader.DynDistanceHead.ShortHelp = "Distance Analysis";
CATStCLADefaultCommandHeader.DynDistanceHead.Help = "Analyzes distances between two sets of elements";
CATStCLADefaultCommandHeader.DynDistanceHead.LongHelp =
"Distance Analysis
Analyzes the distance between
a set of curves or surfaces 
and a set of any geometric elements.";

// DISTANCE ANALYSIS
CATStCLADefaultCommandHeader.NewDynDistanceHead.Title = "Distance Analysis...";
CATStCLADefaultCommandHeader.NewDynDistanceHead.ShortHelp = "Distance Analysis";
CATStCLADefaultCommandHeader.NewDynDistanceHead.Help = "Analyzes distances between two sets of elements";
CATStCLADefaultCommandHeader.NewDynDistanceHead.LongHelp =
"Distance Analysis
Analyzes the distance between
a set of curves or surfaces 
and a set of any geometric elements.";


// CURVE BLEND
CATStCLADefaultCommandHeader.CurveConnectHead.Title = "Blend Curve";
CATStCLADefaultCommandHeader.CurveConnectHead.ShortHelp = "FreeStyle Blend Curve";
CATStCLADefaultCommandHeader.CurveConnectHead.Help = "Creates a connecting curve between two other curves";
CATStCLADefaultCommandHeader.CurveConnectHead.LongHelp =
"FreeStyle Blend Curve
Creates a connecting curve between 
two curves or points on curves.";

// SURFACE BLEND
CATStCLADefaultCommandHeader.SurfaceBlendHead.Title = "Blend Surface...";
CATStCLADefaultCommandHeader.SurfaceBlendHead.ShortHelp = "FreeStyle Blend Surface";
CATStCLADefaultCommandHeader.SurfaceBlendHead.Help = "Creates a blend surface between any two supports";
CATStCLADefaultCommandHeader.SurfaceBlendHead.LongHelp =
"FreeStyle Blend Surface
Creates a blend surface between 
any two supports. Continuities
on limits, tensions and other
parameters can be changed 
afterwards.";

// CURVE MATCH
CATStCLADefaultCommandHeader.CurveMatchHead.Title = "Match Curve";
CATStCLADefaultCommandHeader.CurveMatchHead.ShortHelp = "Match Curve";
CATStCLADefaultCommandHeader.CurveMatchHead.Help = "Deforms one curve to match another curve or surface border";
CATStCLADefaultCommandHeader.CurveMatchHead.LongHelp =
"Match Curve
Modifies the shape of a curve to join it
to another element: a point or curve.";

// SURFACE MATCH
CATStCLADefaultCommandHeader.SurfaceMatchHead.Title = "Match Surface...";
CATStCLADefaultCommandHeader.SurfaceMatchHead.ShortHelp = "Match Surface";
CATStCLADefaultCommandHeader.SurfaceMatchHead.Help="Deforms a surface to match a curve";
CATStCLADefaultCommandHeader.SurfaceMatchHead.LongHelp=
"Match Surface
Deforms the boundary of a surface 
so that the boundary matches a curve. 
Offers the capability to manage 
this surface continuity.";

// FIT TO GEOMETRY
CATStCLADefaultCommandHeader.FitToGeometryHead.Title = "Fit to Geometry...";
CATStCLADefaultCommandHeader.FitToGeometryHead.ShortHelp = "Fit to Geometry";
CATStCLADefaultCommandHeader.FitToGeometryHead.Help = "Fits the shape of one geometric element to another";
CATStCLADefaultCommandHeader.FitToGeometryHead.LongHelp =
"Fit to Geometry
Fits the shape of one geometric 
element to another according to
a given direction and constraints.";

// New FIT
CATStCLADefaultCommandHeader.NewFitHead.Title = "Fit to Geometry...";
CATStCLADefaultCommandHeader.NewFitHead.ShortHelp = "Fit to Geometry";
CATStCLADefaultCommandHeader.NewFitHead.Help = "Fits the shape of one geometric element to another";
CATStCLADefaultCommandHeader.NewFitHead.LongHelp =
"Fit to Geometry
Fits the shape of one geometric 
element to another according to
a given direction and constraints.";

// Old CONTROL POINTS version (old from R15, modif NLS R16 => + 'Old')
CATStCLADefaultCommandHeader.ControlPointsHead.Title = "Old Control Points";
CATStCLADefaultCommandHeader.ControlPointsHead.ShortHelp = "Old Control Points";
CATStCLADefaultCommandHeader.ControlPointsHead.Help="Deforms a surface or a curve by its control points";
CATStCLADefaultCommandHeader.ControlPointsHead.LongHelp=
"Control Points
Modifies a surface or a curve 
moving its control points. 
Manages smoothing and degrees
and allows the mesh display of
several surfaces.";

// GLOBAL DEFORMATION
CATStCLADefaultCommandHeader.GlobalDeformHead.Title = "Global Deformation...";
CATStCLADefaultCommandHeader.GlobalDeformHead.ShortHelp = "Global Deformation";
CATStCLADefaultCommandHeader.GlobalDeformHead.Help = "Globally deforms a set of surfaces";
CATStCLADefaultCommandHeader.GlobalDeformHead.LongHelp =
"Global Deformation
Deforms a set of surfaces using an
intermediate patch or a manipulator.";

// STRETCH VIEW
CATStCLADefaultCommandHeader.StretchViewHead.Title = "Stretch View";
CATStCLADefaultCommandHeader.StretchViewHead.ShortHelp = "Stretch View";
CATStCLADefaultCommandHeader.StretchViewHead.Help = "Defines a limited area to apply a specific visualization on part of the screen";
CATStCLADefaultCommandHeader.StretchViewHead.LongHelp = 
"Stretch View
Indicates a rectangular region in the current
view to be stretched to the maximum visible size.
A scaling factor can be defined.";

// AUTODETECTION
CATStCLADefaultCommandHeader.AutodetectionHead.Title = "Autodetection";
CATStCLADefaultCommandHeader.AutodetectionHead.ShortHelp = "Autodetection";
CATStCLADefaultCommandHeader.AutodetectionHead.Help = "Autodetection";
CATStCLADefaultCommandHeader.AutodetectionHead.LongHelp = 
"Autodetection
Activates the autodetection mode
and defines its properties.";

// Highlight lines
CATStCLADefaultCommandHeader.HighlightLinesHead.Title = "Highlight lines...";
CATStCLADefaultCommandHeader.HighlightLinesHead.ShortHelp = "Highlight lines Analysis";
CATStCLADefaultCommandHeader.HighlightLinesHead.Help = "Analyzes surfaces using highlight lines";
CATStCLADefaultCommandHeader.HighlightLinesHead.LongHelp = 
"Highlight Lines
Dynamically computes
the highlight lines
(isophotes or iso-tangent)
on a set of surfaces.";

// Environment Mapping
CATStCLADefaultCommandHeader.EnvMappingAnalysisHead.Title = "Environment Mapping...";
CATStCLADefaultCommandHeader.EnvMappingAnalysisHead.ShortHelp = "Environment Mapping Analysis";
CATStCLADefaultCommandHeader.EnvMappingAnalysisHead.Help = "Analyzes surfaces using environment mapping";
CATStCLADefaultCommandHeader.EnvMappingAnalysisHead.LongHelp = 
"Environment Mapping
Dynamically applies texture
on a set of surfaces.";

// Isophotes Mapping
CATStCLADefaultCommandHeader.IsoMappingAnalysisHead.Title = "Isophotes Mapping...";
CATStCLADefaultCommandHeader.IsoMappingAnalysisHead.ShortHelp = "Isophotes Mapping Analysis";
CATStCLADefaultCommandHeader.IsoMappingAnalysisHead.Help = "Analyzes surfaces using isophotes mapping";
CATStCLADefaultCommandHeader.IsoMappingAnalysisHead.LongHelp = 
"Isophotes Mapping
Dynamically applies texture
on a set of surfaces.";

// Single Light Band
CATStCLADefaultCommandHeader.StSingleLightBandHead.Title = "Single Light Band Mapping...";
CATStCLADefaultCommandHeader.StSingleLightBandHead.ShortHelp = "Single Light Band Mapping Analysis";
CATStCLADefaultCommandHeader.StSingleLightBandHead.Help = "Analyzes surfaces using a Single Light Band mapping";
CATStCLADefaultCommandHeader.StSingleLightBandHead.LongHelp = 
"Dynamically applies texture
representing a Single Light Band
on a set of surfaces.";

// Matching Constraint
CATStCLADefaultCommandHeader.ConstraintMatchHead.Title = "Matching Constraint...";
CATStCLADefaultCommandHeader.ConstraintMatchHead.ShortHelp = "Matching Constraint";
CATStCLADefaultCommandHeader.ConstraintMatchHead.Help = "Matches Surface, Curve using constraint's mechanism";
CATStCLADefaultCommandHeader.ConstraintMatchHead.LongHelp = "Matches Surface, Curve using constraint's mechanism";

// DIRECT DEFORMATION
CATStCLADefaultCommandHeader.DirectDeformHead.Title = "Direct Deformation";
CATStCLADefaultCommandHeader.DirectDeformHead.ShortHelp = "Direct Deformation";
CATStCLADefaultCommandHeader.DirectDeformHead.Help = "Deforms curves and surfaces directly";
CATStCLADefaultCommandHeader.DirectDeformHead.LongHelp = 
"Direct Deformation
Allows the direct deformation 
of curves and surfaces using 
manipulation of points on geometry.";

// BODY DISASSEMBLE
CATStCLADefaultCommandHeader.BodyDisassembleHead.Title = "Disassemble...";
CATStCLADefaultCommandHeader.BodyDisassembleHead.ShortHelp = "Disassemble";
CATStCLADefaultCommandHeader.BodyDisassembleHead.Help = "Disassembles multi-cell bodies into mono-cell bodies";
CATStCLADefaultCommandHeader.BodyDisassembleHead.LongHelp = 
"Disassemble
Disassembles multi-cell bodies
into mono-cell bodies.";

// BODY EXPLODE
CATStCLADefaultCommandHeader.BodyExplodeHead.Title = "Fragmentation...";
CATStCLADefaultCommandHeader.BodyExplodeHead.ShortHelp = "Fragmentation";
CATStCLADefaultCommandHeader.BodyExplodeHead.Help = "Explodes multi-patch surfaces into mono-patch surfaces";
CATStCLADefaultCommandHeader.BodyExplodeHead.LongHelp = 
"Fragmentation
Explodes multi-patch surfaces
into mono-patch surfaces.";

// DRAFT ANALYSIS - SPEC V5R9
CATStCLADefaultCommandHeader.SpecDraftAnaHead.Title = "Draft Analysis...";
CATStCLADefaultCommandHeader.SpecDraftAnaHead.ShortHelp = "Draft Analysis";
CATStCLADefaultCommandHeader.SpecDraftAnaHead.Help = "Analyses the draft direction on selected surfaces";
CATStCLADefaultCommandHeader.SpecDraftAnaHead.LongHelp = 
"Feature Draft Analysis
Maps a color texture on surfaces according to
the delta angle value between the normal vector
and the draft direction on each surface point.";

// DRAFT ANALYSIS
CATStCLADefaultCommandHeader.DraftAnalysisHead.Title = "Old Draft Analysis";
CATStCLADefaultCommandHeader.DraftAnalysisHead.ShortHelp = "Old Draft Analysis";
CATStCLADefaultCommandHeader.DraftAnalysisHead.Help = "Analyses the draft direction on selected surfaces";
CATStCLADefaultCommandHeader.DraftAnalysisHead.LongHelp = 
"Draft Analysis
Maps a color texture on surfaces according to
the delta angle value between the normal vector
and the draft direction on each surface point.";

// LOFT FMC
CATStCLADefaultCommandHeader.GenLoftHead.Title = "Net Surface...";
CATStCLADefaultCommandHeader.GenLoftHead.ShortHelp = "Net Surface";
CATStCLADefaultCommandHeader.GenLoftHead.Help = "Creates a surface on a net of curves";
CATStCLADefaultCommandHeader.GenLoftHead.LongHelp =
"Net Surface
Creates a surface from two sets of curves 
namely guides and profiles.";

// QUICKCOMPASS ORIENTATION
CATStCLADefaultCommandHeader.QuickCompassOrientationHead.Title = "Compass Management";
CATStCLADefaultCommandHeader.QuickCompassOrientationHead.ShortHelp = "Quick Compass Orientation";
CATStCLADefaultCommandHeader.QuickCompassOrientationHead.Help = "Enables quick compass orientation";
CATStCLADefaultCommandHeader.QuickCompassOrientationHead.LongHelp = 
"Quick Compass Orientation
Enables quick compass orientation
using a dedicated toolbar.";

// FLIP COMPASS
CATStCLADefaultCommandHeader.FlipCompassBaseHead.Title = "Flip compass base";
CATStCLADefaultCommandHeader.FlipCompassBaseHead.ShortHelp = "Flips the compass' base";
CATStCLADefaultCommandHeader.FlipCompassBaseHead.Help = "Flips the compass' base";
CATStCLADefaultCommandHeader.FlipCompassBaseHead.LongHelp = 
"Flips the compass' base
Flips the compass' base between the three
main planes (XYZ) defined by the compass axes.";

// RESET COMPASS
CATStCLADefaultCommandHeader.ResetCompassHead.Title = "Reset compass to XYZ";
CATStCLADefaultCommandHeader.ResetCompassHead.ShortHelp = "Resets Compass to XYZ";
CATStCLADefaultCommandHeader.ResetCompassHead.Help = "Resets the Compass according to XYZ";
CATStCLADefaultCommandHeader.ResetCompassHead.LongHelp = 
"Resets Compass to XYZ
Resets the compass axes so that they are
parallel to the model (XYZ) axes.";

// SET ORIENTATION
CATStCLADefaultCommandHeader.SetCompassHead.Title = "Set compass orientation";
CATStCLADefaultCommandHeader.SetCompassHead.ShortHelp = "Set compass' base by selection";
CATStCLADefaultCommandHeader.SetCompassHead.Help = "Enables the compass' base to be set by selection";
CATStCLADefaultCommandHeader.SetCompassHead.LongHelp = 
"Set compass' base by selection
Enables the orientation of the compass' base
by selecting geometric elements.";

// DROP COMPASS
CATStCLADefaultCommandHeader.DropCompassPlaneHead.Title = "Drop compass plane";
CATStCLADefaultCommandHeader.DropCompassPlaneHead.ShortHelp = "Creates plane from compass base";
CATStCLADefaultCommandHeader.DropCompassPlaneHead.Help = "Creates the plane corresponding to the compass' base";
CATStCLADefaultCommandHeader.DropCompassPlaneHead.LongHelp = 
"Creates plane from compass base
Creates the plane corresponding to
the compass' base.";

// CREATE AXIS SYSTEM
CATStCLADefaultCommandHeader.CreateAxisSystemHead.Title = "Create axis system...";
CATStCLADefaultCommandHeader.CreateAxisSystemHead.ShortHelp = "Create axis system";
CATStCLADefaultCommandHeader.CreateAxisSystemHead.Help = "Creates axis system from the position of the compass in 3D.";
CATStCLADefaultCommandHeader.CreateAxisSystemHead.LongHelp = 
"Create axis system
Creates axis system from the position of the compass in 3D.";

// Set TO MEAN PLANE
CATStCLADefaultCommandHeader.MeanPlaneHead.Title = "Set compass to mean plane...";
CATStCLADefaultCommandHeader.MeanPlaneHead.ShortHelp = "Set compass to mean plane";
CATStCLADefaultCommandHeader.MeanPlaneHead.Help = "Sets the compass to mean plane computed from n elements.";
CATStCLADefaultCommandHeader.MeanPlaneHead.LongHelp = 
"Set compass to mean plane
Sets the compass to mean plane computed
from the selected n elements in 3D.";

// Set TO MEAN PLANE
CATStCLADefaultCommandHeader.TracePlaneHead.Title = "Set compass to trace plane...";
CATStCLADefaultCommandHeader.TracePlaneHead.ShortHelp = "Set compass to trace plane";
CATStCLADefaultCommandHeader.TracePlaneHead.Help = "Set compass to trace plane.";
CATStCLADefaultCommandHeader.TracePlaneHead.LongHelp = 
"Set compass to trace plane
Sets the compass to trace plane computed by selecting 2 points
(first direction) and second direction being the normal to screen.";

// FREE STYLE VISU SHOW
CATStCLADefaultCommandHeader.FSVisuShowHead.Title = "Apply Dress-Up...";
CATStCLADefaultCommandHeader.FSVisuShowHead.ShortHelp = "Apply Dress-Up";
CATStCLADefaultCommandHeader.FSVisuShowHead.Help = "Applies chosen dress-up options on current selection";
CATStCLADefaultCommandHeader.FSVisuShowHead.LongHelp = 
"Apply Dress-Up
Applies the pre-defined dress-up options
on the currently selected elements.";

// FREE STYLE VISU HIDE
CATStCLADefaultCommandHeader.FSVisuHideHead.Title = "Remove Dress-Up";
CATStCLADefaultCommandHeader.FSVisuHideHead.ShortHelp = "Remove Dress-Up";
CATStCLADefaultCommandHeader.FSVisuHideHead.Help = "Removes chosen dress-up options on current selection";
CATStCLADefaultCommandHeader.FSVisuHideHead.LongHelp = 
"Remove Dress-Up
Removes the pre-defined dress-up options
on the currently selected elements.";

// FREE STYLE VISU DressUp
CATStCLADefaultCommandHeader.FSVisuDressUpHdr.Title = "Dress-Up...";
CATStCLADefaultCommandHeader.FSVisuDressUpHdr.ShortHelp = "Dress-Up";
CATStCLADefaultCommandHeader.FSVisuDressUpHdr.Help = "Applies chosen dress-up options on current selection";
CATStCLADefaultCommandHeader.FSVisuDressUpHdr.LongHelp = 
"Dress-Up
Applies dress-up options
on the currently selected elements.";

// FREE STYLE VISU OPTIONS
CATStCLADefaultCommandHeader.FSVisuOptionsHead.Title = "Visualization Options";
CATStCLADefaultCommandHeader.FSVisuOptionsHead.ShortHelp = "Visualization Options";
CATStCLADefaultCommandHeader.FSVisuOptionsHead.Help = "Allows to customize visualization options on current selection";
CATStCLADefaultCommandHeader.FSVisuOptionsHead.LongHelp = 
"Visualization Options
Allows to customize visualization options
to be applied on the currently selected elements.";

// MULTISURFACE's MATCH
CATStCLADefaultCommandHeader.NSideMatchHead.Title = "Multi-Side Match Surface...";
CATStCLADefaultCommandHeader.NSideMatchHead.ShortHelp = "Multi-Side Match Surface";
CATStCLADefaultCommandHeader.NSideMatchHead.Help= "Deforms a surface to match another ones";
CATStCLADefaultCommandHeader.NSideMatchHead.LongHelp =
"Multi-Side Match Surface
Deforms one to four boundaries of a surface
so that they match target surfaces.
Offers the capability to manage the
connection continuities.";

// SWEEP SURFACE
CATStCLADefaultCommandHeader.SweepHead.Title = "Styling Sweep...";
CATStCLADefaultCommandHeader.SweepHead.ShortHelp = "Styling Sweep";
CATStCLADefaultCommandHeader.SweepHead.Help= "Creates a surface according to a profile curve";
CATStCLADefaultCommandHeader.SweepHead.LongHelp =
"Styling Sweep
Creates a surface according to
a profile curve lying on a spine and
guide curves, and with respect to
different moving frame laws.";

// ROTATION Y-AXIS
CATStCLADefaultCommandHeader.LacetRotateViewHead.Title = "Rotation About Z Screen Axis";
CATStCLADefaultCommandHeader.LacetRotateViewHead.ShortHelp = "Rotation About Z Screen Axis";
CATStCLADefaultCommandHeader.LacetRotateViewHead.Help= "Rotates elements about the Z screen axis";
CATStCLADefaultCommandHeader.LacetRotateViewHead.LongHelp =
"Rotation About Z Screen Axis
Freezes the rotation of 
the selected elements
about the screen Z axis.";

// ROTATION X-AXIS
CATStCLADefaultCommandHeader.PetchRotateViewHead.Title = "Rotation About X Screen Axis";
CATStCLADefaultCommandHeader.PetchRotateViewHead.ShortHelp = "Rotation About X Screen Axis";
CATStCLADefaultCommandHeader.PetchRotateViewHead.Help= "Rotates elements about the X screen axis";
CATStCLADefaultCommandHeader.PetchRotateViewHead.LongHelp =
"Rotation About X Screen Axis
Freezes the rotation of 
the selected elements
about the screen X axis.";

// ROTATION Z-AXIS
CATStCLADefaultCommandHeader.RollRotateViewHead.Title = "Rotation About Y Screen Axis";
CATStCLADefaultCommandHeader.RollRotateViewHead.ShortHelp = "Rotation About Y Screen Axis";
CATStCLADefaultCommandHeader.RollRotateViewHead.Help= "Rotates elements about the Y screen axis";
CATStCLADefaultCommandHeader.RollRotateViewHead.LongHelp =
"Rotation About Y Screen Axis
Freezes the rotation of 
the selected elements
about the screen Y axis.";

// TRANSLATION & ZOOM
CATStCLADefaultCommandHeader.ZoomAndTranslateHead.Title = "Zoom And Translate";
CATStCLADefaultCommandHeader.ZoomAndTranslateHead.ShortHelp = "Zoom And Translate";
CATStCLADefaultCommandHeader.ZoomAndTranslateHead.Help= "Allows zooming and translation only";
CATStCLADefaultCommandHeader.ZoomAndTranslateHead.LongHelp =
"Zoom And Translate
Freezes the manipulation capabilities
to translation (vertical and horizontal)
and zooming (in and out).";

// STANDARD VIEW MANIPULATION
CATStCLADefaultCommandHeader.DefaultViewManipHead.Title = "Standard View Manipulation";
CATStCLADefaultCommandHeader.DefaultViewManipHead.ShortHelp = "Standard View Manipulation";
CATStCLADefaultCommandHeader.DefaultViewManipHead.Help= "Resets view manipulation";
CATStCLADefaultCommandHeader.DefaultViewManipHead.LongHelp =
"Standard View Manipulation
Resets view manipulation to the standard manipulation.";

// VIEW POINT DEFINITION
CATStCLADefaultCommandHeader.CompassViewHead.Title = "Viewpoint Definition";
CATStCLADefaultCommandHeader.CompassViewHead.ShortHelp = "Interactive Viewpoint Definition";
CATStCLADefaultCommandHeader.CompassViewHead.Help= "Sets the viewpoint to the compass orientation";
CATStCLADefaultCommandHeader.CompassViewHead.LongHelp =
"Interactive Viewpoint Definition
Sets the viewpoint to the compass orientation.";

// INVERSE SIGHT
CATStCLADefaultCommandHeader.InverseSightHead.Title = "Reverse Viewpoint";
CATStCLADefaultCommandHeader.InverseSightHead.ShortHelp = "Reverse Viewpoint";
CATStCLADefaultCommandHeader.InverseSightHead.Help= "Inverts the viewpoint from the current viewer ";
CATStCLADefaultCommandHeader.InverseSightHead.LongHelp =
"Reverse Viewpoint
Inverts the viewpoint from the current viewer,
wether from the compass orientation 
or from the default view.";

// PREVIOUS VIEW
CATStCLADefaultCommandHeader.PreviousViewHead.Title = "Previous View";
CATStCLADefaultCommandHeader.PreviousViewHead.ShortHelp = "Previous View";
CATStCLADefaultCommandHeader.PreviousViewHead.Help= "Displays the previous view";
CATStCLADefaultCommandHeader.PreviousViewHead.LongHelp =
"Previous View
Displays the previous view.";

// NEXT VIEW
CATStCLADefaultCommandHeader.NextViewHead.Title = "Next View";
CATStCLADefaultCommandHeader.NextViewHead.ShortHelp = "Next View";
CATStCLADefaultCommandHeader.NextViewHead.Help= "Displays next view";
CATStCLADefaultCommandHeader.NextViewHead.LongHelp =
"Next View
Displays the next view.";

// CURVE CONNECT CHECKER
CATStCLADefaultCommandHeader.CurveCCKHead.Title = "Curve Connect Checker...";
CATStCLADefaultCommandHeader.CurveCCKHead.ShortHelp = "Curve Connect Checker";
CATStCLADefaultCommandHeader.CurveCCKHead.Help= "Checks curve connections";
CATStCLADefaultCommandHeader.CurveCCKHead.LongHelp = 
"Curve Connect Checker
Performs a connection analysis
between curves: distance,
angle, or curvature analysis.";

// SPLIT
CATStCLADefaultCommandHeader.SplitGeomHead.Title = "FreeStyle Split...";
CATStCLADefaultCommandHeader.SplitGeomHead.ShortHelp = "FreeStyle Split Surface or Curve";
CATStCLADefaultCommandHeader.SplitGeomHead.Help = "Removes a cell from a surface, or break a two-cell surface into two basic surfaces";
CATStCLADefaultCommandHeader.SplitGeomHead.LongHelp =
"FreeStyle Split
Removes a cell from a surface or break
a two-cell surface into two basic surfaces.";

// CHECK CLASS A
CATStCLADefaultCommandHeader.CAATestHead.Title     = "CAA Test Command";
CATStCLADefaultCommandHeader.CAATestHead.ShortHelp = "To Check CAA APIs";
CATStCLADefaultCommandHeader.CAATestHead.Help      = "Checks CAA APIs";
CATStCLADefaultCommandHeader.CAATestHead.LongHelp =
"Check CAA APIs
Checks CAA APIs and provide an
example for their usage.";


// CHECK CAA Untrim 
CATStCLADefaultCommandHeader.CAATstUntrimHdr.Title     = "CAA Untrim" ;
CATStCLADefaultCommandHeader.CAATstUntrimHdr.ShortHelp = "Untrim Curve or Surface" ;
CATStCLADefaultCommandHeader.CAATstUntrimHdr.Help      = "Untrim Create/modify datum features" ;
CATStCLADefaultCommandHeader.CAATstUntrimHdr.LongHelp  = "CAA provided command: Untrim Create/modify datum features" ;
CATStCLADefaultCommandHeader.CAATstUntrimHdr.Category  = "Insert" ;



// DashBoard
CATStCLADefaultCommandHeader.DBViewHead.Title     = "Dashboard command";
CATStCLADefaultCommandHeader.DBViewHead.ShortHelp = "To visualize Dashboard dialog box";
CATStCLADefaultCommandHeader.DBViewHead.Help      = "Visualize Dashboard dialog box";
CATStCLADefaultCommandHeader.DBViewHead.LongHelp =
"Visualize Dashboard dialog box
Visualize Dashboard dialog box and
launch the associated command.";

//  VISUAL SYMMETRY
CATStCLADefaultCommandHeader.VisuSymHead.Title = "Visual Symmetry...";
CATStCLADefaultCommandHeader.VisuSymHead.ShortHelp = "Visual Symmetry";
CATStCLADefaultCommandHeader.VisuSymHead.Help = "Constructs a visual symmetrical representation of a selected Part";
CATStCLADefaultCommandHeader.VisuSymHead.LongHelp= 
"Visual Symmetry
Constructs a visual symmetrical representation 
of a selected Part in Product context";

// GEOMETRIC INFORMATION
CATStCLADefaultCommandHeader.GeomInfoHead.Title = "Geometric Information";
CATStCLADefaultCommandHeader.GeomInfoHead.ShortHelp = "Geometric Information";
CATStCLADefaultCommandHeader.GeomInfoHead.Help = "Gives a geometric information on a selected face/edge";
CATStCLADefaultCommandHeader.GeomInfoHead.LongHelp= 
"Geometric Information
Gives a geometric information on a selected face/edge";

// CONCATENATE
CATStCLADefaultCommandHeader.ConcatenHead.Title = "Concatenate...";
CATStCLADefaultCommandHeader.ConcatenHead.ShortHelp = "Concatenate";
CATStCLADefaultCommandHeader.ConcatenHead.Help = "Concatenates curves";
CATStCLADefaultCommandHeader.ConcatenHead.LongHelp= 
"Concatenate
Concatenates curves according to the given tolerance";

// 3D CURVE
CATStCLADefaultCommandHeader.3DCurveHead.Title = "3D Curve...";
CATStCLADefaultCommandHeader.3DCurveHead.ShortHelp = "3D Curve";
CATStCLADefaultCommandHeader.3DCurveHead.Help = "Creates 3D curves by clicking points either in space or on existing geometry (points,clouds,curves,surfaces)";
CATStCLADefaultCommandHeader.3DCurveHead.LongHelp =
"3D Curve
Creates a 3D curve passing through
points either in space or on existing geometric elements.
Double-click to end curve creation.";

// CURVE FILLET
CATStCLADefaultCommandHeader.CurveFilletHead.Title = "Styling Corner...";
CATStCLADefaultCommandHeader.CurveFilletHead.ShortHelp = "Styling Corner";
CATStCLADefaultCommandHeader.CurveFilletHead.Help = "Creates a connecting curve of a given minimum radius between two other curves";
CATStCLADefaultCommandHeader.CurveFilletHead.LongHelp =
"Styling Corner
Creates a connecting curve 
of a given minimum radius 
between two other curves.";

// QUICKPLANE ORIENTATION P1
CATStCLADefaultCommandHeader.QuickPlaneOrientationHead.Title = "Plane Orientation";
CATStCLADefaultCommandHeader.QuickPlaneOrientationHead.ShortHelp = "Current Plane Orientation";
CATStCLADefaultCommandHeader.QuickPlaneOrientationHead.Help = "Enables quick plane orientation";
CATStCLADefaultCommandHeader.QuickPlaneOrientationHead.LongHelp = 
"Current Plane Orientation
Enables quick direction definition
using a dedicated toolbar.";

// DASHBOARD VIEW 
CATStCLADefaultCommandHeader.ViewDashboardHead.Title = "Show/Hide Dashboard";
CATStCLADefaultCommandHeader.ViewDashboardHead.ShortHelp = "Show/Hide Dashboard";
CATStCLADefaultCommandHeader.ViewDashboardHead.Help = "Displays and hides the FreeStyle Dashboard";
CATStCLADefaultCommandHeader.ViewDashboardHead.LongHelp =
"Show/Hide Dashboard
Displays and hides the FreeStyle Dashboard.";

// SURFACE FILLET ACA
CATStCLADefaultCommandHeader.ACAFillet.Title = "ACA Fillet";
CATStCLADefaultCommandHeader.ACAFillet.ShortHelp = "ACA Fillet";
CATStCLADefaultCommandHeader.ACAFillet.Help = "ACA Fillet";
CATStCLADefaultCommandHeader.ACAFillet.LongHelp =
"ACA Fillet";

// ISOPHOTES PARALLELES ACA
CATStCLADefaultCommandHeader.ACAHighlight.Title     = "ACA Highlight";
CATStCLADefaultCommandHeader.ACAHighlight.ShortHelp = "ACA Highlight";
CATStCLADefaultCommandHeader.ACAHighlight.Help      = "ACA Highlight";
CATStCLADefaultCommandHeader.ACAHighlight.LongHelp  = "ACA Highlight";

// CONTINUITY CONSTRAINT
CATStCLADefaultCommandHeader.ContinuityCstHead.Title     = "Continuity Constraint...";
CATStCLADefaultCommandHeader.ContinuityCstHead.ShortHelp = "Continuity Constraint";
CATStCLADefaultCommandHeader.ContinuityCstHead.Help      = "Creates a continuity constraint between two elements";
CATStCLADefaultCommandHeader.ContinuityCstHead.LongHelp  = 
"Continuity Constraint
Creates a continuity constraint between two elements";

// == GSD Point == 
CATStCLADefaultCommandHeader.FromGSDPoint.Title                 = "Point...";
CATStCLADefaultCommandHeader.FromGSDPoint.Help                  = "Creates one or more points";
CATStCLADefaultCommandHeader.FromGSDPoint.ShortHelp             = "Point";
CATStCLADefaultCommandHeader.FromGSDPoint.LongHelp              = 
"Point
Creates one or more points.";
// == GSD Line == 
CATStCLADefaultCommandHeader.FromGSDLine.Title                  = "Line...";
CATStCLADefaultCommandHeader.FromGSDLine.Help                   = "Creates a line";
CATStCLADefaultCommandHeader.FromGSDLine.ShortHelp              = "Line";
CATStCLADefaultCommandHeader.FromGSDLine.LongHelp               = 
"Line
Creates a line.";
// == GSD Plane == 
CATStCLADefaultCommandHeader.FromGSDPlane.Title                 = "Plane...";
CATStCLADefaultCommandHeader.FromGSDPlane.Help                  = "Creates a plane";
CATStCLADefaultCommandHeader.FromGSDPlane.ShortHelp             = "Plane";
CATStCLADefaultCommandHeader.FromGSDPlane.LongHelp              = 
"Plane
Creates a plane.";

// == GSD Circle ==
CATStCLADefaultCommandHeader.FromGSDCircle.Title                = "Circle...";
CATStCLADefaultCommandHeader.FromGSDCircle.Help                 = "Creates a circle or circular arc";
CATStCLADefaultCommandHeader.FromGSDCircle.ShortHelp            = "Circle";
CATStCLADefaultCommandHeader.FromGSDCircle.LongHelp             = 
"Circle
Creates a circle or circular arc.";

// == GSD Revol ==
CATStCLADefaultCommandHeader.FromGSDRevol.Title                 = "Revolve...";
CATStCLADefaultCommandHeader.FromGSDRevol.Help                  = "Creates a surface by revolving a profile about an axis";
CATStCLADefaultCommandHeader.FromGSDRevol.ShortHelp             = "Revolve";
CATStCLADefaultCommandHeader.FromGSDRevol.LongHelp              = 
"Revolve
Creates a surface by revolving a profile about an axis.";

// == GSD Symmetry == 
CATStCLADefaultCommandHeader.FromGSDSymmetry.Title              = "Symmetry...";
CATStCLADefaultCommandHeader.FromGSDSymmetry.Help               = "Transforms an element by symmetry";
CATStCLADefaultCommandHeader.FromGSDSymmetry.ShortHelp          = "Symmetry";
CATStCLADefaultCommandHeader.FromGSDSymmetry.LongHelp           = 
"Symmetry
Creates a symmetrical element 
in relation to a reference element.";

// FILL SPEC
CATStCLADefaultCommandHeader.FillSpecHead.Title = "FreeStyle Fill...";
CATStCLADefaultCommandHeader.FillSpecHead.ShortHelp = "FreeStyle Fill";
CATStCLADefaultCommandHeader.FillSpecHead.Help = "Creates surfaces filling space between existing surfaces";
CATStCLADefaultCommandHeader.FillSpecHead.LongHelp =
"FreeStyle Fill
Creates surfaces filling the space 
between geometrical elements, 
delimited by a closed closed contour.";

// == OnSupport 3D ==
CATStCLADefaultCommandHeader.FromGSD3DGrid.Title                      = "Work on Support 3D";
CATStCLADefaultCommandHeader.FromGSD3DGrid.Help                       = "Allows working on support 3D";
CATStCLADefaultCommandHeader.FromGSD3DGrid.ShortHelp                  = "Work on Support 3D";
CATStCLADefaultCommandHeader.FromGSD3DGrid.LongHelp                   = 
"Work on Support 3D
Allows working on a set of three support planes.";

// == Copy Geom Params ==
CATStCLADefaultCommandHeader.GeomParamCopyHead.Title                      = "Copy Geometric Parameters...";
CATStCLADefaultCommandHeader.GeomParamCopyHead.Help                       = "Copy Geometric Parameters";
CATStCLADefaultCommandHeader.GeomParamCopyHead.ShortHelp                  = "Copy Geometric Parameters";
CATStCLADefaultCommandHeader.GeomParamCopyHead.LongHelp                   = 
"Copy Geometric Parameters
Modifies a set of curve applying 
a template curve parametrisation on them";

// == FROM GSMBody Insert == 
CATStCLADefaultCommandHeader.FromMecModBodyInsert.Title            = "Open Body...";
CATStCLADefaultCommandHeader.FromMecModBodyInsert.Help             = "Creates an open body";
CATStCLADefaultCommandHeader.FromMecModBodyInsert.ShortHelp        = "Open Body";
CATStCLADefaultCommandHeader.FromMecModBodyInsert.LongHelp         = "Creates an open body.";

// Light Source Manipulation
CATStCLADefaultCommandHeader.StLightSourceManipulationHead.Title            = "Light Source Manipulation...";
CATStCLADefaultCommandHeader.StLightSourceManipulationHead.Help             = "Manipulate standard light source";
CATStCLADefaultCommandHeader.StLightSourceManipulationHead.ShortHelp        = "Light Source Manipulation";
CATStCLADefaultCommandHeader.StLightSourceManipulationHead.LongHelp         =
"Manipulate standard light source
with immersive user interface.";

// MIRROR ANALYSIS
CATStCLADefaultCommandHeader.VisuMirrorHead.Title = "Mirror Symmetry Analysis...";
CATStCLADefaultCommandHeader.VisuMirrorHead.ShortHelp = "Mirror Analysis";
CATStCLADefaultCommandHeader.VisuMirrorHead.Help = "Analyses any selected object by its symmetry visualisation";
CATStCLADefaultCommandHeader.VisuMirrorHead.LongHelp= 
"Mirror Symmetry Analysis
Analyses any selected object constructing 
its symmetrical representation";

// NEW MIRROR ANALYSIS
CATStCLADefaultCommandHeader.MirrorHead.Title = "Mirror Analysis...";
CATStCLADefaultCommandHeader.MirrorHead.ShortHelp = "Mirror Analysis";
CATStCLADefaultCommandHeader.MirrorHead.Help = "Analyses any selected object by its symmetry visualisation";
CATStCLADefaultCommandHeader.MirrorHead.LongHelp= 
"Mirror Symmetry Analysis
Analyses any selected object constructing 
its symmetrical representation";

CATStCLADefaultCommandHeader.MirrorUpdatePropertyHead.Title ="Update graphical properties";

// ISOPARAMETRIC CURVE 
CATStCLADefaultCommandHeader.IsoparamCrvHead.Title = "Isoparametric Curve...";
CATStCLADefaultCommandHeader.IsoparamCrvHead.ShortHelp = "Isoparametric Curve";
CATStCLADefaultCommandHeader.IsoparamCrvHead.Help = "Creates isoparametric curves on a support";
CATStCLADefaultCommandHeader.IsoparamCrvHead.LongHelp =
"Isoparametric Curve
Creates isoparametric curves on a support";

// Start 3dplm GMF - 05:09:28 - vnb - changed to IntersezctHead from StIntersectHead
// INTERSECT
CATStCLADefaultCommandHeader.IntersectHead.Title = "Intersect...";
CATStCLADefaultCommandHeader.IntersectHead.ShortHelp = "Intersect";
CATStCLADefaultCommandHeader.IntersectHead.Help = "Find intersection between two bodies";
CATStCLADefaultCommandHeader.IntersectHead.LongHelp= 
"Intersect
Finds intersection between two bodies"; 
// End 3dplm GMF

// start RKJ 05:08:23 FSS Topo Fillet // RKJ 05:10:25 modified
CATStCLADefaultCommandHeader.TopoFilletHead.Title = "ACA Styling Fillet...";
CATStCLADefaultCommandHeader.TopoFilletHead.ShortHelp = "Styling Fillet";
CATStCLADefaultCommandHeader.TopoFilletHead.Help = "Creates a styling fillet.";
CATStCLADefaultCommandHeader.TopoFilletHead.LongHelp =
"Styling Fillet
Creates a styling fillet between two sets of elements.";
// start RKJ 05:08:23 FSS Topo Fillet

// start RKJ 07:01:19 FSS Topo Fillet
CATStCLADefaultCommandHeader.FSSFilletHead.Title = "FSS Styling Fillet...";
CATStCLADefaultCommandHeader.FSSFilletHead.ShortHelp = "Styling Fillet";
CATStCLADefaultCommandHeader.FSSFilletHead.Help = "Creates a styling fillet.";
CATStCLADefaultCommandHeader.FSSFilletHead.LongHelp =
"Styling Fillet
Creates a styling fillet between two sets of elements.";
// start RKJ 07:01:19 FSS Topo Fillet


// == CreateMask ==
CATStCLADefaultCommandHeader.FromGSDMask.Title              = "Mask...";
CATStCLADefaultCommandHeader.FromGSDMask.Help               = "Creates a mask";
CATStCLADefaultCommandHeader.FromGSDMask.ShortHelp          = "Mask";
CATStCLADefaultCommandHeader.FromGSDMask.LongHelp           = 
"Mask
Creates a mask.";

// CONTROL POINTS from R15 level (modif of NLS in R16 => - 'New')
CATStCLADefaultCommandHeader.FSControlPointsHead.Title = "Control Points...";
CATStCLADefaultCommandHeader.FSControlPointsHead.ShortHelp = "Control Points";
CATStCLADefaultCommandHeader.FSControlPointsHead.Help="Deforms a surface or a curve by its control points";
CATStCLADefaultCommandHeader.FSControlPointsHead.LongHelp=
"Control Points
Modifies a surface or a curve 
moving its control points. 
Manages smoothing and degrees
and allows the mesh display of
several surfaces.";

// NEW COMPASS TOOLBAR
CATStCLADefaultCommandHeader.CompassHead.Title = "Compass Management";
CATStCLADefaultCommandHeader.CompassHead.ShortHelp = "Quick Compass Orientation";
CATStCLADefaultCommandHeader.CompassHead.Help = "Enables quick compass orientation";
CATStCLADefaultCommandHeader.CompassHead.LongHelp = 
"Quick Compass Orientation
Enables quick compass orientation
using a dedicated toolbar.";

// FAST MIRROR
CATStCLADefaultCommandHeader.FastMirrorHead.Title = "Soft Mirror...";
CATStCLADefaultCommandHeader.FastMirrorHead.ShortHelp = "Soft Mirror";
CATStCLADefaultCommandHeader.FastMirrorHead.Help = "Analyses all elements under Part by its symmetry visualisation";
CATStCLADefaultCommandHeader.FastMirrorHead.LongHelp= 
"Soft Mirror
Analyses all elements under Part at a time
by constructing its symmetrical representation";

// INSERT CST NODE
CATStCLADefaultCommandHeader.InsertCstNodeHead.Title = "Insert Constraint Set";
CATStCLADefaultCommandHeader.InsertCstNodeHead.ShortHelp = "Insert Constraint Set";
CATStCLADefaultCommandHeader.InsertCstNodeHead.Help = "Insert a new Constraint Set";
CATStCLADefaultCommandHeader.InsertCstNodeHead.LongHelp= "Insert a new Constraint Set";

// SET VISIBLE MAPPING
CATStCLADefaultCommandHeader.SetVisibleMappingHead.Title = "Set on top";
CATStCLADefaultCommandHeader.SetVisibleMappingHead.ShortHelp = "Set on top";
CATStCLADefaultCommandHeader.SetVisibleMappingHead.Help = "Set this mapping analysis on top of of the other mapping analysis";
CATStCLADefaultCommandHeader.SetVisibleMappingHead.LongHelp= "Set this mapping analysis on top of of the other mapping analysis";

// NOT TO BE TRANSLATED - START
// Commandes - test
// MULTI FEATURE ACCESS
CATStCLADefaultCommandHeader.ShapOptHead.Title = "Multi edition";
CATStCLADefaultCommandHeader.ShapOptHead.ShortHelp = "Multi feature access";
CATStCLADefaultCommandHeader.ShapOptHead.Help = "Feature editor optimizer";
CATStCLADefaultCommandHeader.ShapOptHead.LongHelp = "Feature editor optimizer";

CATStCLADefaultCommandHeader.StAutoDetectAgentHead.Title     = "New Autodetection";
CATStCLADefaultCommandHeader.StAutoDetectAgentHead.ShortHelp = "New Autodetection";
CATStCLADefaultCommandHeader.StAutoDetectAgentHead.Help      = "New Autodetection";
CATStCLADefaultCommandHeader.StAutoDetectAgentHead.LongHelp  = "New Autodetection";

CATStCLADefaultCommandHeader.StWireAndSupportAgentHead.Title     = "Wire and Support Agent";
CATStCLADefaultCommandHeader.StWireAndSupportAgentHead.ShortHelp = "Wire and Support Agent";
CATStCLADefaultCommandHeader.StWireAndSupportAgentHead.Help      = "Wire and Support Agent";
CATStCLADefaultCommandHeader.StWireAndSupportAgentHead.LongHelp  = "Wire and Support Agent";

CATStCLADefaultCommandHeader.StFilletHead.Title     = "New Styling Fillet";
CATStCLADefaultCommandHeader.StFilletHead.ShortHelp = "New Styling Fillet";
CATStCLADefaultCommandHeader.StFilletHead.Help      = "New Styling Fillet";
CATStCLADefaultCommandHeader.StFilletHead.LongHelp  = "New Styling Fillet";

CATStCLADefaultCommandHeader.TestDiagram2D.Title     = "New 2D Diagram";
CATStCLADefaultCommandHeader.TestDiagram2D.ShortHelp = "New 2D Diagram";
CATStCLADefaultCommandHeader.TestDiagram2D.Help      = "New 2D Diagram";
CATStCLADefaultCommandHeader.TestDiagram2D.LongHelp  = "New 2D Diagram";

CATStCLADefaultCommandHeader.TestTest.Title     = "Test Command";
CATStCLADefaultCommandHeader.TestTest.ShortHelp = "Test Command";
CATStCLADefaultCommandHeader.TestTest.Help      = "Test Command";
CATStCLADefaultCommandHeader.TestTest.LongHelp  = "Test Command";

CATStCLADefaultCommandHeader.FSParallelCommandHead.Title = "Parallel Command Session";
CATStCLADefaultCommandHeader.FSParallelCommandHead.ShortHelp = "Parallel Command Session";
CATStCLADefaultCommandHeader.FSParallelCommandHead.Help = "Launches a Parallel Command Session";
CATStCLADefaultCommandHeader.FSParallelCommandHead.LongHelp =
"Parallel Command Session
enables to launch commands
in parallel mode.";

CATStCLADefaultCommandHeader.NewCombHead.Title     = "Test new comb";
CATStCLADefaultCommandHeader.NewCombHead.ShortHelp = "Test new comb";
CATStCLADefaultCommandHeader.NewCombHead.Help      = "Test new comb";
CATStCLADefaultCommandHeader.NewCombHead.LongHelp  = "Test new comb";

// Quick Access to Furtive Display Variants.
CATStCLADefaultCommandHeader.FurtiveDisplayVariantsHead.Title = "Furtive Display Variants";
CATStCLADefaultCommandHeader.FurtiveDisplayVariantsHead.ShortHelp = "Quick Access to Furtive Display Variants";
CATStCLADefaultCommandHeader.FurtiveDisplayVariantsHead.Help = "It provides easy and quick access to tune Furtive Display Variants.";
CATStCLADefaultCommandHeader.FurtiveDisplayVariantsHead.LongHelp ="It provides easy and quick access to tune Furtive Display Variants while command is running.";


// NOT TO BE TRANSLATED - END

