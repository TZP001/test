
// *--------------------------------------------*//
// *               Exemple de message           *//
// *  En_US                                     *//
// *------------------------------------------- *//
// ERR_2000.Request    = "Vous avez additionne /p1 avec /p2";
// ERR_2000.Diagnostic = "Un des parametres est negatif";
// ERR_2000.Advice     = "Utilisez des parametres positifs";

And=" and ";

//Licencing 
GSMMODELINPUT_ERR_000.Request    = "Licensing error";
GSMMODELINPUT_ERR_000.Diagnostic = "Creation of /p1 object requires /p2 product license ";
GSMMODELINPUT_ERR_000.Advice     = "Check license granted ";

          
//JetonNull
GSMMODELINPUT_ERR_100.Request    = "Invalid Token Input";
GSMMODELINPUT_ERR_100.Diagnostic = " ";
GSMMODELINPUT_ERR_100.Advice     = " ";

GSMMODELINPUT_ERR_101.Request    = "Invalid direction";
GSMMODELINPUT_ERR_101.Diagnostic = " ";
GSMMODELINPUT_ERR_101.Advice     = "Select another direction.";

GSMMODELINPUT_ERR_111.Request    = "Empty Specification";
GSMMODELINPUT_ERR_111.Diagnostic = "The specification /p1 is empty.";
GSMMODELINPUT_ERR_111.Advice     = "Choose another one to replace it.";

GSMMODELINPUT_ERR_120.Request    = "Bad Dimension Specification";
GSMMODELINPUT_ERR_120.Diagnostic = "The specification /p1 has not the good dimension.";
GSMMODELINPUT_ERR_120.Advice     = "Choose another one to replace it.";

GSMMODELINPUT_ERR_130.Request    = "Non Homogenous Specification";
GSMMODELINPUT_ERR_130.Diagnostic = "The specification /p1 is not homogenous.";
GSMMODELINPUT_ERR_130.Advice     = "Choose another one to replace it.";

GSMMODELINPUT_ERR_140.Request    = "Non Connex Specification";
GSMMODELINPUT_ERR_140.Diagnostic = "The specification /p1 is not connex.";
GSMMODELINPUT_ERR_140.Advice     = "Choose another one to replace it.";

GSMMODELINPUT_ERR_150.Request    = "Operation Failed";
GSMMODELINPUT_ERR_150.Diagnostic = "The operation /p1 failed.";
GSMMODELINPUT_ERR_150.Advice     = "Modify its specifications.";

GSMMODELINPUT_ERR_160.Request    = "Empty result";
GSMMODELINPUT_ERR_160.Diagnostic = "The result of /p1 is empty.";
GSMMODELINPUT_ERR_160.Advice     = "Modify its specifications.";

GSMMODELINPUT_ERR_170.Request    = "Non Homogenous Result";
GSMMODELINPUT_ERR_170.Diagnostic = "The result of /p1 is not homogenous.";
GSMMODELINPUT_ERR_170.Advice     = "Modify its specifications.";


// BoundGap       
GSMMODELINPUT_ERR_200.Request    = " ";
GSMMODELINPUT_ERR_200.Diagnostic = "Invalid Boundaries : there is a gap of /p1 between boundary /p2 and boundary /p3.";
GSMMODELINPUT_ERR_200.Advice     = " ";


// Dimension
GSMMODELINPUT_ERR_250.Request    = "Bad Dimension Inputs";
GSMMODELINPUT_ERR_250.Diagnostic = "Specifications have not the good dimension.";
GSMMODELINPUT_ERR_250.Advice     = "Choose another one to replace it.";

// NonHomogeneIn  
GSMMODELINPUT_ERR_300.Request    = " ";
GSMMODELINPUT_ERR_300.Diagnostic = "Non Homogeneous Inputs : the inputs do not have the same dimension.";
GSMMODELINPUT_ERR_300.Advice     = " ";

// NonHomogeneOut 
GSMMODELINPUT_ERR_400.Request    = " ";
GSMMODELINPUT_ERR_400.Diagnostic = "Non Homogeneous Result : the resulting elements do not have the same dimension.";
GSMMODELINPUT_ERR_400.Advice     = " ";

// NonManifoldIn  
GSMMODELINPUT_ERR_500.Request    = " ";
GSMMODELINPUT_ERR_500.Diagnostic = "Non Manifold Inputs.";
GSMMODELINPUT_ERR_500.Advice     = " ";

// NonManifoldOut 
GSMMODELINPUT_ERR_600.Request    = " ";
GSMMODELINPUT_ERR_600.Diagnostic = "Non Manifold Result.";
GSMMODELINPUT_ERR_600.Advice     = " ";

// Non Manifold & Overlaping
GSMMODELINPUT_ERR_610.Request    = "Operation failed.";
GSMMODELINPUT_ERR_610.Diagnostic = "Elements /p1 overlap themselves or are non manifold.";
GSMMODELINPUT_ERR_610.Advice     = "Change the highlighted elements or remove the invoked sub-elements.";

// NonConnexeIn   
GSMMODELINPUT_ERR_700.Request    = " ";
GSMMODELINPUT_ERR_700.Diagnostic = "Input /p1 is a non connex element.";
GSMMODELINPUT_ERR_700.Advice     = " ";

// NonConnexeIn dans point on curve
GSMMODELINPUT_ERR_710.Request    = "Input /p1 is a non connex element, and there is no reference point.";
GSMMODELINPUT_ERR_710.Diagnostic = "To create a point on a curve, it has to be connex, or\nthere must be a reference point when it is not connex.";
GSMMODELINPUT_ERR_710.Advice     = "Use a connex curve or add a reference point.";

// NonConnexeOut  
GSMMODELINPUT_ERR_800.Request    = " ";
GSMMODELINPUT_ERR_800.Diagnostic = "Non Connex Result";
GSMMODELINPUT_ERR_800.Advice     = " ";

// NonConnexeOut  
GSMMODELINPUT_ERR_810.Request    = "Non Connex Result.";
GSMMODELINPUT_ERR_810.Diagnostic = "Result counts /p1 domains.";
GSMMODELINPUT_ERR_810.Advice     = " ";

// Boundary intersection KO
GSMMODELINPUT_ERR_900.Request    = " ";
GSMMODELINPUT_ERR_900.Diagnostic = "No Intersection between the From limit and the Boundary. Modify these elements.";
GSMMODELINPUT_ERR_900.Advice     = " ";

// Boundary intersection KO
GSMMODELINPUT_ERR_1000.Request    = " ";
GSMMODELINPUT_ERR_1000.Diagnostic = "No Intersection between the To limit and the Boundary. Modify these elements.";
GSMMODELINPUT_ERR_1000.Advice     = " ";

//  Direction not handled
GSMMODELINPUT_ERR_1100.Request    = " ";
GSMMODELINPUT_ERR_1100.Diagnostic = "Direction not handled: X = /p1 , Y = /p2 , Z = /p3.";
GSMMODELINPUT_ERR_1100.Advice     = "Select a X or Y or Z direction (X = 1 or Y = 1 or Z = 1).";

// closing point
GSMMODELINPUT_ERR_1200.Request    = "/p1 is a new closing point for section /p2.";
GSMMODELINPUT_ERR_1200.Diagnostic = "/p1 does not lie on /p2.";
GSMMODELINPUT_ERR_1200.Advice     = "Replace /p1 with a point that lies on /p2.";

// closing point
GSMMODELINPUT_ERR_1201.Request    = "/p1 is a new closing point for section /p2.";
GSMMODELINPUT_ERR_1201.Diagnostic = "/p1 is not a closed curve.";
GSMMODELINPUT_ERR_1201.Advice     = "Replace /p1 with a closed curve or remove /p2 closing point.";

// coupling mode 
GSMMODELINPUT_ERR_1202.Request    = "";
GSMMODELINPUT_ERR_1202.Diagnostic = "'Tangency continuities' coupling mode cannot be applied.";
GSMMODELINPUT_ERR_1202.Advice     = "Change the coupling mode to 'ratio'.";

// coupling mode 
GSMMODELINPUT_ERR_1203.Request    = "";
GSMMODELINPUT_ERR_1203.Diagnostic = "'Curvature continuities' coupling mode cannot be applied";
GSMMODELINPUT_ERR_1203.Advice     = "Change the coupling mode to 'ratio'.";

// coupling points
GSMMODELINPUT_ERR_1204.Request    = "The coupling number /p1 has /p2 coupling points.";
GSMMODELINPUT_ERR_1204.Diagnostic =
"The number of coupling points must be equal
to the number of curves to couple that is /p1.";
GSMMODELINPUT_ERR_1204.Advice     = "Add or remove coupling points.";

// coupling points
GSMMODELINPUT_ERR_1205.Request    = 
"The coupling point number /p1 of the coupling number /p2 is empty.";
GSMMODELINPUT_ERR_1205.Diagnostic =
"A coupling point must be a point typed feature.";
GSMMODELINPUT_ERR_1205.Advice     =
"Replace the coupling point number /p1 of the coupling number /p2 by a point.";

// coupling points
GSMMODELINPUT_ERR_1206.Request    = "/p1 is a new coupling point for curve /p2.";
GSMMODELINPUT_ERR_1206.Diagnostic = "/p1 does not lie on /p2.";
GSMMODELINPUT_ERR_1206.Advice     = "Replace /p1 with a point that lies on /p2.";

// coupling points
GSMMODELINPUT_ERR_1207.Request    = "";
GSMMODELINPUT_ERR_1207.Diagnostic = "Current coupling mode cannot be applied.";
GSMMODELINPUT_ERR_1207.Advice     = 
"Change the coupling mode to 'ratio' or
add or remove guides or add or remove coupling";

// Loft
// Part design Loft can not be close with faces
GSMMODELINPUT_ERR_1220.Request    = "";
GSMMODELINPUT_ERR_1220.Diagnostic = "Solid multi-sections can not be closed with face /p1.";
GSMMODELINPUT_ERR_1220.Advice     = "";

GSMMODELINPUT_ERR_1221.Request    = "";
GSMMODELINPUT_ERR_1221.Diagnostic = "Solid multi-sections can not be closed with face /p1 and face /p2.";
GSMMODELINPUT_ERR_1221.Advice     = "";

// GSO Wrap Curve
GSMMODELINPUT_ERR_1250.Request    = "You gave a reference direction projection to /p1.";
GSMMODELINPUT_ERR_1250.Diagnostic = 
"The reference spine /p1 is not linear.
Reference direction projection can only be used 
with a linear reference spine.";
GSMMODELINPUT_ERR_1250.Advice     = 
"Use a computed reference direction projection
or use a linear reference spine.";

// GSO Wrap Curve
GSMMODELINPUT_ERR_1251.Request    = "You gave a reference spine to /p1.";
GSMMODELINPUT_ERR_1251.Diagnostic = 
"The reference spine /p1 is not linear and the wrap curve
has a reference direction projection.
Reference direction projection can only be used 
with a linear reference spine.";
GSMMODELINPUT_ERR_1251.Advice     = 
"Use a computed reference direction projection
or use a linear reference spine.";

// Revolution surface
GSMMODELINPUT_ERR_1300.Request    = " ";
GSMMODELINPUT_ERR_1300.Diagnostic = "/p1 is not a revolution surface.";
GSMMODELINPUT_ERR_1300.Advice     = "Replace it with a revolution surface.";

// Planar curve
GSMMODELINPUT_ERR_1350.Request    = "A planar curve or profile is required.";
GSMMODELINPUT_ERR_1350.Diagnostic = "/p1 is not a planar curve or profile.";
GSMMODELINPUT_ERR_1350.Advice     = "Replace it with a planar curve or profile.";

// Input des boundary
GSMMODELINPUT_ERR_1400.Request    = " ";
GSMMODELINPUT_ERR_1400.Diagnostic = "Invalid Boundary input : Surface edge /p1 or its support /p2 is invalid";
GSMMODELINPUT_ERR_1400.Advice     = "Choose other input elements to replace them.";

GSMMODELINPUT_ERR_1401.Request    = " ";
GSMMODELINPUT_ERR_1401.Diagnostic = "Boundary input Surface edge is invalid";
GSMMODELINPUT_ERR_1401.Advice     = "Choose another input element to replace it.";

GSMMODELINPUT_ERR_1402.Request    = " ";
GSMMODELINPUT_ERR_1402.Diagnostic = "Invalid Boundary support : /p1";
GSMMODELINPUT_ERR_1402.Advice     = "No support for this type of boundary.";

GSMMODELINPUT_ERR_1403.Request    = " ";
GSMMODELINPUT_ERR_1403.Diagnostic = "Invalid Boundary input : Surface edge /p1 is invalid";
GSMMODELINPUT_ERR_1403.Advice     = "Choose another input element to replace it.";

GSMMODELINPUT_ERR_1404.Request    = " ";
GSMMODELINPUT_ERR_1404.Diagnostic = "Invalid Boundary input : support of Surface edge /p1 is invalid";
GSMMODELINPUT_ERR_1404.Advice     = "Choose another input element to replace it.";

GSMMODELINPUT_ERR_1410.Request    = " ";
GSMMODELINPUT_ERR_1410.Diagnostic = "Boundary input /p1 is not continuous in tangency";
GSMMODELINPUT_ERR_1410.Advice     = "Choose another input element to replace it.";

GSMMODELINPUT_ERR_1420.Request    = " ";
GSMMODELINPUT_ERR_1420.Diagnostic = "Boundary input /p1 is a closed curve";
GSMMODELINPUT_ERR_1420.Advice     = "Choose another input element to replace it.";

GSMMODELINPUT_ERR_1430.Request    = " ";
GSMMODELINPUT_ERR_1430.Diagnostic = "Invalid input element: /p1 is not a border edge";
GSMMODELINPUT_ERR_1430.Advice     = "Choose another input element to replace it.";

// Input des extracts
GSMMODELINPUT_ERR_1450.Request    = " ";
GSMMODELINPUT_ERR_1450.Diagnostic = "Extract input /p1 is not continuous in tangency";
GSMMODELINPUT_ERR_1450.Advice     = "Choose another input element to replace it.";

GSMMODELINPUT_ERR_1460.Request    = "The /p1 is invalid.";
GSMMODELINPUT_ERR_1460.Diagnostic = "The resulting element in Complementary mode \nwould not contain any geometry.";
GSMMODELINPUT_ERR_1460.Advice     = "Deactivate the Complementary mode \nor change the Propagation type.";

GSMMODELINPUT_ERR_1470.Request    = "The support is invalid.";
GSMMODELINPUT_ERR_1470.Diagnostic = "The selected internal edge does not lie on the support.";
GSMMODELINPUT_ERR_1470.Advice     = "Choose another support.";

//////////////////////////////
GSMMODELINPUT_ERR_1500.Request    = " ";
GSMMODELINPUT_ERR_1500.Diagnostic = "Invalid Input Limit";
GSMMODELINPUT_ERR_1500.Advice     = "Choose another input element to replace it.";

GSMMODELINPUT_ERR_1600.Request    = " ";
GSMMODELINPUT_ERR_1600.Diagnostic = "No projection of the limit point on the boundary.";
GSMMODELINPUT_ERR_1600.Advice     = "Choose another point.";

GSMMODELINPUT_ERR_1700.Request    = " ";
GSMMODELINPUT_ERR_1700.Diagnostic = "The projection of the limit point on the boundary is not a point.";
GSMMODELINPUT_ERR_1700.Advice     = "Choose another point.";

GSMMODELINPUT_ERR_1800.Request    = " ";
GSMMODELINPUT_ERR_1800.Diagnostic = "Too many intersections between the limit curve and the boundary.";
GSMMODELINPUT_ERR_1800.Advice     = "Replace it.";

GSMMODELINPUT_ERR_1900.Request    = " ";
GSMMODELINPUT_ERR_1900.Diagnostic = "The intersection of the limit and the boundary is not a point.";
GSMMODELINPUT_ERR_1900.Advice     = "Replace it.";

GSMMODELINPUT_ERR_2000.Request    = " ";
GSMMODELINPUT_ERR_2000.Diagnostic = "The boundary cannot be split by this limit.";
GSMMODELINPUT_ERR_2000.Advice     = "Replace the limit curve.";

GSMMODELINPUT_ERR_2100.Request    = " ";
GSMMODELINPUT_ERR_2100.Diagnostic = "Element /p1 has no associated geometry.";
GSMMODELINPUT_ERR_2100.Advice     = "Recreate the geometry.";

// Equidistant reference for near  
GSMMODELINPUT_ERR_2300.Request    = "Several equidistant elements.";
GSMMODELINPUT_ERR_2300.Diagnostic = "The Reference Element is equidistant from the Multiple Element";
GSMMODELINPUT_ERR_2300.Advice     = "It does not allow to compute a result.";

//Equidistant reference for project
GSMMODELINPUT_ERR_2310.Request    = "Several equidistant elements.";
GSMMODELINPUT_ERR_2310.Diagnostic = "Several solutions of the projection are equidistant from the element to project.";
GSMMODELINPUT_ERR_2310.Advice     = "It does not allow to compute a single result. Compute all solutions and use NEAR operation.";

// Sweep errors
GSMMODELINPUT_ERR_2350.Request    = " ";
GSMMODELINPUT_ERR_2350.Diagnostic = "The profile /p1 or the plane (normal to the spine) it belongs to \ndoes not intersect both guides.";
GSMMODELINPUT_ERR_2350.Advice     = "Position this profile correctly (possible within the Sweep Definition dialog box).";

GSMMODELINPUT_ERR_2351.Request    = " ";
GSMMODELINPUT_ERR_2351.Diagnostic = "The given length values lead to a null surface.";
GSMMODELINPUT_ERR_2351.Advice     = "Change one length value.";

GSMMODELINPUT_ERR_2352.Request    = " ";
GSMMODELINPUT_ERR_2352.Diagnostic = "The given conical parameter is not between 0 and 1.";
GSMMODELINPUT_ERR_2352.Advice     = "Change the parameter value.";

GSMMODELINPUT_ERR_2353.Request    = " ";
GSMMODELINPUT_ERR_2353.Diagnostic = "With this angle definition, the guide curve /p1\nhas to be continuous in tangency.";
GSMMODELINPUT_ERR_2353.Advice     = " ";

GSMMODELINPUT_ERR_2354.Request    = " ";
GSMMODELINPUT_ERR_2354.Diagnostic = "Draft linear swept surface: cone computation mode is
incompatible with variable wholly defined angle law.";
GSMMODELINPUT_ERR_2354.Advice     = " ";

GSMMODELINPUT_ERR_2360.Request    = " ";
GSMMODELINPUT_ERR_2360.Diagnostic = "Extrapolation of the guide curve fails.";
GSMMODELINPUT_ERR_2360.Advice     = "Please select another guide curve.";

//  Helix curve: Negative Pitch or Height
GSMMODELINPUT_ERR_2400.Request    = " ";
GSMMODELINPUT_ERR_2400.Diagnostic = "Negative pitch or height is not allowed.";
GSMMODELINPUT_ERR_2400.Advice     = "Enter a positive value.";

//  Helix curve: Axis does not lie on Profile plane
GSMMODELINPUT_ERR_2410.Request    = " ";
GSMMODELINPUT_ERR_2410.Diagnostic = "The Axis does not lie on the plane of the Profile.";
GSMMODELINPUT_ERR_2410.Advice     = "Project the Axis on the plane of the Profile.";

//  Helix curve: Starting angle and Height are incompatible
GSMMODELINPUT_ERR_2500.Request    = " ";
GSMMODELINPUT_ERR_2500.Diagnostic = "The specified Starting angle and Height are not compatible.";
GSMMODELINPUT_ERR_2500.Advice     = "Decrease the Starting angle or increase the Height.";

// Conic Curves error messages 
GSMMODELINPUT_ERR_2600.Request    = "The Start and the End Tangent of the conic curve must be set.";
GSMMODELINPUT_ERR_2600.Diagnostic = "The Start Tangent and the End Tangent are not set.";
GSMMODELINPUT_ERR_2600.Advice     = "Please, set the Start Tangent and the End Tangent.";

GSMMODELINPUT_ERR_2700.Request    = "The Start and the End Tangent of the conic curve must be set.";
GSMMODELINPUT_ERR_2700.Diagnostic = "The Start Tangent is not set.";
GSMMODELINPUT_ERR_2700.Advice     = "Please, set the Start Tangent.";

GSMMODELINPUT_ERR_2800.Request    = "The Start and the End Tangent of the conic curve must be set.";
GSMMODELINPUT_ERR_2800.Diagnostic = "The End Tangent is not set.";
GSMMODELINPUT_ERR_2800.Advice     = "Please, Set the End Tangent.";

GSMMODELINPUT_ERR_2900.Request    = "The number of constraints of a conic curve must not exceed Five.";
GSMMODELINPUT_ERR_2900.Diagnostic = "The number of set constraints exceeds Five.";
GSMMODELINPUT_ERR_2900.Advice     = "Please, unset one constraint.";

GSMMODELINPUT_ERR_3000.Request    = "This tangency constraints configuration is not currently supported.";
GSMMODELINPUT_ERR_3000.Diagnostic = "One intermediate tangent is specified in addition to an end tangent.";
GSMMODELINPUT_ERR_3000.Advice     = "Please, unset one of the Tangency constraints.";

GSMMODELINPUT_ERR_3100.Request    = "At least one intermediate point is required between the start and end points.";
GSMMODELINPUT_ERR_3100.Diagnostic = "The first intermediate passing through point is missing.";
GSMMODELINPUT_ERR_3100.Advice     = "Please, set the first intermediate passing through point.";

GSMMODELINPUT_ERR_3200.Request    = "The specification of a parameter requires that end tangents intersect.";
GSMMODELINPUT_ERR_3200.Diagnostic = "The tangents at the conic start and end points are parallel.";
GSMMODELINPUT_ERR_3200.Advice     = "Please, modify the end tangent directions so that they intersect.";

GSMMODELINPUT_ERR_3300.Request    = "The specification of a passing point requires that this point is not aligned with the start and end points.";
GSMMODELINPUT_ERR_3300.Diagnostic = "The Passing Point /p1 is aligned with the start and end points.";
GSMMODELINPUT_ERR_3300.Advice     = "Please, move this point towards the tangent intersection point.";

GSMMODELINPUT_ERR_3400.Request    = "The Tangent direction at any point of a conic must be set into the support Plane.";
GSMMODELINPUT_ERR_3400.Diagnostic = "The Tangent intersection Point is not set on to the support plane.";
GSMMODELINPUT_ERR_3400.Advice     = "Please, project this point on to the support plane.";

GSMMODELINPUT_ERR_3500.Request    = "All the Points of a Conic curve must be set on to the same support Plane.";
GSMMODELINPUT_ERR_3500.Diagnostic = "The Start Point is not set on to the support plane.";
GSMMODELINPUT_ERR_3500.Advice     = "Please, project this point on to the support plane.";

GSMMODELINPUT_ERR_3600.Request    = "All the Points of a Conic curve must be set on to  the same support Plane.";
GSMMODELINPUT_ERR_3600.Diagnostic = "The End Point is not set on to the support plane.";
GSMMODELINPUT_ERR_3600.Advice     = "Please, project this point on to the support plane.";

GSMMODELINPUT_ERR_3700.Request    = "All the Points of a Conic curve must be set on to the same support Plane.";
GSMMODELINPUT_ERR_3700.Diagnostic = "The Passing Point /p1 is not set on to the support plane.";
GSMMODELINPUT_ERR_3700.Advice     = "Please, project this point on to the support plane.";

// pour l'assemble
GSMMODELINPUT_ERR_3800.Request    = "Invalid value for merge elements distance.";
GSMMODELINPUT_ERR_3800.Diagnostic = "This value must be greater than 0 ";
GSMMODELINPUT_ERR_3800.Advice     = "and lower than or equal to 0.1 . ";

GSMMODELINPUT_ERR_3810.Request    = "Join operation aborted on an invalid element.";
GSMMODELINPUT_ERR_3810.Diagnostic = "At least, one face of the input element /p1 is invalid.";
GSMMODELINPUT_ERR_3810.Advice     = "Modify this input or the elements used to generate it.";

GSMMODELINPUT_ERR_3820.Request    = "Join operation aborted on invalid elements.";
GSMMODELINPUT_ERR_3820.Diagnostic = "Input elements /p1 are invalid.";
GSMMODELINPUT_ERR_3820.Advice     = "Modify these inputs or the elements used to generate them.";

GSMMODELINPUT_ERR_3830.Request    = "Join operation aborted on an invalid element.";
GSMMODELINPUT_ERR_3830.Diagnostic = "At least, one face of the input element /p1 has several self-intersecting edges.";
GSMMODELINPUT_ERR_3830.Advice     = "Modify this input or the elements used to generate it.";

GSMMODELINPUT_ERR_3840.Request    = "Join operation aborted on invalid elements.";
GSMMODELINPUT_ERR_3840.Diagnostic = "Input elements /p1 have several self-intersecting edges.";
GSMMODELINPUT_ERR_3840.Advice     = "Modify these inputs or the elements used to generate them.";

GSMMODELINPUT_ERR_3850.Request    = "Join operation aborted on invalid elements.";
GSMMODELINPUT_ERR_3850.Diagnostic = "Angle between /p1 is greater than angular threshold .";
GSMMODELINPUT_ERR_3850.Advice     = "Modify angular threshold or these input elements.";

GSMMODELINPUT_ERR_3851.Request    = "Join operation aborted on invalid elements.";
GSMMODELINPUT_ERR_3851.Diagnostic = "Angle is greater than angular tolerance threshold .";
GSMMODELINPUT_ERR_3851.Advice     = "Modify angular threshold or input elements.";

GSMMODELINPUT_ERR_3860.Request    = "Join operation aborted.";
GSMMODELINPUT_ERR_3860.Diagnostic = "Elements to join and/or sub-elements to remove are not compatible.";
GSMMODELINPUT_ERR_3860.Advice     = "Modify the tolerance or these input elements.";

// pour le Healing
GSMMODELINPUT_ERR_3900.Request    = "The selected element is not an internal element of the body to be healed.";
GSMMODELINPUT_ERR_3900.Diagnostic = "Element /p1 is not in the specifications to heal.";
GSMMODELINPUT_ERR_3900.Advice     = "Select another object.";

// pour les coniques a nouveau car cet .... de jean-max m'a pique mes numeros 3800 et 3900 
GSMMODELINPUT_ERR_4000.Request    = "The tangent intersection point must not be aligned with the end and start point.";
GSMMODELINPUT_ERR_4000.Diagnostic = "The tangent intersection point is aligned with the start point and the end point.";
GSMMODELINPUT_ERR_4000.Advice     = "Please, increase the height of the tangent intersection point.";

GSMMODELINPUT_ERR_4100.Request    = "The conic parameter value must be greater than the conic parameter resolution.";
GSMMODELINPUT_ERR_4100.Diagnostic = "The conic parameter value is lower than the conic parameter resolution value = /p1.";
GSMMODELINPUT_ERR_4100.Advice     = "Please, choose a greater conic parameter value.";

GSMMODELINPUT_ERR_4200.Request    = "The conic parameter value must be lower than  1. minus the conic parameter resolution.";
GSMMODELINPUT_ERR_4200.Diagnostic = "The conic parameter is greater  than  /p1.";
GSMMODELINPUT_ERR_4200.Advice     = "Please, choose a lower conic parameter value";

GSMMODELINPUT_ERR_4300.Request    = "The Start and End Tangent Directions must be consistent with the conic curve orientation.";
GSMMODELINPUT_ERR_4300.Diagnostic = "The Start Tangent is not consistent with the conic curve orientation.";
GSMMODELINPUT_ERR_4300.Advice     = "Please, invert the Start Tangent Direction.";

GSMMODELINPUT_ERR_4400.Request    = "The creation of a Conic Curve requires 5 consistent input specifications.";
GSMMODELINPUT_ERR_4400.Diagnostic = "One or several input specifications are not consistent.";
GSMMODELINPUT_ERR_4400.Advice     = "Please, check for the consistency of each input specification.";

GSMMODELINPUT_ERR_4500.Request    = "The Start and End Tangent Directions must be consistent with the conic curve orientation.";
GSMMODELINPUT_ERR_4500.Diagnostic = "The End Tangent is not consistent with the conic curve orientation.";
GSMMODELINPUT_ERR_4500.Advice     = "Please, invert the End Tangent Direction.";

GSMMODELINPUT_ERR_4600.Request    = "The Start and End Tangent Directions must be consistent with the conic curve orientation.";
GSMMODELINPUT_ERR_4600.Diagnostic = "The End Tangent and the Start Tangent are  not consistent with the conic curve orientation.";
GSMMODELINPUT_ERR_4600.Advice     = "Please, invert both the End and Start Tangent Directions.";

GSMMODELINPUT_ERR_4700.Request    = "Closed curve must have usable vertex.";
GSMMODELINPUT_ERR_4700.Diagnostic = "Used element /p1 is a closed curve in which\n there is no vertex that can be used\nas an implicit reference point.";
GSMMODELINPUT_ERR_4700.Advice     = "Select an explicit reference point.";

GSMMODELINPUT_ERR_4750.Request    = "Reference point missing.";
GSMMODELINPUT_ERR_4750.Diagnostic = "You must specify a reference point to create a plane normal to a closed curve.\nThe default middle point cannot be used in this context.";
GSMMODELINPUT_ERR_4750.Advice     = "Select a reference point.";

GSMMODELINPUT_ERR_4800.Request    = "An edge cannot be recognized.";
GSMMODELINPUT_ERR_4800.Diagnostic = "Replace the green edge by the new one.";
GSMMODELINPUT_ERR_4800.Advice     = " ";

// Offset monosurface pour config P1
GSMMODELINPUT_ERR_5000.Request    = "Element not allowed for offset.";
GSMMODELINPUT_ERR_5000.Diagnostic = "The element /p1 is not a single surface.";
GSMMODELINPUT_ERR_5000.Advice     = "In this configuration, you can only offset a single surface. ";

// Offset distance invalide
GSMMODELINPUT_ERR_5010.Request    = "";
GSMMODELINPUT_ERR_5010.Diagnostic = "Invalid Offset distance.";
GSMMODELINPUT_ERR_5010.Advice     = "Modify this input.";

// Offset deviation invalide
GSMMODELINPUT_ERR_5020.Request    = "Offset and deviation values not allowed.";
GSMMODELINPUT_ERR_5020.Diagnostic = "The offset value must be greater than the deviation value.";
GSMMODELINPUT_ERR_5020.Advice     = "The deviation value must be greater than 0.001mm. ";

// Offset : local regularization option not taken into account because old feature
GSMMODELINPUT_ERR_5030.Request    = "Local regularization option has not been taken into account.";
GSMMODELINPUT_ERR_5030.Diagnostic = "The version of the feature is too old to manage this option.";
GSMMODELINPUT_ERR_5030.Advice     = "Please upgrade this feature.";

// Angle nul pour le ReflectLine
GSMMODELINPUT_ERR_5100.Request    = "Null angle or 180 degrees angle are not allowed.";
GSMMODELINPUT_ERR_5100.Diagnostic = "The angle between /p1 and /p2 is null or is equal to 180 degrees.";
GSMMODELINPUT_ERR_5100.Advice     = "Modify the angle value.";

// Angle nul pour le ReflectLine option plan tangent
GSMMODELINPUT_ERR_5101.Request    = "-90 degrees angle or 90 degrees angle are not allowed\n if Normal option is uncheck.";
GSMMODELINPUT_ERR_5101.Diagnostic = "The angle between /p1 and /p2 is equal to -90 degrees or is equal to 90 degrees.";
GSMMODELINPUT_ERR_5101.Advice     = "Modify the angle value.";

// Une line si sketch pour le combine
GSMMODELINPUT_ERR_5200.Request    = "There is no solution.";
GSMMODELINPUT_ERR_5200.Diagnostic = "With the Normal combine type, it is not possible\nto find a normal direction to /p1.";
GSMMODELINPUT_ERR_5200.Advice     = 
"Replace it with a planar curve or profile (a sketch for example)\nor choose the Along directions combine type\nto specify the extrusion direction.";

// la spec n'est pas monoelement
GSMMODELINPUT_ERR_5250.Request    = "";
GSMMODELINPUT_ERR_5250.Diagnostic = 
"The element /p1 is not a single edge curve.
Only single edge curve is allowed.";
GSMMODELINPUT_ERR_5250.Advice     = 
"Replace it with a single edge curve.";

GSMMODELINPUT_ERR_5251.Request    = "";
GSMMODELINPUT_ERR_5251.Diagnostic = 
"The element /p1 is not a single surface.
Only single surface is allowed.";
GSMMODELINPUT_ERR_5251.Advice     = 
"Replace it with a single surface.";

// line bisecting
GSMMODELINPUT_ERR_5300.Request    = "Invalid input elements.";
GSMMODELINPUT_ERR_5300.Diagnostic = "At least one of the elements /p1 and /p2 are not lines.";
GSMMODELINPUT_ERR_5300.Advice     = "You can either choose linear elements,\nor select a supporting surface.";

GSMMODELINPUT_ERR_5310.Request    = "No intersection, or identical lines.";
GSMMODELINPUT_ERR_5310.Diagnostic = "There is no intersection between input lines, or they are coincident.";
GSMMODELINPUT_ERR_5310.Advice     = "Use two lines that intersect or select a reference point.";

GSMMODELINPUT_ERR_5320.Request    = "No intersection or multi-result intersection.";
GSMMODELINPUT_ERR_5320.Diagnostic = "There is no intersection between input curves, or there are several resulting points.";
GSMMODELINPUT_ERR_5320.Advice     = "Use two curves that intersect in a single point.";

// line 
GSMMODELINPUT_ERR_5400.Request    = "Invalid support";
GSMMODELINPUT_ERR_5400.Diagnostic = "The support /p1 is not a plane.";
GSMMODELINPUT_ERR_5400.Advice     = "Replace it with a plane.";

// Error if line does not lie on support
GSMMODELINPUT_ERR_5401.Request    = "Invalid Curve.";
GSMMODELINPUT_ERR_5401.Diagnostic = "Curve does not lie on support.";
GSMMODELINPUT_ERR_5401.Advice     = "Please, select the curve lying on the support.";

GSMMODELINPUT_ERR_5402.Request    = "Invalid support";
GSMMODELINPUT_ERR_5402.Diagnostic = "The support is not a plane.";
GSMMODELINPUT_ERR_5402.Advice     = "Replace it with a plane.";

// Rolling Offset
GSMMODELINPUT_ERR_6000.Request    = "Offset value not allowed.";
GSMMODELINPUT_ERR_6000.Diagnostic = "The offset value is greater than zero.";
GSMMODELINPUT_ERR_6000.Advice     = " ";

// Split
GSMMODELINPUT_ERR_6100.Request    = "";
GSMMODELINPUT_ERR_6100.Diagnostic = "When splitting (or trimming) a closed wire by an other wire, a support must be specified.";
GSMMODELINPUT_ERR_6100.Advice     = "";

GSMMODELINPUT_ERR_6200.Request    = "";
GSMMODELINPUT_ERR_6200.Diagnostic = "When splitting a curve, cutting elements must be points, curves or surfaces.\nWhen splitting a surface, cutting elements must be curves or surfaces.";
GSMMODELINPUT_ERR_6200.Advice     = "";

// Splitting volumes using curve with volume as result type not allowed.
GSMMODELINPUT_ERR_6201.Request    = "";
GSMMODELINPUT_ERR_6201.Diagnostic = "When splitting a Volume with Volume as result type, cutting elements must be surface / Plane.";
GSMMODELINPUT_ERR_6201.Advice     = "Change the cutting element to Surface / Plane or choose Surface as result type.";

GSMMODELINPUT_ERR_6300.Request    = "";
GSMMODELINPUT_ERR_6300.Diagnostic = "When a support is specified, cut and cutting elements must be wires.";
GSMMODELINPUT_ERR_6300.Advice     = "";

// Split plane/plane forbidden.
GSMMODELINPUT_ERR_6301.Request    = "The cutting element is invalid.";
GSMMODELINPUT_ERR_6301.Diagnostic = "An infinite plane can be cut only by a closed wire.";
GSMMODELINPUT_ERR_6301.Advice     = "A shell can be cut only by another shell or a wire: a point is invalid.";

// Trim 
GSMMODELINPUT_ERR_6400.Request    = "";
GSMMODELINPUT_ERR_6400.Diagnostic = "When a support is specified, both elements must be wires.";
GSMMODELINPUT_ERR_6400.Advice     = "";

GSMMODELINPUT_ERR_6500.Request    = "";
GSMMODELINPUT_ERR_6500.Diagnostic = "You must trim a curve by an other curve or a surface by an other surface.";
GSMMODELINPUT_ERR_6500.Advice     = "";

// Sweep variationnel
GSMMODELINPUT_ERR_6900.Request    = "The selected sketch is \"/p1\"";
GSMMODELINPUT_ERR_6900.Diagnostic = 
"The axis of \"UserSection\" (copy of \"/p1\") has been moved to comply with the intended sweep positioning. 
The following constraints: \"/p2\" 
may be not compatible with this move.
This situation may lead to unexpected results.";
GSMMODELINPUT_ERR_6900.Advice     = 
"To avoid this, create the sketch according to the sweep context, within the command,
or modify the initial sketch constraints, and use constraints 
based on the sweep reference geometry instead of the sketch axis";

GSMMODELINPUT_ERR_6901.Request    = "The selected sketch is \"/p1\"";
GSMMODELINPUT_ERR_6901.Diagnostic = 
"It contains projections of 3D reference elements that may become meaningless along the guide curve, and produce an unexpected result or a sketch inconsistency.";
GSMMODELINPUT_ERR_6901.Advice     = 
"If such Use-Edges do not comply with your specifications, you may attempt to replace them by intersections from 3D reference elements.";

GSMMODELINPUT_ERR_6902.Request    = "The selected Sketch is \"/p1\".";
GSMMODELINPUT_ERR_6902.Diagnostic = 
"It is non connex, and that is not supported by the current operator.";
GSMMODELINPUT_ERR_6902.Advice     = 
"You may attempt to turn some pieces of the sketch into \"construction elements\", in order to ensure connexity,
or to create and select a sketch output-profile feature.";

GSMMODELINPUT_ERR_6903.Request    = "The selected sketch is \"/p1\".";
GSMMODELINPUT_ERR_6903.Diagnostic = "It appears to be empty.";
GSMMODELINPUT_ERR_6903.Advice     = "Do not use an empty sketch.";

GSMMODELINPUT_ERR_6904.Request    = "The selected sketch is \"/p1\".";
GSMMODELINPUT_ERR_6904.Diagnostic = 
"It includes geometry from multi-cells surfaces/shells, not supported by the sweep";
GSMMODELINPUT_ERR_6904.Advice     = "You may modify the sketch in order to split the resulting sweep by these surfaces.";

// Impossibilite de dupliquer un sketch
GSMMODELINPUT_ERR_6905.Request    = " ";
GSMMODELINPUT_ERR_6905.Diagnostic = "Section creation failed or sketch /p1 not normal to spine";
GSMMODELINPUT_ERR_6905.Advice     = "Please check the sketch constraints consistency, or use another spine curve";

// Pas d'intersection avec la spine
GSMMODELINPUT_ERR_6906.Request    = " ";
GSMMODELINPUT_ERR_6906.Diagnostic = "Spine does not intersect sketch plane /p1";
GSMMODELINPUT_ERR_6906.Advice     = "Please change sketch support or modify the spine";

// Erreur interne bizarre 
GSMMODELINPUT_ERR_6907.Request    = " ";
GSMMODELINPUT_ERR_6907.Diagnostic = "Error during sections update";
GSMMODELINPUT_ERR_6907.Advice     = " ";

// Erreur interne bizarre 
GSMMODELINPUT_ERR_6908.Request    = "Impossible to compute sweep.";
GSMMODELINPUT_ERR_6908.Diagnostic = "Relimitation options are not coherent with a closed sweep.";
GSMMODELINPUT_ERR_6908.Advice     = "Please, change relimitation options.";

// Check sections and places coherency
GSMMODELINPUT_ERR_6909.Request    = " ";
GSMMODELINPUT_ERR_6909.Diagnostic = "The number of sections is lower than the number of sections' places.";
GSMMODELINPUT_ERR_6909.Advice     = "Please, recreate the adaptive sweep.";

// Check input Sketch
GSMMODELINPUT_ERR_6910.Request    = " ";
GSMMODELINPUT_ERR_6910.Diagnostic = "Input sketch is not a sketch.";
GSMMODELINPUT_ERR_6910.Advice     = "Please, edit the adaptive sweep and select a sketch as input.";


GSMMODELINPUT_ERR_6911.Request    = "The selected Output is \"/p1\".";
GSMMODELINPUT_ERR_6911.Diagnostic = "It is non connex, and that is not supported by the current operator.";
GSMMODELINPUT_ERR_6911.Advice     = "Please, select a connex output.";

GSMMODELINPUT_ERR_6912.Request    = "The selected sketch is \"/p1\".";
GSMMODELINPUT_ERR_6912.Diagnostic = "It appears to be empty and contains output features.";
GSMMODELINPUT_ERR_6912.Advice     = "Please, select an output feature.";

GSMMODELINPUT_ERR_6913.Request    = "The selected sketch is \"/p1\".";
GSMMODELINPUT_ERR_6913.Diagnostic = "It appears to be a datum sketch.";
GSMMODELINPUT_ERR_6913.Advice     = "Adaptive sweep command does not manage datum sketch.";

GSMMODELINPUT_ERR_6914.Request    = "Adaptive Sweep cannot be computed.";
GSMMODELINPUT_ERR_6914.Diagnostic = "No active section is found.";
GSMMODELINPUT_ERR_6914.Advice     = "Please, create or activate some sections to compute sweep.";

GSMMODELINPUT_ERR_6915.Request    = "The section \"/p1\" cannot be correctly positionned.";
GSMMODELINPUT_ERR_6915.Diagnostic = "The moving frame cannot be computed at section place.";
GSMMODELINPUT_ERR_6915.Advice     = " ";

GSMMODELINPUT_ERR_6916.Request    = "The section \"/p1\" cannot be correctly positionned.";
GSMMODELINPUT_ERR_6916.Diagnostic = "The section place is not a point.";
GSMMODELINPUT_ERR_6916.Advice     = " ";

// Junction
GSMMODELINPUT_ERR_7000.Request    = "/p1 is a closed curve.";
GSMMODELINPUT_ERR_7000.Diagnostic = "Junction creation is not allowed on closed element.";
GSMMODELINPUT_ERR_7000.Advice     = "Please use an open curve.";

GSMMODELINPUT_ERR_7001.Request    = "/p1 is a non connex element.";
GSMMODELINPUT_ERR_7001.Diagnostic = "Section element for Junction creation has to be connex.";
GSMMODELINPUT_ERR_7001.Advice     = "Use another element, or extract connex entity with EXTRACT operator.";

GSMMODELINPUT_ERR_7002.Request    = "/p1 does not lie completly on /p2 element.";
GSMMODELINPUT_ERR_7002.Diagnostic = "Section curve has to lie completly on corresponding support surface for junction creation.";
GSMMODELINPUT_ERR_7002.Advice     = "Use another surface wich /p1 curve is lying on.";

GSMMODELINPUT_ERR_7003.Request    = "Impossible Junction surface creation.";
GSMMODELINPUT_ERR_7003.Diagnostic = "More than one section curve is necessary to create a Junction surface.";
GSMMODELINPUT_ERR_7003.Advice     = "Add a section curve.";

GSMMODELINPUT_ERR_7004.Request    = "/p1 is an invalid user coupling curve.";
GSMMODELINPUT_ERR_7004.Diagnostic = "/p1 does not lie on two sections.";
GSMMODELINPUT_ERR_7004.Advice     = "A user coupling curve has to lie on two sections.";

GSMMODELINPUT_ERR_7005.Request    = "/p1 is an invalid user coupling curve.";
GSMMODELINPUT_ERR_7005.Diagnostic = "/p1 does not end on a section.";
GSMMODELINPUT_ERR_7005.Advice     = "Please relimit the user coupling curve to end on a section.";

GSMMODELINPUT_ERR_7006.Request    = "Crossing coupling curve.";
GSMMODELINPUT_ERR_7006.Diagnostic = "/p1 coupling curve is intersecting the others.";
GSMMODELINPUT_ERR_7006.Advice     = "Please remove /p1 user coupling curve.";

GSMMODELINPUT_ERR_7007.Request    = "Coupling curve and coupling Point at same location.";
GSMMODELINPUT_ERR_7007.Diagnostic = "/p1 coupling point and /p2 coupling curve lie on a section at the same location.";
GSMMODELINPUT_ERR_7007.Advice     = "Please remove one.";

// Seat Diabolo
GSMMODELINPUT_ERR_7100.Request    = "Identical elements.";
GSMMODELINPUT_ERR_7100.Diagnostic = "/p1 cannot be used both as seat and base surface.";
GSMMODELINPUT_ERR_7100.Advice     = "Please use two different elements.";

GSMMODELINPUT_ERR_7101.Request    = "/p1 is a non connex element.";
GSMMODELINPUT_ERR_7101.Diagnostic = "Seat surface element has to be connex.";
GSMMODELINPUT_ERR_7101.Advice     = "Use another element, or extract connex entity with EXTRACT operator.";

GSMMODELINPUT_ERR_7102.Request    = "/p1 is an infinite element.";
GSMMODELINPUT_ERR_7102.Diagnostic = "Seat surface element has to be a limited element.";
GSMMODELINPUT_ERR_7102.Advice     = "Use another element.";

GSMMODELINPUT_ERR_7103.Request    = "The draft direction and the seat surface are incompatible.";
GSMMODELINPUT_ERR_7103.Diagnostic = "The draft direction cannot be set onto the planar seat surface /p1.";
GSMMODELINPUT_ERR_7103.Advice     = "Please, use another draft direction or on other seat surface.";

GSMMODELINPUT_ERR_7104.Request    = "Several intersections.";
GSMMODELINPUT_ERR_7104.Diagnostic = "Seat surface element has more than one intersection with the base volume.";
GSMMODELINPUT_ERR_7104.Advice     = "Please, use another seat surface.";

GSMMODELINPUT_ERR_7105.Request    = "/p1 is a non connex element.";
GSMMODELINPUT_ERR_7105.Diagnostic = "Base element for Diabolo has to be connex.";
GSMMODELINPUT_ERR_7105.Advice     = "Use another element, or extract connex entity with EXTRACT operator.";

GSMMODELINPUT_ERR_7106.Request    = "/p1 is a multiple boundary surface.";
GSMMODELINPUT_ERR_7106.Diagnostic = "The seat surface must have only one boundary.";
GSMMODELINPUT_ERR_7106.Advice     = "Please, use another seat surface.";

GSMMODELINPUT_ERR_7107.Request    = "Invalid Law";
GSMMODELINPUT_ERR_7107.Diagnostic = "Law selection resulted in multi domain output of sweep";
GSMMODELINPUT_ERR_7107.Advice     = "Please use another law.";

//Axis line
GSMMODELINPUT_ERR_7500.Request    = "Invalid Element.";
GSMMODELINPUT_ERR_7500.Diagnostic = " ";
GSMMODELINPUT_ERR_7500.Advice     = "Element has to be a circle, ellipse, oblong, revolution surface or sphere.";

GSMMODELINPUT_ERR_7501.Request    = "Invalid Direction.";
GSMMODELINPUT_ERR_7501.Diagnostic = " ";
GSMMODELINPUT_ERR_7501.Advice     = "Direction has to be along the plane of element or parallel to it.";

GSMMODELINPUT_ERR_7502.Request    = "Invalid Direction.";
GSMMODELINPUT_ERR_7502.Diagnostic = " ";
GSMMODELINPUT_ERR_7502.Advice     = "Direction has to be along the plane of element or parallel to it.";

//extrude
GSMMODELINPUT_ERR_8000.Request    = "Invalid Extrude Direction.";
GSMMODELINPUT_ERR_8000.Diagnostic = " ";
GSMMODELINPUT_ERR_8000.Advice     = "Please, use a correct direction.";

GSMMODELINPUT_ERR_8100.Request    = "Invalid Profile.";
GSMMODELINPUT_ERR_8100.Diagnostic = "The selected profile is an infinite element.";
GSMMODELINPUT_ERR_8100.Advice     = "Please, use a finite element.";

GSMMODELINPUT_ERR_8010.Request    = "Invalid Extrude Direction.";
GSMMODELINPUT_ERR_8010.Diagnostic = "Unable to retrieve Sketch normal as direction.";
GSMMODELINPUT_ERR_8010.Advice     = "Please, define a direction.";

// --- Volume Extrude  and Revol - MPQ

GSMMODELINPUT_ERR_8101.Request    = "Invalid Profile.";
GSMMODELINPUT_ERR_8101.Diagnostic = "The selected profile is not planar or is not closed or is self intersecting";
GSMMODELINPUT_ERR_8101.Advice     = "Please, select a non self intersecting closed planar profile or a surface.";

GSMMODELINPUT_ERR_8102.Request    = "Invalid Profile.";
GSMMODELINPUT_ERR_8102.Diagnostic = "The selected profile is not a curve or surface."; 
GSMMODELINPUT_ERR_8102.Advice     = "Please, select a non self intersecting closed planar profile or a surface.";

GSMMODELINPUT_ERR_8103.Request    = "Invalid Direction.";
GSMMODELINPUT_ERR_8103.Diagnostic = "The selected direction lies in the plane of the profile or is parallel to it."; 
GSMMODELINPUT_ERR_8103.Advice     = "Please, select the direction which is not in the plane of the profile.";
 
// --- Volume Revol - MPQ

GSMMODELINPUT_ERR_8104.Request    = "Invalid Profile.";
GSMMODELINPUT_ERR_8104.Diagnostic = "The selected profile is not planar or is not closed or is self-intersecting or it is a Sketch without axis";
GSMMODELINPUT_ERR_8104.Advice     = "Please, select a non self-intersecting closed planar profile, a surface, or a sketch with an axis.(Start and end vertices of open sketch should lie on sketch axis)";
  
GSMMODELINPUT_ERR_8105.Request    = "Invalid Axis.";
GSMMODELINPUT_ERR_8105.Diagnostic = "The selected axis is perpendicular to the plane of the profile.";
GSMMODELINPUT_ERR_8105.Advice     = "Please, select the axis which is not perpendicular to the plane of the profile.";

GSMMODELINPUT_ERR_8110.Request    = "Invalid Revolution axis.";
GSMMODELINPUT_ERR_8110.Diagnostic = "Unable to retrieve Revolution axis from sketch.";
GSMMODELINPUT_ERR_8110.Advice     = "Please, define a Revolution axis.";

// --- End Volume Extrude and Revol - MPQ

//extremum
GSMMODELINPUT_ERR_8500.Request    = "Invalid Element.";
GSMMODELINPUT_ERR_8500.Diagnostic = "The selected element is an infinite element";
GSMMODELINPUT_ERR_8500.Advice     = "Please, use a finite element.";

//corner 3D trim
GSMMODELINPUT_ERR_9000.Request    = "Corner Trimming Error.";
GSMMODELINPUT_ERR_9000.Diagnostic = "The operator finds several solutions, and cannot relimit the wires";
GSMMODELINPUT_ERR_9000.Advice     = "Please, Use the operator in No-Trim Mode, then relimit the wires manually.";

//corner on vertex
GSMMODELINPUT_ERR_9001.Request    = "Corner On Vertex cannot be computed";
GSMMODELINPUT_ERR_9001.Diagnostic = "/p1 has to be a vertex extracted from a curve";
GSMMODELINPUT_ERR_9001.Advice     = "Please, Select another element or deactivate the Corner On Vertex mode.";

GSMMODELINPUT_ERR_9002.Request    = "Corner On Vertex cannot be computed";
GSMMODELINPUT_ERR_9002.Diagnostic = "/p1 is at the end of the curve /p2";
GSMMODELINPUT_ERR_9002.Advice     = "Please, Select another element or deactivate the Corner On Vertex mode.";

//corner
GSMMODELINPUT_ERR_9010.Request    = "Invalid Input Element.";
GSMMODELINPUT_ERR_9010.Diagnostic = "The input elements are not coplanar.";
GSMMODELINPUT_ERR_9010.Advice     = "Please, Select coplanar elements or select a support surface for the elements";

GSMMODELINPUT_ERR_9020.Request    = "Invalid Input Element.";
GSMMODELINPUT_ERR_9020.Diagnostic = "The input elements are not coplanar.";
GSMMODELINPUT_ERR_9020.Advice     = "Please, Select coplanar elements.";

GSMMODELINPUT_ERR_9021.Request    = "3D corner cannot be computed.";
GSMMODELINPUT_ERR_9021.Diagnostic = "The input direction is not specified.";
GSMMODELINPUT_ERR_9021.Advice     = "If you want to use automatic computed direction fonctionality, you have to upgrade this feature.";

//connect
GSMMODELINPUT_ERR_9500.Request    = "Invalid base curve.";
GSMMODELINPUT_ERR_9500.Diagnostic = "The base curve /p1 cannot be a closed curve";
GSMMODELINPUT_ERR_9500.Advice     = "Use another element";

GSMMODELINPUT_ERR_9501.Request    = "Invalid Point.";
GSMMODELINPUT_ERR_9501.Diagnostic = "The Point /p1 is neither on the base curve nor on a support curve";
GSMMODELINPUT_ERR_9501.Advice     = "Use another element";

GSMMODELINPUT_ERR_9502.Request    = "Connect Trimming Error.";
GSMMODELINPUT_ERR_9502.Diagnostic = "The operator cannot relimit the wires";
GSMMODELINPUT_ERR_9502.Advice     = "Please, Use the operator in No-Trim Mode, then relimit the wires manually.";

GSMMODELINPUT_ERR_9503.Request    = "Invalid Point.";
GSMMODELINPUT_ERR_9503.Diagnostic = "The input point /p1 does not lie on the wire support.";
GSMMODELINPUT_ERR_9503.Advice     = "Project it on the support, and use this projection";

// Continuite en tangence du resultat.
GSMMODELINPUT_ERR_9600.Request    = "Tangency Continuity ";
GSMMODELINPUT_ERR_9600.Diagnostic = "The result is not continuous in tangency";
GSMMODELINPUT_ERR_9600.Advice     = "Please modify the specifications of the operation.";

// Messages d'erreur pour l'edition d'un feature multisel
GSMMODELINPUT_ERR_9700.Request    = "Multiselection coherency ";
GSMMODELINPUT_ERR_9700.Diagnostic = "The aggregated features are not the result of a multiselection";
GSMMODELINPUT_ERR_9700.Advice     = "Please modify the children list of the multisel feature";

//features ayant la meme entree ds un multioutput
GSMMODELINPUT_ERR_9710.Request    = "Warning";
GSMMODELINPUT_ERR_9710.Diagnostic = "/p1 and /p2 have the same input.";
GSMMODELINPUT_ERR_9710.Advice     = "/p1 will be replaced by /p2.";

//features ayant une entree null ds un multioutput
GSMMODELINPUT_ERR_9720.Request    = "/p1 has no input.";
GSMMODELINPUT_ERR_9720.Diagnostic = "Do you want to remove /p1 ?";
GSMMODELINPUT_ERR_9720.Advice     = "Question";

//Pour l'extrapol
GSMMODELINPUT_ERR_9800.Request    = "Error detected in the dimension of the inputs ";
GSMMODELINPUT_ERR_9800.Diagnostic = "Either dimension of /p1 or /p2 was not expected";
GSMMODELINPUT_ERR_9800.Advice     = "Reconsider your selection";

//Pour le Curve Par
GSMMODELINPUT_ERR_9900.Request    = "Passing Point ";
GSMMODELINPUT_ERR_9900.Diagnostic = "The passing point cannot be projected on the reference curve";
GSMMODELINPUT_ERR_9900.Advice     = "Reconsider your selection";

GSMMODELINPUT_ERR_9910.Request    = "Parallel Curve cannot be computed.";
GSMMODELINPUT_ERR_9910.Diagnostic = "The advanced law is missing.";
GSMMODELINPUT_ERR_9910.Advice     = "Please, select an advanced law or change law type.";

//pour le fillet & combine
GSMMODELINPUT_ERR_10000.Request    = "Input Error detected";
GSMMODELINPUT_ERR_10000.Diagnostic = "Some selected elements are identical";
GSMMODELINPUT_ERR_10000.Advice     = "Please, select different elements";

GSMMODELINPUT_ERR_10010.Request    = "Input Error detected";
GSMMODELINPUT_ERR_10010.Diagnostic = "Selected elements are infinite surfaces";
GSMMODELINPUT_ERR_10010.Advice     = "Please, select, at least, one finite element";

GSMMODELINPUT_ERR_10020.Request    = "Input Error detected.";
GSMMODELINPUT_ERR_10020.Diagnostic = "Some law relimiters are missing.";
GSMMODELINPUT_ERR_10020.Advice     = "Please, select law relimiters.";

GSMMODELINPUT_ERR_10030.Request    = "Invalid law.";
GSMMODELINPUT_ERR_10030.Diagnostic = "It is not allowed to define variable radius law on infinite spine.";
GSMMODELINPUT_ERR_10030.Advice     = "Please, relimit spine manually or define constant radius law.";

GSMMODELINPUT_ERR_10040.Request    = "Invalid conic parameter value.";
GSMMODELINPUT_ERR_10040.Diagnostic = "Conic parameter must be defined between 0 (excluded) and 1 (excluded).";
GSMMODELINPUT_ERR_10040.Advice     = "Please, change conic parameter value.";

GSMMODELINPUT_ERR_10050.Request    = "Invalid input configuration.";
GSMMODELINPUT_ERR_10050.Diagnostic = "Conical section mode is not compatible with hold curve.";
GSMMODELINPUT_ERR_10050.Advice     = "Please, remove hold curve.";

GSMMODELINPUT_ERR_10060.Request    = "Invalid input configuration.";
GSMMODELINPUT_ERR_10060.Diagnostic = "Chordal radius mode is not compatible with hold curve and spine.";
GSMMODELINPUT_ERR_10060.Advice     = "Please, remove hold curve and spine.";

// Naming Ambiguity
GSMMODELINPUT_ERR_11000.Request    = "Not Connex Specification";
GSMMODELINPUT_ERR_11000.Diagnostic = "A BRep has become not connex.";
GSMMODELINPUT_ERR_11000.Advice     = "Please, edit the related Extract in update error, 
and redefine the specification.";

// Fill G2
GSMFill.G2Incompability="G2 constraints are not take in account (incompabilities between the constraints).";

// Unfold
GSMMODELINPUT_ERR_12000.Request    = "Edge to tear";
GSMMODELINPUT_ERR_12000.Diagnostic = "The shape can't be unfold due to ambiguities.";
GSMMODELINPUT_ERR_12000.Advice     = "In order to solve the ambiguity, you can select edges or curves to tear.";

GSMMODELINPUT_ERR_12100.Request    = "Edge(s) or curve(s) candidate to tear is(are) invalid";
GSMMODELINPUT_ERR_12100.Diagnostic = "The edges or curves candidate to tear are invalid, 
not appropriate of the ambiguities to resolve or they can lead to a non connex result.";
GSMMODELINPUT_ERR_12100.Advice     = "In order to solve the ambiguity, you can select proposed edges or other curves to tear.";

GSMMODELINPUT_ERR_12200.Request    = "Edge must be torn";
GSMMODELINPUT_ERR_12200.Diagnostic = "The computation determines that this edge must be torn.";
GSMMODELINPUT_ERR_12200.Advice     = "";

GSMMODELINPUT_ERR_12300.Request    = "Optional edge to tear";
GSMMODELINPUT_ERR_12300.Diagnostic = "Optional curves/edges candidate to tear can be selected.";
GSMMODELINPUT_ERR_12300.Advice     = "In order to reduce the distortion, you can select optional edges or curves to tear.";

GSMMODELINPUT_ERR_12450.Request    = "Curve to tear not on the surface";
GSMMODELINPUT_ERR_12450.Diagnostic = "The curve to tear is not on the surface.";
GSMMODELINPUT_ERR_12450.Advice     = "Select an other curve to tear.";

GSMMODELINPUT_ERR_12500.Request    = "Invalid Surface";
GSMMODELINPUT_ERR_12500.Diagnostic = "The surface to unfold must be a ruled surface of degree 1*N.";
GSMMODELINPUT_ERR_12500.Advice     = "Select an other surface.";

GSMMODELINPUT_ERR_12510.Request    = "Origin and direction of reference";
GSMMODELINPUT_ERR_12510.Diagnostic = "The origin or the direction of reference are undefined.";
GSMMODELINPUT_ERR_12510.Advice     = "Select an origin and a direction.";

GSMMODELINPUT_ERR_12511.Request    = "Origin of reference";
GSMMODELINPUT_ERR_12511.Diagnostic = "The image of the origin of reference is invalid.";
GSMMODELINPUT_ERR_12511.Advice     = "Select an other origin.";

GSMMODELINPUT_ERR_12512.Request    = "Origin of reference";
GSMMODELINPUT_ERR_12512.Diagnostic = "The origin of reference is undefined.";
GSMMODELINPUT_ERR_12512.Advice     = "Select an origin.";

GSMMODELINPUT_ERR_12520.Request    = "Direction of reference";
GSMMODELINPUT_ERR_12520.Diagnostic = "The direction of reference is undefined.";
GSMMODELINPUT_ERR_12520.Advice     = "Select a direction.";

GSMMODELINPUT_ERR_12521.Request    = "Direction of reference";
GSMMODELINPUT_ERR_12521.Diagnostic = "The image of direction of reference is invalid.";
GSMMODELINPUT_ERR_12521.Advice     = "Select a other direction.";

GSMMODELINPUT_ERR_12530.Request    = "Ambiguity of position.";
GSMMODELINPUT_ERR_12530.Diagnostic = "The default position of the result can not be computed due to an ambiguity.";
GSMMODELINPUT_ERR_12530.Advice     = "Select an explicit target plane.";

GSMMODELINPUT_ERR_12570.Request    = "Bad target direction";
GSMMODELINPUT_ERR_12570.Diagnostic = "The target direction must be in the target plane.";
GSMMODELINPUT_ERR_12570.Advice     = "Change the target direction.";

GSMMODELINPUT_ERR_12580.Request    = "Bad target origin";
GSMMODELINPUT_ERR_12580.Diagnostic = "The target origin must be in the target plane.";
GSMMODELINPUT_ERR_12580.Advice     = "Change the target origin.";

GSMMODELINPUT_ERR_12581.Request    = "Point or Curve to Transfer";
GSMMODELINPUT_ERR_12581.Diagnostic = "The point or curve to transfer /p1 is not lying on the folded/unfolded surface.";
GSMMODELINPUT_ERR_12581.Advice     = "Change this point or curve to transfer.";

GSMMODELINPUT_ERR_12582.Request    = "Point or Curve to Transfer";
GSMMODELINPUT_ERR_12582.Diagnostic = "The point or curve to transfer /p1 cannot be folded/unfolded.";
GSMMODELINPUT_ERR_12582.Advice     = "Change this point or curve to transfer.";

GSMMODELINPUT_ERR_12583.Request    = "Point or Curve to Transfer";
GSMMODELINPUT_ERR_12583.Diagnostic = "Point(s) or curve(s) to transfer cannot be folded/unfolded.";
GSMMODELINPUT_ERR_12583.Advice     = "Change the specification(s) in error of update.";

GSMMODELINPUT_ERR_12584.Request    = "Undefined Surface to Unfold";
GSMMODELINPUT_ERR_12584.Diagnostic = "The surface to unfold is not defined.";
GSMMODELINPUT_ERR_12584.Advice     = "Define the surface to unfold.";

GSMMODELINPUT_ERR_12585.Request    = "Bad origin of reference.";
GSMMODELINPUT_ERR_12585.Diagnostic = "The origin of reference lies on an edge to tear or the reference plane is tangential to at least two faces.";
GSMMODELINPUT_ERR_12585.Advice     = "Modify the origin of reference.";

GSMMODELINPUT_ERR_12586.Request    = "The selected curve to tear is invalid.";
GSMMODELINPUT_ERR_12586.Diagnostic = "The selected curve to tear would yield to a non-manifold topology.";
GSMMODELINPUT_ERR_12586.Advice     = "Please, select another edge or curve to tear.";

//Transfer
GSMMODELINPUT_ERR_12590.Request    = "Bad correspondence between input surfaces.";
GSMMODELINPUT_ERR_12590.Diagnostic = "The unfolded surface is not the result of the computation of the surface to unfold or it has not been computed with 'all' surface type.";
GSMMODELINPUT_ERR_12590.Advice     = "Please, change the surface to unfold or the unfolded surface.";

//Revol
GSMMODELINPUT_ERR_12600.Request    = "Bad revolution axis.";
GSMMODELINPUT_ERR_12600.Diagnostic = "The revolution axis is not linear.";
GSMMODELINPUT_ERR_12600.Advice     = "Please, select a linear revolution axis.";

GSMMODELINPUT_ERR_12601.Request    = "Invalid angles.";
GSMMODELINPUT_ERR_12601.Diagnostic = "The sum of the two angles must be greater than 0 and less than or equal to 360 degrees.";
GSMMODELINPUT_ERR_12601.Advice     = "Please, change one or both the angles.";

//Circle Center-Axis
GSMMODELINPUT_ERR_12650.Request    = "Invalid Axis.";
GSMMODELINPUT_ERR_12650.Diagnostic = "The selected element is not a line or axis.";
GSMMODELINPUT_ERR_12650.Advice     = "Please, select an axis or line.";

GSMMODELINPUT_ERR_12651.Request    = "Invalid circle limitation.";
GSMMODELINPUT_ERR_12651.Diagnostic = "Part Arc limitation is not available when input point is lying on the axis.";
GSMMODELINPUT_ERR_12651.Advice     = "Please, change the circle limitation to Whole.";

//Point Sphere Center.
GSMMODELINPUT_ERR_12700.Request    = "Invalid Element.";
GSMMODELINPUT_ERR_12700.Diagnostic = "Selected element is not an circle, ellipse or spherical surface.";
GSMMODELINPUT_ERR_12700.Advice     = "Please, select an circle, ellipse or spherical surface.";

// Volume Sweep
// Equivalent UI ERROR - GSMUIINPUT_ERR_3903
GSMMODELINPUT_ERR_12800.Request    = "Invalid Profile.";
GSMMODELINPUT_ERR_12800.Diagnostic = "The selected profile is not planar or is not closed or is self intersecting or has multiple domains.";
GSMMODELINPUT_ERR_12800.Advice     = "Please, select a non self intersecting closed planar profile with single domain";

// pour l'offset flou
GSMMODELINPUT_ERR_12900.Request    = "Invalid element.";
GSMMODELINPUT_ERR_12900.Diagnostic = "Planes and closed surfaces are not allowed for rough offset.";
GSMMODELINPUT_ERR_12900.Advice     = "Select other objects. ";

GSMMODELINPUT_ERR_12910.Request    = "Offset and deviation values not allowed.";
GSMMODELINPUT_ERR_12910.Diagnostic = "The offset value must be greater than the deviation value.";
GSMMODELINPUT_ERR_12910.Advice     = "The deviation value must be greater than /p1 mm.";

// pour l'offset variable
GSMMODELINPUT_ERR_13000.Request    = "Old version of Variable Offset.";
GSMMODELINPUT_ERR_13000.Diagnostic = "This level is obsolete.";
GSMMODELINPUT_ERR_13000.Advice     = "Recreate the Variable Offset. ";

// Symmetry
GSMMODELINPUT_ERR_13100.Request    = "A planar reference surface is required.";
GSMMODELINPUT_ERR_13100.Diagnostic = "/p1 is not a planar surface.";
GSMMODELINPUT_ERR_13100.Advice     = "Replace it with a planar surface.";

//circle error messages
GSMMODELINPUT_ERR_14000.Request    = "Two vectors are collinear";
GSMMODELINPUT_ERR_14000.Diagnostic = "Support and the vector have same direction";
GSMMODELINPUT_ERR_14000.Advice     = "Select another support or change any of the points ";

GSMMODELINPUT_ERR_14100.Request    = "Invalid Direction";
GSMMODELINPUT_ERR_14100.Diagnostic = "Selected support has an invalid direction";
GSMMODELINPUT_ERR_14100.Advice     = "Select another support";

GSMMODELINPUT_ERR_14200.Request    = "Invalid points";
GSMMODELINPUT_ERR_14200.Diagnostic = "Selected points are invalid";
GSMMODELINPUT_ERR_14200.Advice     = "Select valid points";

GSMMODELINPUT_ERR_14300.Request    = "Same input points";
GSMMODELINPUT_ERR_14300.Diagnostic = "Selected points are same";
GSMMODELINPUT_ERR_14300.Advice     = "Select different points";

//plane angle error message
GSMMODELINPUT_ERR_14400.Request    = "Rotation axis is perpendicular to reference plane";
GSMMODELINPUT_ERR_14400.Diagnostic = "Rotation axis and reference plane should not be perpendicular";
GSMMODELINPUT_ERR_14400.Advice     = "Select another reference plane or change the rotation axis ";

GSMMODELINPUT_ERR_14500.Request    = "Rotation axis can not be projected on reference plane";
GSMMODELINPUT_ERR_14500.Diagnostic = "Length of projection is very small";
GSMMODELINPUT_ERR_14500.Advice     = "Change the rotation axis or increase its length";

// added for volume draft sweep
GSMMODELINPUT_ERR_14600.Request    = "Invalid Guide.";
GSMMODELINPUT_ERR_14600.Diagnostic = "The selected Guide is not closed or contains hole or is self intersecting or has multiple domains.";
GSMMODELINPUT_ERR_14600.Advice     = "Please, select a non self intersecting closed planar guide curve or open surface without hole and with single domain";

// Warning Optional attribute removed
GSMMODELINPUT_WARNING_001="Optional input /p2 has been removed. The result of /p1 has been impacted, edit /p1 to solve or confirm the new result.";

// Warning for 0 tension value in spline
GSMMODELINPUT_ERR_14700.Request    = " ";
GSMMODELINPUT_ERR_14700.Diagnostic = "Null tangent tension value is not authorized by the operator. The result has been computed with a chosen tension value.";
GSMMODELINPUT_ERR_14700.Advice     = " ";

// Error message for points do not lie on given support in case of point between 
GSMMODELINPUT_ERR_14800.Request    = "Invalid Input.";
GSMMODELINPUT_ERR_14800.Diagnostic = "Input points do not lie on given support.";
GSMMODELINPUT_ERR_14800.Advice     = "Project them on support and use those projections.";

// Error message for relimiters if both the relimiters are same in case of Sweep 
GSMMODELINPUT_ERR_14900.Request    = "Invalid Input.";
GSMMODELINPUT_ERR_14900.Diagnostic = "Both the relimiters are same";
GSMMODELINPUT_ERR_14900.Advice     = "Select two different relimiters";

GSMMODELINPUT_ERR_15000.Request    = " ";
GSMMODELINPUT_ERR_15000.Diagnostic = "The given angle value requires seat surface boundary to be tangent continuous.";
GSMMODELINPUT_ERR_15000.Advice     = " ";

GSMMODELINPUT_ERR_15100.Request    = " ";
GSMMODELINPUT_ERR_15100.Diagnostic = "Invalid Upto Element";
GSMMODELINPUT_ERR_15100.Advice     = "Use an Upto Element with distance greater than the geometric factory resolution";

GSMMODELINPUT_ERR_15200.Request    = " ";
GSMMODELINPUT_ERR_15200.Diagnostic = "Invalid Upto Element";
GSMMODELINPUT_ERR_15200.Advice     = " ";

// 2D-ViewSection Cutting area reference point must lie on cutting plane
GSMMODELINPUT_ERR_15300.Request    = "Invalid reference point.";
GSMMODELINPUT_ERR_15300.Diagnostic = "Element /p1 does not lie on cutting plane.";
GSMMODELINPUT_ERR_15300.Advice     = "Please select different point.";

