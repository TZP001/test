WindowTitle      = "Error Report";

Type.NoError     = "No error";
Type.Information = "Information";
Type.Warning     = "Warning";
Type.Error       = "Error";
Type.FatalError  = "Fatal error";
Type.Unknown     = "Unknown";

Key.NoError = "OK";
Key.SelectionIncomplete = "Selection Incomplete";
Key.Unknown = "Not specified error";

Sweep.WarNoSolution = "No Solution";
Sweep.WarAccuraryNotReach = "Accuracy Not Reach";
Sweep.WarStop = "Couldn't compute entirely";
Sweep.WarRefProfileNotGiWithSpine  = "Profile Not Gi With Spine ";
Sweep.WarRefProfileNotGiWithGuide = "Profile Not Gi With Guide";
Sweep.ErrSpineNoG1Connected = "Spine Not G1 Connected";
Sweep.ErrGuideNoG1Connected = "Guide NotG1 Connected";
Sweep.ErrProfileNoG1Connected = "Profile Not G1 Connected";
Sweep.ErrNoConnectionProfileSurf1 = "No Connection Profile Surf1";
Sweep.ErrNoConnectionProfileSurf2 = "No Connection Profile Surf2";
Sweep.ErrRefProfileNotLocateSurface = "Profile Not on Surface";
Sweep.ErrBoundaryPoint = "Boundary Points";
Sweep.ErrNoG0InputData = "No G0 Input Data";
Sweep.ErrPonctualProfile = "Ponctual Profile";
Sweep.ErrInputData = "Input Data";
Sweep.ErrInputNoNormalDirection = "No Normal Direction";
Sweep.ErrIncompatibleConstraint = "Incompatible Constraint";
Sweep.ErrGeometricSupport = "Geometric Support";
Sweep.ErrInternal = "Internal error";
Sweep.ErrNoIntersectionSpineProfile = "No Intersection Spine-Profile";
Sweep.ErrNoIntersectionGuideProfile = "No Intersection Guide-Profile";
Sweep.ErrNoPlane = "No Plane";
Sweep.ErrNoSupportingSurface = "No Supporting Surface";
Sweep.ErrPontualSolution = "Pontual Solution";
Sweep.ErrSurf1NotGiWithProfile = "Surf1 Not Gi With Profile";
Sweep.ErrSurf2NotGiWithProfile = "Surf2 Not Gi With Profile";
Sweep.ErrProfileNoG1ConnectedwithSpine = "Profile Not G1 Connected with Spine";
Sweep.ErrProfileNoG1ConnectedwithGuide = "Profile Not G1 Connected with Guide";
Sweep.ErrSpineNoG1ConnectedwithProfile = "Spine Not G1 Connected with Profile";
Sweep.ErrGuideNoG1ConnectedwithProfile = "Guide Not G1 Connected with Profile";

TopoFillet.ChangeRadiusOrQuadrant = "No fillet created. Check Radius or Orientation flag";
TopoFillet.BasicOperationFailed   = "No fillet created. Basic operation failed";
TopoFillet.CheckTransitionOfBase  = "No fillet created. Check transition of input surfaces";
TopoFillet.CheckSelection         = "No fillet created. Check selection";
TopoFillet.CheckInputSurfaceSet1  = "Gaps between input surfaces of set 1 detected";
TopoFillet.CheckInputSurfaceSet2  = "Gaps between input surfaces of set 2 detected";

Break.ChangeInputPCurve = "Extrapolation needed for break.";
































