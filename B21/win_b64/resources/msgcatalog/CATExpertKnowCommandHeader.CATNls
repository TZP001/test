//--------------------------------------
// Resource file for CATExpertKnowCommandHeader Class
// En_EN
//--------------------------------------

//--------------------------------------
// ImportRuleBase
//--------------------------------------
// * Menu Bar Item Name *
CATExpertKnowCommandHeader.ImportRuleBase.Title="From Existing Document...";
// * Help Message * 
CATExpertKnowCommandHeader.ImportRuleBase.Help="Insert Rules From Existing Document";
// * Contextual Help *
CATExpertKnowCommandHeader.ImportRuleBase.LongHelp="Insert Rules From Existing Document";
// * Tooltip *
CATExpertKnowCommandHeader.ImportRuleBase.ShortHelp="Insert Rules";

//--------------------------------------
// Report
//--------------------------------------
// * Menu Bar Item Name *
CATExpertKnowCommandHeader.Report.Title="Report...";
// * Help Message * 
CATExpertKnowCommandHeader.Report.Help="Accesses the report options display";
// * Contextual Help *
CATExpertKnowCommandHeader.Report.LongHelp="The Check Report is generated from the data specified in the RuleBase Settings.\n To modify the format or the contents of the Check Report, select the Rulebase object->Settings function\nfrom the contextual menu and check the appropriate options in the \"RuleBase Settings\" dialog box.";
// * Tooltip *
CATExpertKnowCommandHeader.Report.ShortHelp="Report";

//--------------------------------------
// GenerativeRule
//--------------------------------------
// * Menu Bar Item Name *
CATExpertKnowCommandHeader.GenerativeRule.Title="Expert Rule...";
// * Help Message * 
CATExpertKnowCommandHeader.GenerativeRule.Help="Accesses the expert rule editor";
// * Contextual Help *
CATExpertKnowCommandHeader.GenerativeRule.LongHelp="Accesses editor to create a new expert rule";
// * Tooltip *
CATExpertKnowCommandHeader.GenerativeRule.ShortHelp="Expert Rule";

//--------------------------------------
// ReportCheck
//--------------------------------------
// * Menu Bar Item Name *
CATExpertKnowCommandHeader.ReportCheck.Title="Expert Check...";
// * Help Message * 
CATExpertKnowCommandHeader.ReportCheck.Help="Accesses the expert check editor";
// * Contextual Help *
CATExpertKnowCommandHeader.ReportCheck.LongHelp="Accesses editor to create a new expert check";
// * Tooltip *
CATExpertKnowCommandHeader.ReportCheck.ShortHelp="Expert Check";


//--------------------------------------
// Solve
//--------------------------------------
// * Menu Bar Item Name *
CATExpertKnowCommandHeader.Solve.Title="Solve...";
// * Help Message * 
CATExpertKnowCommandHeader.Solve.Help="Solve";
// * Contextual Help *
CATExpertKnowCommandHeader.Solve.LongHelp="If a rule base has never been solved:\n  1) In Automatic Update mode, all active rules and checks are automatically fired the first time\n     a document parameter is modified.\n  2)In non-automatic mode, all active rules and checks are automatically fired the first time the solve icon is clicked.\nAfter a rule base has been solved:\n  1) In Automatic Update mode, a new solve operation is executed each time a document parameter\n     is modified but only the rules whose predicate refers to the modified parameter are fired.\n  2)In non-Automatic Update mode, you have to click the solve icon to re-execute a solve operation\n     after a document parameter has been modified. Only the rules whose predicate refers to the modified parameter are fired.";
// * Tooltip *
CATExpertKnowCommandHeader.Solve.ShortHelp="Solve";

//--------------------------------------
// RuleSet
//--------------------------------------
// * Menu Bar Item Name *
CATExpertKnowCommandHeader.RuleSet.Title="Expert RuleSet...";
// * Help Message * 
CATExpertKnowCommandHeader.RuleSet.Help="Accesses the expert ruleset editor";
// * Contextual Help *
CATExpertKnowCommandHeader.RuleSet.LongHelp="Accesses editor to create a new expert ruleset";
// * Tooltip *
CATExpertKnowCommandHeader.RuleSet.ShortHelp="Expert RuleSet";


// dans le menu object de l arbre des features
//--------------------------------------------


// pour activer un ruleset ou un regle (niveau 1)
// ou un check (niveau 1)
//---------------------------------------
CATExpertKnowCommandHeader.RuleBaseComponentActivate.Title="Activate";
CATExpertKnowCommandHeader.RuleBaseComponentActivate.Help="Interaction beetween component and the model";
CATExpertKnowCommandHeader.RuleBaseComponentActivate.LongHelp="Interaction beetween component and the model";
CATExpertKnowCommandHeader.RuleBaseComponentActivate.ShortHelp="Activate";

// pour desactiver un ruleset ou un regle (niveau 1)
// ou un check (niveau 1)
//---------------------------------------
CATExpertKnowCommandHeader.RuleBaseComponentInactivate.Title="Inactivate";
CATExpertKnowCommandHeader.RuleBaseComponentInactivate.Help="No interaction beetween component and the model";
CATExpertKnowCommandHeader.RuleBaseComponentInactivate.LongHelp="No interaction beetween component and the model";
CATExpertKnowCommandHeader.RuleBaseComponentInactivate.ShortHelp="Inactivate";

// Highlight of the component 
//------------------------------------------------
CATExpertKnowCommandHeader.ExpertKowCheckHighlight.Title="Highlight Failed Components";
CATExpertKnowCommandHeader.ExpertKowCheckHighlight.Help="Highlights failed components use in the check";
CATExpertKnowCommandHeader.ExpertKowCheckHighlight.LongHelp="Highlights failed components use in the check";
CATExpertKnowCommandHeader.ExpertKowCheckHighlight.ShortHelp="Highlights failed components";

// Correct of the component 
//------------------------------------------------
CATExpertKnowCommandHeader.ExpertKowCheckCorrec.Title="Correct Function";
CATExpertKnowCommandHeader.ExpertKowCheckCorrec.Help="Launch the correct function associated with the check";
CATExpertKnowCommandHeader.ExpertKowCheckCorrec.LongHelp="Launch the correct function associated with the check";
CATExpertKnowCommandHeader.ExpertKowCheckCorrec.ShortHelp="Correct Function";

// Justification 
//------------------------------------------------
CATExpertKnowCommandHeader.ExpertKnowCheckJustification.Title="Enforce Succeeded";
CATExpertKnowCommandHeader.ExpertKnowCheckJustification.Help="Launch the correct function associated with the check";
CATExpertKnowCommandHeader.ExpertKnowCheckJustification.LongHelp="Launch the correct function associated with the check";
CATExpertKnowCommandHeader.ExpertKnowCheckJustification.ShortHelp="Correct Function";

// Settings 
//------------------------------------------------
CATExpertKnowCommandHeader.ExpertKnowRuleBaseSettings.Title="Settings";
CATExpertKnowCommandHeader.ExpertKnowRuleBaseSettings.Help="Launch Settings Dialog";
CATExpertKnowCommandHeader.ExpertKnowRuleBaseSettings.LongHelp="Launch Settings Dialog";
CATExpertKnowCommandHeader.ExpertKnowRuleBaseSettings.ShortHelp="SettingsDialog";


// Use Only
//------------------------------------------------
CATExpertKnowCommandHeader.ExpertKnowHowUseOnly.Title="Use Only";
CATExpertKnowCommandHeader.ExpertKnowHowUseOnly.Help="To put component Use Only ";
CATExpertKnowCommandHeader.ExpertKnowHowUseOnly.LongHelp="To put component Use Only (No Editable)";
CATExpertKnowCommandHeader.ExpertKnowHowUseOnly.ShortHelp="Use Only";

// La tool bar 
//-----------------------------------------------
ExpertrativeKnowledgeToolBar.Title = "Knowledge Expert ToolBar";


// Manual (no in supervision mode) Complete
//------------------------------------------------
CATExpertKnowCommandHeader.ExpertForceSolve.Title="Manual Complete Solve";
CATExpertKnowCommandHeader.ExpertForceSolve.Help="Manual Complete Solve";
CATExpertKnowCommandHeader.ExpertForceSolve.LongHelp="Manual Complete Solve";
CATExpertKnowCommandHeader.ExpertForceSolve.ShortHelp="Manual Complete Solve";

// Manual (noin supervision mode) Optimized
//------------------------------------------------
CATExpertKnowCommandHeader.ExpertManualOptimized.Title="Manual Optimized Solve";
CATExpertKnowCommandHeader.ExpertManualOptimized.Help="Manual Optimized Solve";
CATExpertKnowCommandHeader.ExpertManualOptimized.LongHelp="Manual Optimized Solve";
CATExpertKnowCommandHeader.ExpertManualOptimized.ShortHelp="Manual Optimized Solve";



