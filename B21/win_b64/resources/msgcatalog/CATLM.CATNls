//
// CATIA License Manager Messages (low-level)
//

LicenseManager = "License Manager";

//
// Messages    AS: Allow Save
//
CheckFailed = "Failed to check /P01 license(s)\nThe session will stop after the next /P02 unsuccessful attempts\nSaving open documents is strongly recommended";

CheckFailedAS = "Failed to check /P01 license(s)\nThe session functionalities (except save and exit commands) will be unavailable after the next /P02 unsuccessful attempts\nSaving open documents is strongly recommended";

CheckOK = "License(s) have been successfully checked";

TooManyChecksFailed = "Failed to check license(s) after /P01 attempts\nThe session will now stop";

TooManyChecksFailedAS = "Failed to check license(s) after /P01 attempts\nThe session functionalities (except save and exit commands) are now unavailable";

NoSuchProduct = "Requested product not found: /P01";

InconpatibleEnvironment = "The session cannot run on this environment";

NoLicenseForDemo = "No license available for /P01 Demo mode";

LicenseRequestFailed = "Failed to request /P01 license for /P02\n/P03 error: /P04";

LicenseRequestBLFailed = "Failed to request /P01 license for /P02\nAccording to our customer records, you are not entitled to use this level of code.\nPlease contact your nearest IBM PLM office or IBM PLM Business Partner who can assist you with any questions with respect to your licenses.";

LicenseRequest64bitNotAllowed = "Failed to request /P01 license for /P02\n64-bit usage requires a V5 64-bit enabler add-on product as part of the configuration license\nPlease contact your nearest IBM PLM office or IBM PLM Business Partner, to upgrade this license.";

AllLicensesUsed = "All /P02 licenses for /P01 are in use by:\n/P03";

LicenseReleaseFailed = "Failed to release license for /P01\n/P02 error: /P03";

LicenseCheckFailed = "Failed to check license for /P01\n/P02 error: /P03";

LicenseRecovered = "License for /P01 has been successfully recovered";

ErrorLoadingProduct = "Failed to load product definition for /P01 (code /P02)\nPlease reinstall it";

ProductInvalidVersion = "Version /P02 of /P01 product definition is invalid\nPlease reinstall it";

LicenseNotYetAvailable = "The /P01 license for /P02 is not yet available";

LicenseExpired = "The /P01 license for /P02 has expired";

LicenseSoonExpired = "The following granted license(s) will soon expire:\n";

LicenseExpIn = "/P01 in ";

ExpIn24h = "less than 24 hours\n";

ExpIn1day = "1 day\n";

ExpInndays = "/P01 days\n";

LUM_UpgradeServer = "Incompatible LUM server version -- Please upgrade to at least Version 4.6.0";

LUM_InvalidServer = "Incompatible with LUM server running on Windows 9X";

LUM_UpgradeLicense = "Server problem -- please remove and re-enroll the licenses";

LUM_OpenTarget = "License has an unsupported target type -- Please delete it";

LUM_AIXTarget = "AIX license has an unsupported target source -- Please delete it";

LUM_InvalidOsServer = "OS hosting LUM Server not supported";

NoLicenseForAlias = "There is no suitable license to fulfill the /P01 request";

ProductNotShareable = "The license for /P01 is not shareable -- Please contact customer service";

ProductNotAddon = "The license for /P01 contains an invalid add-on product /P02\nPlease contact customer service";

AddonPreqNotPresent = "The custom configuration /P01 does not contain the prerequisite(s) for the add-on product /P02\nPlease contact customer service";

ConfigHasPrereq = "The configuration /P01 should not have prerequisite(s)\nPlease contact customer service";

InvalidScale = "The product /P01 cannot be requested for its scale /P02 is higher than the current configuration(s)";

NamespaceBindingInUse = "LUM namespace binding mode is active -- If possible, please disable it to shorten startup time";

CannotStart = "The licenses currently selected are not valid for running this application.\nPlease select appropriate licenses by using the CATOptionsMgt tool (General/Licensing tab).";

//
// Dongle stuff
//

SP_InvalidVersion = "Incompatible version of hardware key";

SP_InvalidResponse = "Failed to communicate with hardware key";

SP_HasExpired = "The hardware key has expired";

SP_TimeSetBackward = "The clock has been set backward -- Please correct";

SP_CounterZero = "Number of utilizations has been exceeded";

SP_LicenseNotFound = "License not covered by hardware key";

SP_InternalError1 = "Hardware key internal error #1";

SP_InternalError2 = "Hardware key internal error #2";

//
// License Types
//
nodelock_or_concurrent = "nodelocked or concurrent";
nodelock = "nodelocked";
concurrent = "concurrent";
