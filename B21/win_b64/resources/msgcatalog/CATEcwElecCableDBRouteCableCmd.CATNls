//=============================================================================
//                                     CNEXT - CXR5
//                          COPYRIGHT DASSAULT SYSTEMES 2004 
//-----------------------------------------------------------------------------
// FILENAME    :    CATEcwElecCableDBRouteCableCmd.CATNls
// FRAMEWORK   :    ElectricalCableway
// AUTHOR      :    ttm
// DATE        :    October 2004
//------------------------------------------------------------------------------
// DESCRIPTION :    Resources File for NLS purpose related to Interactive
//                  Plant Ship Commands.
//                  
//------------------------------------------------------------------------------
// COMMENTS    :
//------------------------------------------------------------------------------
//MODIFICATION     user  date      purpose
//   HISTORY       ----  ----      -------
//------------------------------------------------------------------------------


//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
// DialogEngine state prompts 
//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
CATEcwElecCableDBRouteCableCmd.QueryCableOptionState.Message="Select method to query cables from the data base";
CATEcwElecCableDBRouteCableCmd.DisplayCableListState.Message="Select cables to perform operation";
CATEcwElecCableDBRouteCableCmd.DisplayEquipmentListState.Message="Select equipment to query cables connected to them";
CATEcwElecCableDBRouteCableCmd.ForbidNonPartialState.Message="Select node to forbid path";
CATEcwElecCableDBRouteCableCmd.ForbidPartialRouteFromState.Message="Select partial route From node";
CATEcwElecCableDBRouteCableCmd.ForbidPartialRouteToState.Message="Select partial route To node";
CATEcwElecCableDBRouteCableCmd.DisplayCableListResultState.Message="Select cable to highlight path";
CATEcwElecCableDBRouteCableCmd.RecommendNonPartialState.Message="Select node in the order of the recommended path";
CATEcwElecCableDBRouteCableCmd.RecommendPartialRouteFromState.Message="Select partial route From node";
CATEcwElecCableDBRouteCableCmd.RecommendPartialRouteToState.Message="Select partial route To node";
CATEcwElecCableDBRouteCableCmd.DisplayCableListPRSelFromState.PartialRoute="Select where to partial route FROM";
CATEcwElecCableDBRouteCableCmd.DisplayCableListPRSelToState.PartialRoute="Select where to partial route TO";
CATEcwElecCableDBRouteCableCmd.DisplayCableListPRSelFromState.DeleteSubsetOfRoute="Select highlighted object to delete FROM";
CATEcwElecCableDBRouteCableCmd.DisplayCableListPRSelToState.DeleteSubsetOfRoute="Select highlighted object to delete TO";
CATEcwElecCableDBRouteCableCmd.GetCablesOnNwkObjectNonPartialState.Message="Select node to select cables going through node";
CATEcwElecCableDBRouteCableCmd.GetCablesOnNwkObjectPartialRouteFromState.Message="Select node to select cables going through node";
CATEcwElecCableDBRouteCableCmd.GetCablesOnNwkObjectPartialRouteToState.Message="Select node to select cables going through node";
CATEcwElecCableDBRouteCableCmd.DisplaySchematicListState.Message="Select Schematic work packages to manage cables";
CATEcwElecCableDBRouteCableCmd.AnalyzeCableState.Message="Select a cable to analyze";
CATEcwElecCableDBRouteCableCmd.RouteReportTitle = "Electrical Cable Database Route Cable Report";
CATEcwElecCableDBRouteCableCmd.PartialRouteReportTitle = "Electrical Cable Database Partial Route Cable Report";
CATEcwElecCableDBRouteCableCmd.ValidateReportTitle = "Electrical Cable Database Validate Cable Report";
CATEcwElecCableDBRouteCableCmd.DeleteReportTitle = "Electrical Cable Database Delete Cable Report";
CATEcwElecCableDBRouteCableCmd.FromExtraLengthReportTitle = "Electrical Cable Database Update From Equipment Extra Length Report";
CATEcwElecCableDBRouteCableCmd.ToExtraLengthReportTitle = "Electrical Cable Database Update To Equipment Extra Length Report";
CATEcwElecCableDBRouteCableCmd.LoadCableDataReportTitle = "Electrical Cable Database Load Cable Data Report";
CATEcwElecCableDBRouteCableCmd.LockCableReportTitle = "Electrical Cable Database Lock Cable Report";
CATEcwElecCableDBRouteCableCmd.UnLockCableReportTitle = "Electrical Cable Database Unlock Cable Report";
CATEcwElecCableDBRouteCableCmd.CompletePartialReportTitle = "Electrical Cable Database Complete Route Report";
CATEcwElecCableDBRouteCableCmd.InitializationReportTitle = "Network errors:             ";
CATEcwElecCableDBRouteCableCmd.SummaryReportTitle = "Summary:                          ";
CATEcwElecCableDBRouteCableCmd.CablePullReportTitle = "Cable Path                        ";
CATEcwElecCableDBRouteCableCmd.CableListStatusTitle1 = "#";
CATEcwElecCableDBRouteCableCmd.CableListStatusTitle2 = "Cable";
CATEcwElecCableDBRouteCableCmd.CableListStatusTitle3 = "Status";
CATEcwElecCableDBRouteCableCmd.CableListStatusTitle4 = "Schematic";
CATEcwElecCableDBRouteCableCmd.ErrorRequestTitle = "Operation:  ";
CATEcwElecCableDBRouteCableCmd.ErrorDiagnosticTitle = "Diagnostic: ";
CATEcwElecCableDBRouteCableCmd.ErrorAdviseTitle = "Advise:     ";
CATEcwElecCableDBRouteCableCmd.Violated = "Violated";
CATEcwElecCableDBRouteCableCmd.NotChecked = "Not Checked";
CATEcwElecCableDBRouteCableCmd.OK = "OK";
CATEcwElecCableDBRouteCableCmd.None = "None";
CATEcwElecCableDBRouteCableCmd.NotValidated = "Not Validated";
CATEcwElecCableDBRouteCableCmd.RuleViolated = "Rule Violated";
CATEcwElecCableDBRouteCableCmd.NoViolations = "No Violations";
CATEcwElecCableDBRouteCableCmd.Overridden = "Overridden";
NodeID = "Node: \t/P1";
WP = "Work Package: \t/P1";
Position = "Position: \t/P1, /P2, /P3";
Classification = "Classification: \t/P1";
SegregationCode = "Segregation Code: \t/P1";
GrowthFactor = "Growth Factor: \t/P1";
CablewayHeight1 = "Cableway Height1: \t/P1";
CablewayHeight2 = "Cableway Height2: \t/P1";
CablewayHeight3 = "Cableway Height3: \t/P1";
CablewayHeight4 = "Cableway Height4: \t/P1";
CablewayHeight5 = "Cableway Height5: \t/P1";
CablewayWidth = "Cableway Width: \t/P1";
Diameter = "Diameter: \t/P1";
MinBendRadius = "Minimum Bend Radius: \t/P1";
MaxLength = "Maximum Length: \t/P1";
WeightPerLength = "Weight per unit length: \t/P1";
CableIDAndStatusAndSchematic = "Cable: \t/P1,\tStatus: \t/P2,\tSchematic: \t/P3";
CableIDAndSchematic = "Cable: \t/P1 \tSchematic: \t/P2";
CableIDAndStatus = "Cable: \t/P1 \tStatus: \t/P2";
FromPort = "From Equipment: /P1";
ToPort = "To Equipment: /P1";
SchematicID = "Schematic: \t/P1";
CableLength = "   Cable Length: \t/P1";
CableCategory = "Cable Category: \t/P1";
Tightness = "Tightness: \t/P1";
MainKeystationFalse = "Main key station: False";
MainKeystationTrue = "Main key station: True";
CableLengthNoBlank = "Cable Length: \t/P1";
NodeAndWPAndPercentFill = "Work Package: \t/P1, \tPass through: \t/P2, \tPercent Fill: \t/P3 %";
PercentFill = "Percent Fill: \t/P1 %";
ReportDate = "Date:  \t/P1";
ReportTime = "Time:  \t/P1";
ErrorObject = "Error with object:  \t/P1";
WarningObject = "Warning for object:  \t/P1";
CATHgrRack = "Rack Style Hanger";
CATHgrWaterTightCblPn = "Water Tight Penetration";
CATHgrNonWaterTightCblPn = "Non-Water Tight Penetration";
ArrSpatialPart = "Loft Section";
NumberOfSelectedCables = "Number of selected cables:  \t/P1";
CATEcwElecCableDBRouteCableCmd.ErrContextNotSet.Message = 
"Error: Work package context not set.\n
In order to route or validate cables using the\n
Electrical database you must first set the\n
work package context.  In the VPM Navigator work bench\n
use the Set work package Context command.";
CATEcwElecCableDBRouteCableCmd.ErrExitCommand.Message = 
"Error: Automatic disconnect from Enovia occurred.
Cached data may not be consistent if disconnect while writing
to Enovia.  If this has occurred reset the context
after reconnecting to Enovia.";
CATEcwElecCableDBRouteCableCmd.Title.Message = "Manage Cables";
CATEcwElecCableDBRouteCableCmd.InvalidSelectionTitle.Message = "Invalid selection";
CATEcwElecCableDBRouteCableCmd.ErrContextHasNoCableway.Message = 
"Warning: Work package context has no cableway elements.\n
You will not be able to route or validate cables.\n
Electrical database you must first set the\n
work package context.  In the VPM Navigator work bench\n
use the Set work package Context command.";
CATEcwElecCableDBRouteCableCmd.ErrNoSchematicWP.Message = 
"Error: No schematic work packages found in current context.\n
In order to route or validate cables using the\n
Electrical database you must first include all of the\n
schematic work packages defined for the configuration.\n
In the VPM Navigator work bench use the Set work package\n
Context command.";
CATEcwElecCableDBRouteCableCmd.ErrNoEquipmentFound.Message = 
"Error: No equipment found in current context.\n
In order to route or validate cables using the\n
Electrical database you must first include all of the\n
equipment work packages defined for the configuration.\n
In the VPM Navigator work bench use the Set work package\n
Context command.";
CATEcwElecCableDBRouteCableCmd.ErrNoCablesFound.Message = 
"Error: No cables found in current context.\n
In order to route or validate cables using the\n
Electrical database you must first include all of the\n
schematic work packages defined for the configuration.\n
In the VPM Navigator work bench use the Set work package\n
Context command.";
CATEcwElecCableDBRouteCableCmd.ErrFatalError.Message=
"Fatal error has occurred.\n
Request:    /p1 \n
Diagnostic: /p2 \n
Advise:     /p3";
CATEcwElecCableDBRouteCableCmd.ErrCannotSelectPartialFromTo.Message = 
"Error: Cannot select Partial route From or To object.\n
Selection will be ignored.";
CATEcwElecCableDBRouteCableCmd.ErrCannotSelectRecommendObject.Message = 
"Error: Cannot select a recommend object.\n
Selection will be ignored.";
CATEcwElecCableDBRouteCableCmd.ErrCannotSelectForbidObject.Message = 
"Error: Cannot select a forbid object.\n
Selection will be ignored.";
CATEcwElecCableDBRouteCableCmd.ErrCannotSelectPartialMiddle.Message = 
"Error: Cannot select in the middle of a partial route.\n
You may select the ends of a partial route.\n
Selection will be ignored.";
CATEcwElecCableDBRouteCableCmd.NoLoadedCablesText.Message = 
"There are no loaded cables to filter panel.\n
Use load cable from database first.";
CATEcwElecCableDBRouteCableCmd.AllCablesLoadedText.Message = 
"Nothing to filter since all cables are loaded.";
CATEcwElecCableDBRouteCableCmd.ErrMustSelectPartsOfRoute.Message = 
"Error: Selection is not part of the cable route.\n
In order to delete part of the cable route,\n
selection must be part of the current highlighted route.\n
Selection will be ignored.";
CATEcwElecCableDBRouteCableCmd.ErrMustSelectNodeOfSameSubRoute.Message = 
"Error: Selection is part of a discontiguous partial route.
The From and To selection must belong to the same highlighted
path with no breaks between them.
Select OK to accept selection and reset the other From/To selection or
Select Cancel to ignore selection.";
CATEcwElecCableDBRouteCableCmd.NoDBConnectionText.Message="You are disconnected from the database.\nPlease reconnect before using this command.";
CATEcwElecCableDBRouteCableCmd.From.Message = "From";
CATEcwElecCableDBRouteCableCmd.To.Message = "To";
RC_FailedToValidate ="Failed to validate";
RC_FailedToValidateLongHelp ="Unable to validate the route of the selected cable correctly";
RC_InvalidBendRadius ="Invalid cableway bendradius";
RC_InvalidBendRadiusLongHelp ="The bendradius of the routed cableway exceeds the cable's requirement";
RC_HgrOverloaded ="The cableway element is overloaded";
RC_HgrOverloadedLongHelp ="The Percentage Fill plus the Growth Factor of the cableway element is greater than 1.0";
RC_InvalidRoute ="Invalid route";
RC_InvalidRouteLongHelp ="No cable is found in the cableway element";
RC_RouteValidated ="Full route validated";
RC_RouteValidatedLongHelp ="No rule violation is found in the selected cable route";
RC_PartRouteValidated ="Partial route validated";
RC_PartRouteValidatedLongHelp ="No rule violation is found in the selected cable subroute";
RC_RouteRuleViolated ="Rule violated";
RC_RouteRuleViolatedLongHelp ="Rule violation is found in the cable route";
RC_RouteRulesViolated ="Rules violated";
RC_RouteRulesViolatedLongHelp ="Rule violations are found in the cable route";
RC_RouteIsIncomplete ="Route is incomplete";
RC_RouteIsIncompleteLongHelp ="The extremities of the cable are not found in the route";
RC_RouteIsBroken ="Route is broken";
RC_RouteIsBrokenLongHelp ="The routed cableway objects are not all connected";
RC_DeleteFailed ="Failed to delete the cable route ";
RC_DeleteFailedLongHelp ="Unable to delete the route for the selected cable";
RC_DeleteKOCableNotLoaded ="Cable route data must be loaded before it can be deleted ";
RC_DeleteKOCableNotLoadedLongHelp ="Cable route data must be loaded before it can be deleted ";
RC_DeleteKOEffInconsistent ="Cannot partially delete cable route that is in Effectivity Inconsistent status.  ";
RC_DeleteKOEffInconsistentLongHelp ="Run the Validate Route function to fix the effectivity inconsistency before deleting the route.  ";
RC_CableNotRouted ="Cable not routed ";
RC_CableNotRoutedLongHelp ="The cable is not routed";
RC_Undefined ="Undefined";
RouteStatus_CableLoaded ="Loaded";
RC_UndefinedLongHelp ="No cable routes found";
RC_Full ="Fully Routed";
RC_FullLongHelp ="Cable is fully routed";
RC_Partial ="Partially Routed";
RC_PartialLongHelp ="Cable is partially routed";
RC_CableCategory ="The cableway element is not compatible with the cable";
RC_CableCategoryLongHelp ="The cableway element and the cable have different Cable Category property values";
RouteStatus_Undefined = "Not Routed";
RouteStatus_Full = "Fully Routed";
RouteStatus_Partial = "Partially Routed";
RouteStatus_NeedValidate = "Need Validate";
RouteStatus_Broken = "Broken Route";
RouteStatus_CompletePartial = "Complete Route";
RouteStatus_OutOfDate = "Out Of Date";
RouteStatus_EffectivityInconsistent = "Effectivity Inconsistent";
RouteStatus_OutOfContext_Full = "Out Of Context - Fully Routed";
RouteStatus_OutOfContext_Partial = "Out Of Context - Partially Routed";
RouteStatus_OutOfContext_CompletePartial = "Out Of Context - Complete Routed";
RouteStatus_OutOfContext_Broken = "Out Of Context - Broken Route";
RouteStatus_Locked ="Locked";
RouteStatus_UnLocked ="Unlocked";
RC_RouteFailed ="Unable to route";
RC_RouteFailedLongHelp ="Unable to find a valid path between the From and To objects to route";
RC_RouteFailed2 ="Unable to route";
RC_RouteFailed2LongHelp ="Unable to perform the operation -- see the following for more information ";
RC_RouteSecurityFailed ="Unable to route";
RC_RouteSecurityFailedLongHelp ="Failed to pass the security validation check for the cable ";
RC_DeleteOK ="Route deleted";
RC_DeleteOKLongHelp ="The route is deleted for the selected cable";
RC_UpdatePerFillFailed ="Route deleted but percent fill is not updated";
RC_UpdatePerFillFailedLongHelp ="The route is deleted for the selected cable but the percent fill of the cableway is not updated correctly. To fix the problem, just exit the command, reset the context, and start again.";
RC_UpdateInternalFailed ="Route deleted but the internal data may not be updated correctly";
RC_UpdateInternalFailedLongHelp ="The route is deleted for the selected cable but the internal data of the cable is not updated correctly. To fix the problem, just exit the command, reset the context, and start again.";
RC_SubRouteNotFound ="Subroute is not found";
RC_SubRouteNotFoundLongHelp ="Unable to delete.  The subroute is not found in the selected cable.";
RC_PartNotValidate ="Partial route not validated";
RC_PartNotValidateLongHelp ="All subroutes of the cable need to be validated prior to the partial route operation.";
RC_CableWaterTight ="The cable penetration's type(Water Tight) is not compatible with the cable";
RC_CableWaterTightLongHelp ="Only water tight cable can route to a water tight cable penetration.";
RC_WPOutOfContext ="Unable to validate the cable that is in Out Of Context status";
RC_WPOutOfContextLongHelp ="The impacted workpackages(Cableway and Equipment) of the cable need to be in the current context for the Validate command to work correctly.";
RC_PartialRouteOnly ="Unable to change the cable status to Complete Route\t";
RC_PartialRouteOnlyLongHelp ="The cable has to be in Partial Route status prior to the operation";
RC_CompletePartialOK ="Partial route completed";
RC_CompletePartialOKLongHelp ="The cable route status is changed to Completed Route";
RC_CompletePartialFailed ="Failed to complete the partial route\t";
RC_CompletePartialFailedLongHelp ="Unable to change the cable status to Complete Route";
RC_CompletePartialOK2 ="The cable is already in Complete Route status\t ";
RC_CompletePartialOK2LongHelp ="The cable is currently in Complete Route status";
RC_PRInternalError ="Unable to complete the partial route for the cable correctly due to the internal error";
RC_PRInternalErrorLongHelp ="Internal errors are encountered during the process of the cable.";
RC_InternalError ="Unable to validate the cable correctly due to the internal error";
RC_InternalErrorLongHelp ="Internal errors are encountered during the validation process of the cable.";
RC_HashTableError ="Unable to validate the cable correctly due to the internal hash data error";
RC_HashTableErrorLongHelp ="Internal data errors are encountered during the validation process of the cable.";
RC_SecurityCheckFailed ="Operation security check failed -- the logon user is not authorized for the selected operation";
RC_SecurityCheckFailedLongHelp ="The logon user does not have the permission to perform the operation. ";
RC_DeleteRouteNodeFailed ="Failed to delete the selected nodes from the route";
RC_DeleteRouteNodeFailedLongHelp ="The selected nodes do not belong to the same subroute";
RC_DeleteUnRouteNodeFailed ="Failed to delete the selected nodes from the route";
RC_DeleteUnRouteNodeFailedLongHelp ="The selected nodes do not belong to the cable route";
RC_DeleteRouteNodeOK ="Route node deleted";
RC_DeleteRouteNodeOKLongHelp ="The selected nodes are deleted for the cable";
RC_DeleteSubRouteNodeFailed ="Unable to delete the selected nodes from the route ";
RC_DeleteSubRouteNodeFailedLongHelp ="Failed to pass the security validation check for the cable";
Lock_OK ="The cable locked";
Lock_OKLongHelp ="The cable is locked successfully.";
Lock_By_Current ="The cable locked";
Lock_By_CurrentLongHelp ="The cable is already locked by the current user.";
UnLock_OK ="The cable unlocked";
UnLock_OKLongHelp ="The cable is unlocked successfully.";
UnLock_Not_Lock ="The cable is not locked";
UnLock_Not_LockLongHelp ="The cable is already unlocked.";
Lock_Failed ="Failed to lock the cable";
Lock_FailedLongHelp ="The cable cannot be locked.";
UnLock_Failed ="Failed to unlock cable";
UnLock_FailedLongHelp ="The cable cannot be unlocked.";
ExtraLenStatus_OK ="Adjust extra length operation succeeded\t";
ExtraLenStatus_OKLongHelp ="The extra length data of the cable has been updated.";
ExtraLenStatus_Fail ="Adjust extra length operation failed\t";
ExtraLenStatus_FailLongHelp ="Unable to adjust the extra length data for the cable.";
ArcID = "Segment: \t/P1";
ArcNode1ID = "Segment Start Node: \t/P1 ";
ArcNode2ID = "Segment   End Node: \t/P1 ";
ObjectHasNoTypeAndID = "The selected Segment Object has no Type or ID in the Electrical Database, Analyze the connected Nodes for more information";
CheckSegForPercentFill = "PercentFill : Analyze relevant connected Segment for more information";
CheckSegForCableCategory = "CableCategory : Analyze relevant connected Segment for more information";
CheckSegForGrowthFactor = "GrowthFactor : Analyze relevant connected Segment for more information";
CheckSegForCablewayHeight1 = "Cableway Height : Analyze relevant connected Segment for more information";
CheckSegForCablewayWidth = "Cableway Width : Analyze relevant connected Segment for more information";
CheckSegForCablewayDiameter = "Cableway Diameter : Analyze relevant connected Segment for more information";
CablewayDiameter= "Cableway Diameter: \t/P1";
