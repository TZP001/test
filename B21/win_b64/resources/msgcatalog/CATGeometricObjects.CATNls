//------------------------------------------------------
// Resource file for input geometric operators errors 
// En_EN
//================================================================
//                           INPUT
//================================================================
//----------------------------------Null or invalid input
//
GeoObInInvalidPointer =
     "The /p1 pointer is null.";
//
GeoObInInvalidInput =
     "/p1 is negative.";
//
GeoObInInvalidSupport =
     "/p1 is not a valid type for a CATPCurve support.";
//
GeoObInInvalidInputValueSmallerThan =
     "The /p1 value must be smaller than /p2.";
//
GeoObInInvalidInputValueGreaterThan =
     "The /p1 value must be greater than /p2.";
//
GeoObInInvalidInputValueBetween =
     "The /p1 value must be greater than /p2 and smaller than /p3.";
//
GeoObInInvalidInputType =
     "The /p1 object has not an allowed type.";
//
GeoObInNotInInfiniteBox =
     "The /p1 is larger than the infinite box.";
//
GeoObInTypeNotSupported =
     "The /p1 must be a /p2.";
//
GeoObInEmpty =
     "The /p1 object does not contain any /p2 object.";
//
GeoObInInvalidCoordinates =
     "The input coordinates (/p1, /p2, /p3) are different from the previous one (/p4, /p5, /p6).";
//
GeoObInNotOnSurface =
     "The input point (/p1, /p2, /p3) is not close enough from the surface.";
//
GeoObInInvalidMacroElement =
     "An input composite geometric object contains several 3D-components.";
//
GeoObInImpossibleMerge =
     "Impossible to merge the curves. They do not have an enough large common zone.";
//
GeoObInInvalidSurface =
     "Surfaces with degenerated normals are not allowed.";
//
GeoObInCannotBeReferredTo =
     "An input object must be a CGM object that is in the same container than the refering CGM object.";
//
GeoObInOpenEquation =
     "Cannot modify an object while its equation is open.
      Close the equation before using this object.";
//
GeoObInInvalidOrientation =
     "The orientation value must be 1 or -1.";
//
GeoObInSeveralObjects =
     "Illegal attempt to put into a /p1, a /p2 that is already belonging to a /p3";
//
GeoObInNotBelongToEdgeCurve =
     "The specified CATCurve must belong to the CATEdgeCurve.
       Check the CATEdgeCurve contend with the Next method.";
//
GeoObInSeveralInEdgeCurve =
     " The input CATCurve already belongs to a CATEdgeCurve
       A CATCurve cannot be several times within an CATEdgeCurve.
       Check the CATEdgeCurve using the NextThru method before adding new curves.";
//
GeoObInCloudOfPointsNotDefined =
     "Illegal attempt to set a vector value for a CloudOfPoints with no vector defined.";
//
//GeoObInSelfIntersectingSurface =
//    "Surface is self-intersecting. This /p1 surface cannot have /p2 /p3.";
//
GeoObInPointNotOnSurface =
     "The point (/p1,/p2,/p3) does not lie on this /p4.";
//
GeoObInBadOrder =
     "Arguments are put in a bad order. /p1 must follow /p2.";
//
GeoObInInvalidPeriodicConflict =
     "The interval length /p1 is incompatible with the period /p2.";
//================================================================
//                           INTernal
//================================================================
// 
GeoObIntUnavailableMethod =
     "The /p1 method for the /p2 object is not available yet.";
//
GeoObIntBindingFailed =
     "Binding of /p1 implementation to /p2 interface failed.
      Check the dictionary.";
//
GeoObIntObjectCreationFailed =
     "The object of class /p1 cannot be created.";
//
GeoObIntMethodCallOrder =
     "Invalid methods calls order. The method /p1 should be called after /p2.";
//
GeoObIntInvalidParameterValue =
     "The numerical value for a parameter is outside the valid range.";
//
GeoObIntObjectClass =
     "No class can be matched to the object type value /p1.";
//
GeoObIntShouldBeA =
     "Invalid type of object, the /p1 should be a /p2.";
//
GeoObIntMethodCall =
     "The method /p1 should not be called for this object /p2.";
//
GeoObIntNotValuableParameter =
     "A parameter on a curve (CATCrvParam) or on a surface (CATSurParam) is not associated with a geometric object.";
//
GeoObIntGetLimitsOnEmptyBox =
     "The method /p1 assumes that the /p2 is not empty. 
      Use the method IsEmpty to ensure that the /p2 is not empty";
//
GeoObIntSurfaceProjectionFailed =
     "The point ( /p1 , /p2 , /p3 ) cannot be projected on the surface.";
//
GeoObIntUnavailableResult =
     "Unavailable result of multiple evaluation.
      The result /p1 of a multiple evaluation asked to a /p2 operator has not been ordered previously by the SetCommand method.";
//
GeoObIntUnsetObject =
     "The /p1 is not set yet. Initialize first this object";
//
GeoObIntBadGeometry =
       "An internal error /p1 leads to a bad geometrical configuration.";
//
GeoObIntMath =
       "Error /p1 in the mathematical package.";
//
GeoObIntCurveToSmall =
       "The curve is too small.";
//
GeoObIntArcOfCurveToSmall = 
       "The arc number /p1 of the curve is too small.";
//
GeoObIntCurveNotC2 =
       "The curve is not of class C2 at the beginning of the arc /p1.";
//
GeoObIntNullTangentCurve =
       "The curve has a too small tangent at global parameter w=/p1.";
//
GeoObIntBadParametrization =
       "The parameterization of the curve is too far from its curvilinear parameterization.";
//
GeoObIntCurvatureTooLarge =
       "The curvature of the curve is too large at global parameter w=/p1.";
//
GeoObIntCanonicalCurveDefTooFar =
       "A definition point of the curve is outside the limits of the geometric model.";
//
GeoObIntCanonicalCurveDegenerated =
       "The canonical curve has a degenerated form.";
//
GeoObIntControlPointsTooClose =
       "Some control points are too close to each other.";
//
GeoObIntGapTooLarge= "A too large gap was detected on an edge curve .";
//
//------------------- New
//
//  1000-1099- general
//  1100-1149- cone
//  1150-1199- torus
//  1200-1249- Cl[ou]d entities
//  1900-1999- Internal Error (general)
//
GeoObInParameterOutsideLimits_ERR_1000.Request ="Parameter evaluation:";
GeoObInParameterOutsideLimits_ERR_1000.Diagnostic ="The input parameter is outside the curve or surface maximum limits.";
GeoObInParameterOutsideLimits_ERR_1000.Advice ="- Choose a parameter inside the limits.";
//
GeoObInDegeneratedSurface_ERR_1001 ="The input surface is degenerated:\n
it can be twisted or one of its lengths is smaller than the factory resolution for example.\n
Please refer to the encyclopedia for admissible cases. ";
//
GeoObInIncompatibleLimitAngles_ERR_1002.Request ="Circle creation:";
GeoObInIncompatibleLimitAngles_ERR_1002.Diagnostic ="The start angle value is larger than the end angle value.";
GeoObInIncompatibleLimitAngles_ERR_1002.Advice="Choose a start value smaller than the end value.";
//
GeoObInNotSimilitude_ERR_1003.Request ="Geometry move:";
GeoObInNotSimilitude_ERR_1003.Diagnostic ="The input transformation is not a similitude.";
GeoObInNotSimilitude_ERR_1003.Advice="Choose a similitude to transform the geometry.";
//
GeoObInCurveTooSmall_ERR_1004.Request ="Use of curve:";
GeoObInCurveTooSmall_ERR_1004.Diagnostic ="The input curve length is smaller than the geometry factory resolution.";
GeoObInCurveTooSmall_ERR_1004.Advice ="- Choose a curve with length greater than the geometry factory resolution.";
//
GeoObInSurfaceTooSmall_ERR_1005.Request ="Use of surface:";
GeoObInSurfaceTooSmall_ERR_1005.Diagnostic ="The input surface dimensions are smaller than the geometry factory resolution.";
GeoObInSurfaceTooSmall_ERR_1005.Advice ="- Choose a surface with dimensions greater than the geometry factory resolution.";
//
//
GeoObInIncompatibleFactoryModelSize_ERR_1006.Request ="Incompatible geometric model size :";
GeoObInIncompatibleFactoryModelSize_ERR_1006.Diagnostic = "The documents have incompatible model size /P1 and /P2.";
GeoObInIncompatibleFactoryModelSize_ERR_1006.Advice ="- Do not try copy paste with documents of incompatible geometric tolerances.";
//
GeoObInIncompatibleFactoryInfinite_ERR_1007.Request ="Incompatible geometric infinite:";
GeoObInIncompatibleFactoryInfinite_ERR_1007.Diagnostic = "The documents have incompatible infinite /P1 and /P2.";
GeoObInIncompatibleFactoryInfinite_ERR_1007.Advice ="- Do not try copy paste with documents of incompatible geometric tolerances.";
//
GeoObInIncompatibleFactoryTolerances_ERR_1008.Request ="Incompatible geometric tolerances:";
GeoObInIncompatibleFactoryTolerances_ERR_1008.Diagnostic =
"The geometric tolerances of two documents are not compatible.\n
Units compared are  /P1 and /P2 in meter.\n
Continuity resolutions are /P3 and /P4 in unit.\n
Tangency resolutions are /P5 and /P6 in radian.\n
Curvature resolutions are /P7 and /P8 in unit.\n";
GeoObInIncompatibleFactoryTolerances_ERR_1008.Advice ="- Work with documents with same geometric tolerances.";
//
//
GeoObInDownwardStreamImpossible_ERR_1009.Request ="Impossible downward compatibility:";
GeoObInDownwardStreamImpossible_ERR_1009.Diagnostic ="The document of current version /P1 can not be saved in older version /P2 without damage due to /P3.";
GeoObInDownwardStreamImpossible_ERR_1009.Advice ="- Work with current version of documents.";
//
//
GeoObInDegeneratedCurve_ERR_1010 ="The input curve is degenerated:\n
it can be twisted or its length is smaller than the factory resolution for example.\n
Please refer to the encyclopedia for admissible cases. ";
//
//
GeoObInIncompatibleModelSize_ERR_1011.Request ="Incompatible input geometric size with new factory :";
GeoObInIncompatibleModelSize_ERR_1011.Diagnostic = "The input geometric size /P1 is outside document model size /P2.";
GeoObInIncompatibleModelSize_ERR_1011.Advice ="- Do not try copy paste geometries which are outside target documents model size.";
//
//
GeoObInIncompatibleModelSize_ERR_1012.Request ="Unable to copy infinite geometry of this type";
GeoObInIncompatibleModelSize_ERR_1012.Diagnostic = "Infinite geometry of this type can not be transfered between factory of differents model size or infinite";
GeoObInIncompatibleModelSize_ERR_1012.Advice ="- Do not try copy paste infinite geometries of this type between incompatible factories.";
//
//
GeoObInIncompatibleModelSize_ERR_1013.Request ="No intersection with new model size";
GeoObInIncompatibleModelSize_ERR_1013.Diagnostic = "No intersection between infinite geometry and new model size /P1.";
GeoObInIncompatibleModelSize_ERR_1013.Advice ="- Do not try copy paste infinite geometries which are no intersection with new model size.";
//
GeoObInCurveTooSmall_ERR_1014.Request ="Use of curve:";
GeoObInCurveTooSmall_ERR_1014.Diagnostic ="The input curve length is smaller than the curve fitting's maximum deviation.";
GeoObInCurveTooSmall_ERR_1014.Advice ="- Choose a curve with length greater than the maximum deviation or set a smaller maximum deviation.";
//
//
//
//
GeoObInConeSelfIntersecting_ERR_1100.Request ="Cone creation:";
GeoObInConeSelfIntersecting_ERR_1100.Diagnostic ="The parameters defines a self-intersecting surface.";
GeoObInConeSelfIntersecting_ERR_1100.Advice ="- Decrease the cone angle and/or the rule length.";
//
//1150-torus
GeoObInTorusSelfIntersecting_ERR_1150.Request ="Torus creation:";
GeoObInTorusSelfIntersecting_ERR_1150.Diagnostic ="The parameters defines a self-intersecting surface.";
GeoObInTorusSelfIntersecting_ERR_1150.Advice =
"- Increase the major radius value; \n
- Decrease the minor angle value;\n
- Modify the definition of the relimiting angles on the minor circle.";
//
//1200- Cl[ou]d entities
GeoObInCldScanNotPlanar_ERR_1200.Request    = "Scan plane retreiving:" ;
GeoObInCldScanNotPlanar_ERR_1200.Diagnostic = "The scan is not planar." ;
GeoObInCldScanNotPlanar_ERR_1200.Advice     = "Use a planar scan." ;
GeoObInCldGridNoProbeAxis_ERR_1201.Request    = "Grid probe axis retreiving:" ;
GeoObInCldGridNoProbeAxis_ERR_1201.Diagnostic = "The grid has no probe axis." ;
GeoObInCldGridNoProbeAxis_ERR_1201.Advice     = "Use a grid with a probe axis." ;
GeoObInCldGridAddPoints_ERR_1202.Request    = "Adding points in a grid:" ;
GeoObInCldGridAddPoints_ERR_1202.Diagnostic = "The number of points differs from the initial one." ;
GeoObInCldGridAddPoints_ERR_1202.Advice     = "Define the same number of points." ;
GeoObInCldVectors_AddVector_ERR_1203.Request    = "Adding vectors:" ;
GeoObInCldVectors_AddVector_ERR_1203.Diagnostic = "The vector could not be added." ;
GeoObInCldVectors_AddVector_ERR_1203.Advice     = "The problem may be due to a lack of memory.\nDelete some objects or save your part and reopen it." ;
GeoObInCldVectors_Incoherence_ERR_1204.Request    = "Editing vectors:" ;
GeoObInCldVectors_Incoherence_ERR_1204.Diagnostic = "The coordinates of the origin and of the vectors have not the same address.\nOr a non-existent reference is asked." ;
GeoObInCldVectors_Incoherence_ERR_1204.Advice     = "In the second case, call corresponding methods." ;
// 
// 1900-1999- Internal Error (general)
//-----------------------------------------
//
GeoObIntValidObject_InvalidAddress_ERR_1920.Request ="Invalid geometrical pointer:";
GeoObIntValidObject_InvalidAddress_ERR_1920.Diagnostic ="The address of geometrical object /P1 is pointing to a invalid memory area.";
GeoObIntValidObject_InvalidAddress_ERR_1920.Advice ="Identify the scenarii and submit a maintenance correction request.";
//
GeoObIntValidObject_NotModelisation_ERR_1921.Request ="Invalid geometry:";
GeoObIntValidObject_NotModelisation_ERR_1921.Diagnostic ="Functionality is restricted to native geometry, /P1 is not authorized.";
GeoObIntValidObject_NotModelisation_ERR_1921.Advice ="Work with native implementation.";
//
GeoObIntValidObject_UnexpectedType_ERR_1922.Request ="Unexpected Geometrical Type:";
GeoObIntValidObject_UnexpectedType_ERR_1922.Diagnostic ="The geometrical object /P1 is a not of expected type /P2.";
GeoObIntValidObject_UnexpectedType_ERR_1922.Advice ="Work with appropriate type.";
//
GeoObIntValidObject_RemovedObject_ERR_1923.Request ="Removed Object:";
GeoObIntValidObject_RemovedObject_ERR_1923.Diagnostic ="The geometrical object /P1 is not useable any more.";
GeoObIntValidObject_RemovedObject_ERR_1923.Advice ="Work with alive objects.";
//
GeoObIntValidObject_IncompatibleContainer_ERR_1924.Request ="Incompatible Containers:";
GeoObIntValidObject_IncompatibleContainer_ERR_1924.Diagnostic ="Geometrical object /P1 and /P2 does not belong to the same container.";
GeoObIntValidObject_IncompatibleContainer_ERR_1924.Advice ="Work with the same geometrical factory.";
//
GeoObIntIncompatibleScale_SmallScaleContainer_ERR_1925.Request ="Geometric Container:";
GeoObIntIncompatibleScale_SmallScaleContainer_ERR_1925.Diagnostic ="Geometrical Container cannot be loaded because it contains data with a scale (Small Scale) different from current session.";
GeoObIntIncompatibleScale_SmallScaleContainer_ERR_1925.Advice ="Change scale of current session in Tools - Options - Parameters and Measure - Scale.";
//
GeoObIntIncompatibleScale_StandardScaleContainer_ERR_1926.Request ="Geometric Container:";
GeoObIntIncompatibleScale_StandardScaleContainer_ERR_1926.Diagnostic ="Geometrical Container cannot be loaded because it contains data with a scale (Standard Scale) different from current session.";
GeoObIntIncompatibleScale_StandardScaleContainer_ERR_1926.Advice ="Change scale of current session in Tools - Options - Parameters and Measure - Scale.";
//
GeoObIntIncompatibleScale_LargeScaleContainer_ERR_1927.Request ="Geometric Container:";
GeoObIntIncompatibleScale_LargeScaleContainer_ERR_1927.Diagnostic ="Geometrical Container cannot be loaded because it contains data with a scale (Large Scale) different from current session.";
GeoObIntIncompatibleScale_LargeScaleContainer_ERR_1927.Advice ="Change scale of current session in Tools - Options - Parameters and Measure - Scale.";
//
GeoObIntUnsolvedForeignGeometrySoftware_ERR_1930.Request ="Foreign Geometrical Software:";
GeoObIntUnsolvedForeignGeometrySoftware_ERR_1930.Diagnostic ="Geometrical Container cannot be loaded because it contains unsolved foreign geometrical software linked to Attribute /P1 of Domain /P2.";
GeoObIntUnsolvedForeignGeometrySoftware_ERR_1930.Advice ="Check RunTimeView with foreign addin .";
//
GeoObIntFrozen_ERR_1966="/P1 is not modifiable but /P2 operator tries to modify its definition.";
//
