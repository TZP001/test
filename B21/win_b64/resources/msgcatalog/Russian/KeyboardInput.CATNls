//
// ------------------------------------------------------------
// |
// |  NLS Message Catalog
// |  Framework: CATIAApplicationFrame
// |  Module : Search.m
// |
// ------------------------------------------------------------
//

// ------------------------------------------------------------
// | Special characters for Keyboard Input                  
// ------------------------------------------------------------
//
//  character to surround special characters
Quote                  = "'";


// ------------------------------------------------------------
// | Special names for Keyboard Input                  
// ------------------------------------------------------------
// For the following translations, the names of the commands, as well as the name for 
// the shortcuts MUST BE distinctive from each other. 
//
// In case of a clash, choose the name of the shortcut the shortest possible to be 
// differentiable
// Priority rule: The shortcut for Command has the highest priority level:
//   command -> c
//   color   -> col
// Priority rule: The shortcut for Search is independant from others:
//   search -> s
//   set    -> s
//
// Example: If 2 commands' names are plane and planification
//          choose plane and plani for the 2 associate shortcuts

//  no default prefix
None                  = "нет";
//  last entered prefix
Last                  = "введенный последним";

//  name to launch a command
Command               = "команда";
//  shortcut for this name
CommandShortcut       = "c";

//  name to launch a search through a favorite query
Favorite              = "избранное";
//  shortcut for this name
FavoriteShortcut      = "f";

//  string to characterize the name of an object 
Name                  = "Имя";
//  shortcut for this string
NameShortcut          = "n";

//  string to characterize the name of an object as shown in the specification tree (graph)
NameInGraph           = "Имя в графе";
//  shortcut for this string
NameInGraphShortcut   = "g";

//  string to characterize the type of an object 
Type                  = "тип";
//  shortcut for this string
TypeShortcut         = "t";

//  string to characterize the selection set of an object 
Set              = "Набор";
//  shortcut for this string
SetShortcut      = "s";

//  string to characterize the color of an object 
Color              = "Цвет";
//  shortcut for this string
ColorShortcut      = "col";
//
ProblemInColorQuery = "Значение </P1> недопустимо для атрибута Цвет.";

//  string to characterize the layer of an object 
Layer              = "Слой";
//  shortcut for this string
LayerShortcut      = "l";

//  string to characterize the dashed type of an object (line)
Dashed              = "Штриховая";
//  shortcut for this string
DashedShortcut      = "d";
//
ProblemInDashedQuery = "Значение </P1> недопустимо для атрибута Штриховая.";

//  string to characterize the thickness of an object (line)
Weight              = "Вес";
//  shortcut for this string
WeightShortcut      = "w";
//
ProblemInWeightQuery = "Значение </P1> недопустимо для атрибута Вес.";

//  string to characterize the symbol type of an object (point)
Symbol              = "Символ";
//  shortcut for this string
SymbolShortcut      = "symb";
//
ProblemInWeightQuery = "Значение </P1> недопустимо для атрибута Вес.";

// string to characterize the visibility of an object
Visibility             = "Видимость";
//  shortcut for this string
VisibilityShortcut     = "vis";

// Note for translation:
// The following couple of values is related to the visibility attribute of an object (from a data point of view).
// An object which has the "Visible" attribute may be visible but will not if one of its "parents" object is not visible.
// In other terms, Visible means "visualizable" and Hidden means "not visualizable",
// but users can have recorded theses values in favorite queries so one cannot change them.
Visible                = "Видимый";
Hidden                 = "Скрытый";

// Note for translation:
// The following couple of values is related to the visibility of an object (from the display point of view).
// An object is told "Shown" if it is shown on the screen: the object as well as each of its parents have the "Visible" attribute.
// An object is told "Invisible" if it is not shown on the screen: the object or any of its parents have the "Hidden" attribute.
Shown                  = "Отображаемый";
Invisible              = "Невидимый";
//
ProblemInVisibilityQuery = "Значение </P1> недопустимо для атрибута Видимость.";


// ------------------------------------------------------------
// | Special names for the definition of the context,
// | for a Search carried out from the Keyboard Input                  
// ------------------------------------------------------------
// Rules: They are the same as previously, but the shortcuts can be a little longer
// ------   (ie, bot for to bottom)

//  string to characterize a Search context being everywhere 
Everywhere              = "Везде";
//  shortcut for this Search context - Everywhere
EverywhereShortcut      = "все";

//  string to characterize a Search context in the element 
InElement               = "В /P1";
DefaultInElement        = "В элементе";
//  shortcut for this Search context - In the element
InElementShortcut       = "дюймы";

//  string to characterize a Search context from the element to the bottom
FromElement             = "От /P1 до конца";
DefaultFromElement      = "От элемента до конца";
//  shortcut for this Search context - From Element
FromElementShortcut     = "от";

//  string to characterize a Search context being from the last scope 
FromLastScope           = "С последней области поиска";
//  shortcut for this Search context - From Last Scope
FromLastScopeShortcut   = "сохранение";

//  string to characterize a Search context being from the selection 
FromSelection           = "От выбранных элементов";
//  shortcut for this Search context - From Selection
FromSelectionShortcut   = "sel";

//  string to characterize a Search context from the screen 
VisibleOnScreen         = "Отображаемые на экране";
//  shortcut for this Search context - Visible on screen
VisibleOnScreenShortcut = "scr";

//  string to characterize a Search context in the elements already found
InList             = "На основе результатов поиска";


// ------------------------------------------------------------
// | Special names for context options,
// | for a Search carried out from the Keyboard Input                  
// ------------------------------------------------------------

//  string to characterize the "Include Topology" context option 
TopologyShortcut      = "topo";
//  string to characterize the "Published elements only" context option 
PublicationsShortcut  = "pub";
//  string to characterize the "Deep Search" context option 
DeepSearchShortcut    = "deep";


// --------------------------------------------------------------------
// | Names of boolean for a Search carried out from the Keyboard Input                  
// --------------------------------------------------------------------
True  = "ИСТИНА";
False = "ЛОЖЬ";

//
// ------------------------------------------------------------
// |  Error Messages for  Power Input and Search command
// ------------------------------------------------------------
//
UnknownCommand     = "Неизвестная команда: ";
//
UnavailableCommand = "Недоступная команда: ";
//
UnknownWorkbench   = "Неизвестный модуль: ";
//
UnknownType        = "Неизвестный тип: ";
//
UnknownAttribute   = "Неизвестный атрибут: ";
//
UnknownColor       = "Неизвестный цвет: ";
//
WrongColorNumber   = "Недопустимый номер цвета: ";
//
WrongLayerNumber   = "Недопустимый номер слоя: ";
//
SyntaxError        = "Синтаксическая ошибка";
//
OddNumberOf        = "Нечетное количество: ";
//
MissingClosingParenthesis = "Отсутствует одна или несколько закрывающих скобок.";
//
MissingOpeningParenthesis = "Отсутствует одна или несколько закрывающих скобок.";
//
BeforeOpeningParenthesis = "После ( может быть только:\n\t\ta ( или оператор \n\t\tan.";
//
AfterOpeningParenthesis = "После ( не может быть :\n\t\tany ) или оператор \n\t\tany.";
//
BeforeClosingParenthesis = "После ) не может быть (. \nПеред ) не может быть оператор.";
//
AfterClosingParenthesis = "После ) может быть только:\n\t\ta ), но не оператор \n\t\ta и не разделитель \n\t\ta."; 
//
OperatorsPosition = "В конце или в начале строки не может быть операторов.";
//
DoubleOperator = "Два оператора не могут стоять рядом.";
//
MissingOperator = "Данный тип запроса должен содержать оператор.";
//
RefPRT = "Опорный элемент должен быть в механической детали.";
//
RefPBD = "Опорный элемент должен быть в теле детали или в гибридном теле.";
//
RefGST = "Опорный элемент должен быть в геометрическом наборе.";
//
RefOGS = "Опорный элемент должен быть в упорядоченном геометрическом наборе.";

//
// Error Panel Title
PowerInputMessage  = "Сообщение командной строки";
//
NoAttributeOnType = "У типа </P1> не должно быть особого атрибута.";
//
NoSuchAttributeOnType = "Атрибут </P1> не существует у объектов типа </P2>.";
//
ErrorIn = "Следующая строка недопустима: </P1>";
//
IntegerAttribute = 
"Атрибут целого типа. Удаление единицы измерения или
обозначения десятичных знаков в строке </P1>.";
//
RealAttribute = 
"Атрибут вещественного типа. Удаление обозначений 
единиц измерения в строке </P1>.";
//
BooleanAttribute = 
"Атрибут типа Логический. 
Допустимыми значениями могут быть только: /P1, /P2, /P3, /P4.";
//
DimensionedAttribute = 
"Атрибут размерного типа. 
Необходимо указать единицу измерения.";
//
WrongToleranceRange = 
"Неточный диапазон допусков. 
Первое значение должно быть меньше второго.";
//
WrongToleranceOperator = 
"При поиске с допуском 
допустимые операторы – только = и !=.";
//
CharacterString = "строка символов";
BooleanType     = "логический";
EnumerationType = "счетчик";
WrongOperatorForAttribute = 
"Атрибут </P1> относится к типу /P2, \nдля которого допустимыми операторами являются только = и !=.";
//
UserAttributeWarning = 
"Так как атрибут </P1> является пользовательским, 
запрос неверен.";
//
NoListOfPossibleValuesForEnumeration = "Невозможно получение списка возможных значений \nдля атрибута типа счетчик </P1>.";
InvalidValueForEnumeration = "Недопустимое значение </P1> введено \nдля атрибута типа счетчик </P2>.";


// ------------------------------------------------------------
// | Special names for Tools/Options,
// ------------------------------------------------------------

//  example : "c: as command:"
As                    = "как";

