// ERRORS DURING INITIALIZATION
Data.ErrCATInstallPath = "Параметр CATInstallPath не задан\n";
Data.ErrCATInstallPathNoPresent = "Неверный параметр CATInstallPath: Файл PRESENT не найден по указанному пути поиска\n";
Data.ErrPresent        = "Объект /p1 поврежден";
Data.ErrOpenPresent    = "Невозможно открыть /p1\n";
// ERRORS DURING COMMIT
Commit.ErrOpenSPK      ="Ошибка фиксации – невозможно открыть файл /p1: /p2";
Commit.ErrNoControl    ="Ошибка фиксации – файл /p1 не найден";
Commit.ErrOpenControl  ="Ошибка фиксации – невозможно открыть файл /p1: /p2";
// ERRORS DURING ROLLBACK
Rollback.ErrOpenSPK    ="Ошибка отката – невозможно открыть файл /p1: /p2";
Rollback.ErrNoControl  ="Ошибка отката – файл /p1 не найден";
Rollback.ErrOpenControl ="Ошибка отката – невозможно открыть файл /p1: /p2";
Rollback.ErrUpdatePresent="Ошибка отката – невозможно обновить файл /p1: /p2";
// ERRORS CHECK INTEGRITY
CheckIntegrity.ErrReinstallSPK="Некоторые из установленных компонентов относятся к неверному уровню.\nНеобходимо заново установить пакет обновлений /p1.";
CheckIntegrityCAA2="Недопустимый уровень построения для CAA2: /p1 – правильный уровень построения: /p2\n";
NeedInstallCAASPKn="Уровень /p1 пакета обновлений кода установлен. Теперь необходимо установить уровень CAA /p2 пакета обновлений\n";
NeedCommitRollbackCAASPKn="Перед установкой пакета обновлений CAA /p1 необходимо применить операцию фиксации или отката к пакету обновлений CAA /p2\n";
NeedInstallCommitCAASPKn="Уровень /p1 пакета обновлений кода установлен и зафиксирован; теперь необходимо установить и зафиксировать уровень /p2 пакета обновлений CAA\n";
NeedCommitCAASPKn="Уровень /p1 пакета обновлений кода установлен и зафиксирован; теперь необходимо зафиксировать уровень /p2 пакета обновлений CAA\n"; 
NeedRollbackCAASPKn="Установленный пакет обновлений кода уже не существует; теперь необходимо выполнить откат для уровня /p1 пакета обновлений CAA\n"; 
Need2RollbackCAASPKn="Необходимо выполнить откат для уровня /p1 пакета обновлений CAA\n"; 
CommitInterditCAASPKn="Уровень /p1 пакета обновлений кода установлен, но не зафиксирован, поэтому невозможно зафиксировать уровень /p2 пакета обновлений CAA\n";
// ERRORS CHECKPREREQS
CheckPrereqs.PrereqKONT ="Требуется Windows NT 4.0 с пакетом обновлений 4 или Windows 2000  \n";
CheckPrereqs.PrereqKOWIN ="Требуется Windows 95 (редакция 2 службы OEM) или более поздняя версия Windows 95\n";
CheckPrereqsOS_OK="\nПроверка уровня ОС: ОК \n";
CheckPrereqsOS_KO="\nПроверка уровня ОС: Сбой \n";
CheckProcessor_OK="Проверка процессора: ОК \n";
CheckProcessor_KO="Проверка процессора: Сбой \nПроцессор =/p1, Требуемый процессор =/p2\n";
CheckProcessorKO_Registry="Проверка процессора: Сбой (невозможно считывание некоторых ключей реестра; вероятная причина - недостаточно полномочий)\n";
CheckMemory_OK="Проверка памяти: ОК \n";
CheckMemory_KO="Проверка памяти: Сбой \nОбъем свободной памяти =/p1 байт, требуемый объем памяти =/p2 байт";
CheckNetworkAdapter_OK ="Проверка сетевого адаптера: ОК\n"; 
CheckNetworkAdapter_KO ="Проверка сетевого адаптера: Сбой\n";
CheckNetworkAdapter_1="Сеть не найдена\n";
CheckNetworkAdapter_2="Доступ к сети невозможен\n";
CheckNetworkAdapter_3="Сеть не распознана\n";
CheckNetworkAdapter_254= "Применяется сетевой адаптер Ethernet\n";
CheckNetworkAdapter_255="Применяется сетевой адаптер TokenRing\n";
CheckNetworkAdapter_unknown="Сетевой адаптер неизвестен\n";
CheckNetworkAdapter_problem="Сетевая ошибка = /p1\n";
CheckNetworkAdapter_Address="Сетевой адрес: /p1\n";
CheckOpenGL_OK ="Проверка OpenGL: ОК\n"; 
CheckOpenGL_KO ="Проверка OpenGL: Сбой\n";
CheckOpenGLVersion = "Версия OpenGL: /p1./p2\n";
CheckOpenGLWrongVersion ="Неверная версия OpenGL: /p1./p2\n";
CheckOpenGLRequiredVersion = "Требуемая версия OpenGL: /p1./p2\n";
CheckOpenGLNotfound= "Библиотека OpenGL32.dll не найдена\n";
CheckOpenGLProbleme= "Инициализация графической среды невозможна\n";
CheckOpenGLdefault= "Результат ошибки OpenGL = /p1\n";
CheckDLLs_OK="Проверка библиотек DLL: ОК \n";
CheckDLLs_KO="Проверка библиотек DLL: Сбой \n";
CheckDLLs_probleme="DLL /p1: Версия=/p2, требуемая версия=/p3";
CheckDLLs_Correct="DLL /p1: Правильная версия=/p2 \n";
GetLanguages.French="Французский";
GetLanguages.German="Немецкий";
GetLanguages.Italian="Итальянский";
GetLanguages.Japanese="Японский";
GetLanguages.Chinese="Упрощенный китайский";
GetLanguages.Korean="Корейский";
