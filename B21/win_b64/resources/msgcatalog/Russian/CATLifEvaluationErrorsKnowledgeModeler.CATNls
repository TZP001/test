ListEmpty="Невозможно выполнить операции в списке: Cписок пуст.";

UnableToGetItemIndexOutOfRange="Невозможно получить элемент из списка. Индекс /P1 вне пределов диапазона (должен находиться в диапазоне от 1 до /P2).";

ListItemNULL="Элемент списка с индексом /P1 не определен.";

UnableToReorder="Невозможно переместить элемент с текущей позицией /P1 в позицию /P2.";

UnableToCreateList="Невозможно создать список.";
UnableToAddItemToNewList="Невозможно добавить элемент с индексом /P1 к новому списку. Недопустимый объект: Убедитесь в том, что добавляемый элемент существует.";
NoItemToAddToNewList="Нет элементов для добавления к новому списку.";

SumIsNull="К сумме не добавлено ни одного элемента. Сумма равна 0.";

UnsetValueInOperation="Одно из значений, используемых в операции /P1, не задано.\nНевозможно предсказать результат.";

ResultOfOperationIsUnset="Результат операции /P1 не задан. Проверьте операцию.";

UnableToAddItemToList="Невозможно добавить элемент с индексом /P1 к списку. Недопустимый объект: Убедитесь в том, что добавляемый элемент существует.";
UnableToAddItemToListBecauseOfIndex="Невозможно добавить элемент к списку. Индекс /P1 вне пределов диапазона (должен находиться в диапазоне от 0 до /P2).";

UnableToInsertItemToList="Невозможно вставить элемент с индексом /P1 в список. Недопустимый объект: Убедитесь в том, что вставляемый элемент существует.";
UnableToInsertItemToListBecauseOfIndex="Невозможно вставить элемент в список. Индекс /P1 вне пределов диапазона (должен находиться в диапазоне от 1 до /P2).";

UnableToAppendItemToList="Невозможно добавить элемент в конец списка. Недопустимый объект: Убедитесь в том, что вставляемый элемент существует.";

UnableToSetItemToList="Невозможно задать в списке элемент с индексом /P1. Недопустимый объект: Убедитесь в том, что добавляемый элемент существует.";
UnableToSetItemToListBecauseOfIndex="Невозможно задать в списке элемент. Индекс /P1 вне пределов диапазона (должен находиться в диапазоне от 1 до /P2).";

UnableToRemoveItem="Невозможно удалить элемент с индексом /P1 из списка.";
UnableToRemoveItemFromListBecauseOfIndex="Невозможно удалить элемент из списка. Индекс /P1 вне пределов диапазона (должен находиться в диапазоне от 1 до /P2).";


UnableToRemoveAllItems="Невозможно очистить список.";

ErrorInComputeWrongTypeInItems="Неполадка при вычислении операции /P1: элемент /P2 не рассматривается, так как он не принадлежит к типу /P3.";
ErrorInComputeWrongType="Невозможно вычислить /P1: нет ссылки на тип /P2.";
ErrorInComputeCanNotBeEvaluated="Невозможно вычислить /P1: невозможно вычислить выражение (проверьте тип или синтаксис).";
BadOperatorInCompute="Оператор /P1 недоступен для метода Вычисление";
BadReturnedTypeInCompute="Тип /P1 рассчитанного значения не является авторизованным типом.  Методе расчета рассчитанное значение должно являться фактическим или линейным.";
BadOperatorInComputeForString="Оператор /P1 недоступен для метода Вычисление, если рассчитанное значение является линейным";





OperatorPowErrorCase1="Ошибка в операторе ** (возведение основания в указанную степень): если показатель является целым отрицательным числом, основание должно быть отличным от нуля.";
OperatorPowErrorCase2="Ошибка в операторе ** (возведение основания в указанную степень): если показатель является положительным вещественным числом, основание должно быть положительным.";
OperatorPowErrorCase3="Ошибка в операторе ** (возведение основания в указанную степень): если показатель является отрицательным вещественным числом, основание должно быть положительным (исключая 0).";


TraceIncorrectLevel="Неверный уровень трассировки. Уровень должен находиться в диапазоне от 1 до 9 (включая 1 и 9).";
TraceToCreateFile="Невозможно создать файл /P1.";
TraceUnableToManipulateFile="Запись в файл /P1 невозможна.";
TraceUnableToWriteInFile="Запись в файл /P1 невозможна. Проверьте наличие необходимых прав доступа к этому файлу/каталогу.";
TraceUnableToOpenFile="Невозможно открыть файл /P1. ";

Update2="Сбой при обновлении:\n/P1";
LineNumber="Строка /P1: ";
BadTypeError="Попытка повлиять на параметр типа /P1, где ожидается параметр типа /P2";


