//---------------------------------------------------
// Ressource File for CATPrtModelHeader Class
// En_US
//---------------------------------------------------

// == Pad == 

CATPrtModelHeader.PadHeader.Title="Призма...";
CATPrtModelHeader.PadHeader.Help="Создание призмы выдавливанием замкнутого или разомкнутого профиля.";
CATPrtModelHeader.PadHeader.LongHelp="Призма\nСоздание призмы на основе замкнутого \nили разомкнутого профиля.";
CATPrtModelHeader.PadHeader.ShortHelp="Призма";


// == Pocket == 

CATPrtModelHeader.PocketHeader.Title="Полость...";
CATPrtModelHeader.PocketHeader.Help="Создание полости удалением материала.";
CATPrtModelHeader.PocketHeader.LongHelp="Полость\nСоздание полости на основе профиля.";
CATPrtModelHeader.PocketHeader.ShortHelp="Полость";


// == Hole == 

CATPrtModelHeader.HoleHeader.Title="Отверстие...";
CATPrtModelHeader.HoleHeader.Help="Используется для создания отверстий различных типов: простых, конусовидных, цекованных, зенкованных и рассверленных.";
CATPrtModelHeader.HoleHeader.LongHelp="Используется для создания отверстий различных типов: простых, \nконусовидных, цекованных, зенкованных и \nрассверленных.";
CATPrtModelHeader.HoleHeader.ShortHelp="Отверстие";


// == Shaft == 

CATPrtModelHeader.ShaftHeader.Title="Тело вращения...";
CATPrtModelHeader.ShaftHeader.Help="Создание тела вращения путем поворота эскиза вокруг оси.";
CATPrtModelHeader.ShaftHeader.LongHelp="Тело вращения\nСоздание тела вращения путем \nповорота эскиза вокруг оси.";
CATPrtModelHeader.ShaftHeader.ShortHelp="Тело вращения";


// == Groove == 

CATPrtModelHeader.GrooveHeader.Title="Проточка...";
CATPrtModelHeader.GrooveHeader.Help="Создание проточки путем поворота эскиза вокруг оси.";
CATPrtModelHeader.GrooveHeader.LongHelp="Проточка\nСоздание проточки путем \nповорота эскиза вокруг оси.";
CATPrtModelHeader.GrooveHeader.ShortHelp="Проточка";


// == Stiffener == 

CATPrtModelHeader.CreateStiffener.Title="Элемент жесткости...";
CATPrtModelHeader.CreateStiffener.Help="Создание элемента жесткости.";
CATPrtModelHeader.CreateStiffener.LongHelp="Элемент жесткости\nСоздание элемента жесткости";
CATPrtModelHeader.CreateStiffener.ShortHelp="Элемент жесткости";


// == Slot == 

CATPrtModelHeader.SlotHeader.Title="Паз...";
CATPrtModelHeader.SlotHeader.Help="Создание паза путем сдвига профиля вдоль центральной кривой.";
CATPrtModelHeader.SlotHeader.LongHelp="Паз\nСоздание паза путем сдвига профиля \nвдоль центральной кривой.";
CATPrtModelHeader.SlotHeader.ShortHelp="Паз";


// == Rib == 

CATPrtModelHeader.CreateRib.Title="Ребро...";
CATPrtModelHeader.CreateRib.Help="Создание ребра путем сдвига профиля вдоль центральной кривой.";
CATPrtModelHeader.CreateRib.LongHelp="Ребро\nСоздание ребра путем сдвига профиля \nвдоль центральной кривой.";
CATPrtModelHeader.CreateRib.ShortHelp="Ребро";


// == Fillet == 

CATPrtModelHeader.FilletHeader.Title="Скругление кромки...";
CATPrtModelHeader.FilletHeader.Help="Создание скругления с помощью кромки.";
CATPrtModelHeader.FilletHeader.LongHelp="Скругление кромки\nПостроение скругления кромки.";
CATPrtModelHeader.FilletHeader.ShortHelp="Скругление кромки";


// == Fillet Variable == 

CATPrtModelHeader.FilletVariable.Title="Переменное скругление...";
CATPrtModelHeader.FilletVariable.Help="Создание скругления переменного радиуса.";
CATPrtModelHeader.FilletVariable.LongHelp="Скругление переменного радиуса\nЗадание скругления, радиус которого меняется \nв каждой выбранной точке.";
CATPrtModelHeader.FilletVariable.ShortHelp="Скругление переменного радиуса";


// == Fillet Face == 

CATPrtModelHeader.FilletFace.Title="Скругление между двумя гранями...";
CATPrtModelHeader.FilletFace.Help="Создание скругления между гранями путем выбора двух граней.";
CATPrtModelHeader.FilletFace.LongHelp="Скругление между гранями\nСоздание скругления между гранями.";
CATPrtModelHeader.FilletFace.ShortHelp="Скругление между двумя гранями";


// == Fillet Tritangent == 

CATPrtModelHeader.FilletTritangent.Title="Скругление с тройным касанием...";
CATPrtModelHeader.FilletTritangent.Help="Создание скругления путем удаления указанной грани.";
CATPrtModelHeader.FilletTritangent.LongHelp="Скругление с тройным касанием\nСоздание скругления с тройным касанием на основе \nтрех указанных граней.";
CATPrtModelHeader.FilletTritangent.ShortHelp="Скругление с тройным касанием";

// == Chordal Fillet == 

CATPrtModelHeader.ChordalFillet.Title="Скругление по хорде…";
CATPrtModelHeader.ChordalFillet.Help="Создание скругления путем задания ширины ленты скругления.";
CATPrtModelHeader.ChordalFillet.LongHelp="Скругление по хорде\nСоздание скругления по хорде путем \nопределения ширины скругления в каждой выбранной точке.";
CATPrtModelHeader.ChordalFillet.ShortHelp="Скругление по хорде";

// == Chamfer == 

CATPrtModelHeader.ChamferHeader.Title="Фаска...";
CATPrtModelHeader.ChamferHeader.Help="Создание фаски детали удалением или добавлением материала выбранной кромки.";
CATPrtModelHeader.ChamferHeader.LongHelp="Фаска\nСоздание фаски удалением или добавлением \nматериала выбранной кромки";
CATPrtModelHeader.ChamferHeader.ShortHelp="Фаска";


// == Draft == 

CATPrtModelHeader.DraftHeader.Title="Уклон...";
CATPrtModelHeader.DraftHeader.Help="Создание уклона.";
CATPrtModelHeader.DraftHeader.LongHelp="Угол уклона\nИспользуется для создания угла уклона.";
CATPrtModelHeader.DraftHeader.ShortHelp="Угол уклона";


// == Draft Reflect == 

CATPrtModelHeader.DraftReflect.Title="Линия отражения уклона...";
CATPrtModelHeader.DraftReflect.Help="Создание уклона из линий отражения.";
CATPrtModelHeader.DraftReflect.LongHelp="Линия отражения уклона\nСоздание уклона из линий отражения.";
CATPrtModelHeader.DraftReflect.ShortHelp="Линия отражения уклона";


// == Draft Variable == 

CATPrtModelHeader.DraftVariable.Title="Переменный уклон...";
CATPrtModelHeader.DraftVariable.Help="Создание уклона с переменным углом.";
CATPrtModelHeader.DraftVariable.LongHelp="Переменный уклон\nСоздание уклона с переменным углом.";
CATPrtModelHeader.DraftVariable.ShortHelp="Переменный уклон";


// == Advanced Draft BothSides == 

CATPrtModelHeader.DraftBothSides.Title="Сложный уклон";
CATPrtModelHeader.DraftBothSides.Help="Создание сложного двустороннего уклона.";
CATPrtModelHeader.DraftBothSides.LongHelp="Сложный уклон\nСоздание сложного двустороннего уклона.";
CATPrtModelHeader.DraftBothSides.ShortHelp="Сложный уклон";

// == Draft Both Sides (new) == 
CATPrtModelHeader.DraftBothSidesNew.Title="Двусторонний уклон...";
CATPrtModelHeader.DraftBothSidesNew.Help="Создание двустороннего уклона.";
CATPrtModelHeader.DraftBothSidesNew.LongHelp="Сложный уклон\nСоздание двустороннего уклона.";
CATPrtModelHeader.DraftBothSidesNew.ShortHelp="Двусторонний уклон";

// == Draft Analysis == 

CATPrtModelHeader.DraftAnalysisHeader.Title = "Анализ уклона";
CATPrtModelHeader.DraftAnalysisHeader.Help = "Анализ угла уклона выбранного тела или поверхности";
CATPrtModelHeader.DraftAnalysisHeader.LongHelp = 
"Анализ уклона
Наложение цветов на тела или поверхности в соответствии с
угловым значением расхождения между перпендикулярным вектором
и направлением уклона в каждой точке поверхности.";
CATPrtModelHeader.DraftAnalysisHeader.ShortHelp = "Анализ уклона";


// == Gaussian Curvature == 

CATPrtModelHeader.GaussCurvatureHeader.Title = "Анализ кривизны";
CATPrtModelHeader.GaussCurvatureHeader.Help = "Анализ Гауссовой кривизны выбранного тела или поверхности";
CATPrtModelHeader.GaussCurvatureHeader.LongHelp = 
"Гауссова кривизна
Наложение цветов на тела или поверхности
в соответствии со значением кривизны в каждой точке.";

CATPrtModelHeader.GaussCurvatureHeader.ShortHelp = "Анализ кривизны";


// == Thread/Tap analysis == 

CATPrtModelHeader.ThreadAnalysisHeader.Title = "Анализ наружной/внутренней резьбы";
CATPrtModelHeader.ThreadAnalysisHeader.Help = "Анализ всей наружной и внутренней резьбы текущей детали.";
CATPrtModelHeader.ThreadAnalysisHeader.LongHelp ="Анализ всей наружной и внутренней резьбы текущей детали \nВозможность отображения символической геометрии и \nчисловых характеристик.";
CATPrtModelHeader.ThreadAnalysisHeader.ShortHelp = "Анализ наружной/внутренней резьбы";


// == Shell == 

CATPrtModelHeader.ShellHeader.Title="Оболочка...";
CATPrtModelHeader.ShellHeader.Help="Создание оболочки путем указания одной или нескольких толщин.";
CATPrtModelHeader.ShellHeader.LongHelp="Оболочка\nСоздание оболочки путем указания одной или нескольких толщин.";
CATPrtModelHeader.ShellHeader.ShortHelp="Оболочка";


// == Thickness == 

CATPrtModelHeader.ThicknessHeader.Title="Толщина...";
CATPrtModelHeader.ThicknessHeader.Help="Добавление или удаление толщины.";
CATPrtModelHeader.ThicknessHeader.LongHelp="Толщина\nДобавление или удаление толщины к одной или нескольким граням.";
CATPrtModelHeader.ThicknessHeader.ShortHelp="Толщина";


// == RemoveFace == 

CATPrtModelHeader.RemoveFaceHeader.Title="Удаление грани...";
CATPrtModelHeader.RemoveFaceHeader.Help="Используется для удаления граней.";
CATPrtModelHeader.RemoveFaceHeader.LongHelp="Удаление грани\nИспользуется для удаления одной или нескольких граней.";
CATPrtModelHeader.RemoveFaceHeader.ShortHelp="Удаление грани";


// == Pattern Rectangular == 

CATPrtModelHeader.RectangularPatternHeader.Title="Прямоугольный шаблон...";
CATPrtModelHeader.RectangularPatternHeader.Help="Создание прямоугольного шаблона для повторения примитива.";
CATPrtModelHeader.RectangularPatternHeader.LongHelp="Прямоугольный шаблон\nСоздание прямоугольного шаблона для \nразмножения примитива проектирования детали.";
CATPrtModelHeader.RectangularPatternHeader.ShortHelp="Прямоугольный шаблон";


// == Pattern Circular == 

CATPrtModelHeader.CircularPatternHeader.Title="Круговой шаблон...";
CATPrtModelHeader.CircularPatternHeader.Help="Создание кругового шаблона для повторения примитива.";
CATPrtModelHeader.CircularPatternHeader.LongHelp="Круговой шаблон\nСоздание кругового шаблона для размножения \nпримитива проектирования детали.";
CATPrtModelHeader.CircularPatternHeader.ShortHelp="Круговой шаблон";


// == Pattern User == 

CATPrtModelHeader.UserPatternHeader.Title="Пользовательский шаблон...";
CATPrtModelHeader.UserPatternHeader.Help="Создание пользовательского шаблона, с тем чтобы размножить примитивы.";
CATPrtModelHeader.UserPatternHeader.LongHelp="Пользовательский шаблон\nСоздание пользовательского шаблона для \nразмножения примитива проектирования детали.";
CATPrtModelHeader.UserPatternHeader.ShortHelp="Пользовательский шаблон";


// == Mirror == 

CATPrtModelHeader.MirrorHeader.Title="Зеркало...";
CATPrtModelHeader.MirrorHeader.Help="Отражение тела относительно выбранной грани или плоскости.";
CATPrtModelHeader.MirrorHeader.LongHelp="Зеркало\nОтражение тела относительно выбранной \nграни или плоскости.";
CATPrtModelHeader.MirrorHeader.ShortHelp="Зеркало";


// == Split == 

CATPrtModelHeader.SplitHeader.Title="Рассечение...";
CATPrtModelHeader.SplitHeader.Help="Рассечение тела плоскостью, гранью или поверхностью.";
CATPrtModelHeader.SplitHeader.LongHelp="Рассечение\nРассечение тела плоскостью, гранью \nили поверхностью.";
CATPrtModelHeader.SplitHeader.ShortHelp="Рассечение";


// == Sewing == 

CATPrtModelHeader.SewSurfaceHeader.Title="Вшивание поверхности...";
CATPrtModelHeader.SewSurfaceHeader.Help="Вшивание грани или поверхности в тело.";
CATPrtModelHeader.SewSurfaceHeader.LongHelp="Вшивание поверхности\nВшивание грани или \nповерхности в тело.";
CATPrtModelHeader.SewSurfaceHeader.ShortHelp="Вшитая поверхность";


// == Replace Face / Align == 

CATPrtModelHeader.AlignHeader.Title="Замена грани...";
CATPrtModelHeader.AlignHeader.Help="Замена грани поверхностью.";
CATPrtModelHeader.AlignHeader.LongHelp="Замена грани\nЗамена грани поверхностью.";
CATPrtModelHeader.AlignHeader.ShortHelp="Замена грани";

// == CloseSurface == 

CATPrtModelHeader.CloseSurfaceHeader.Title="Замыкание поверхности...";
CATPrtModelHeader.CloseSurfaceHeader.Help="Замыкание поверхности.";
CATPrtModelHeader.CloseSurfaceHeader.LongHelp="Используется для замыкания поверхности.";
CATPrtModelHeader.CloseSurfaceHeader.ShortHelp="Замыкание поверхности";


// == Scaling == 

CATPrtModelHeader.ScalingHeader.Title="Масштабирование...";
CATPrtModelHeader.ScalingHeader.Help="Масштабирование тела с помощью точки, грани или плоскости.";
CATPrtModelHeader.ScalingHeader.LongHelp="Масштабирование\nМасштабирование тела до указанного размера.";
CATPrtModelHeader.ScalingHeader.ShortHelp="Масштабирование";


// == ThickSurface == 

CATPrtModelHeader.ThickSurfaceHeader.Title="Увеличение толщины поверхности...";
CATPrtModelHeader.ThickSurfaceHeader.Help="Используется для увеличения толщины поверхности путем указания двух толщин.";
CATPrtModelHeader.ThickSurfaceHeader.LongHelp="Увеличение толщины поверхности\nИспользуется для утолщения поверхности путем указания двух толщин.";
CATPrtModelHeader.ThickSurfaceHeader.ShortHelp="Увеличение толщины поверхности";


// == Thread == 

CATPrtModelHeader.ThreadHeader.Title="Наружная/внутренняя резьба...";
CATPrtModelHeader.ThreadHeader.Help="Создание наружной или внутренней резьбы.";
CATPrtModelHeader.ThreadHeader.LongHelp="Наружная/внутренняя резьба \nСоздание наружной или внутренней резьбы путем указания поддерживающего элемента, предела и числовых значений.";
CATPrtModelHeader.ThreadHeader.ShortHelp="Наружная/внутренняя резьба";


// == Translation == 

CATPrtModelHeader.TranslationHeader.Title="Перенос...";
CATPrtModelHeader.TranslationHeader.Help="Используется для переноса тела.";
CATPrtModelHeader.TranslationHeader.LongHelp="Используется для переноса тела в указанном направлении.";
CATPrtModelHeader.TranslationHeader.ShortHelp="Перенос";


// == Rotation == 

CATPrtModelHeader.RotationHeader.Title="Вращение...";
CATPrtModelHeader.RotationHeader.Help="Вращение тела.";
CATPrtModelHeader.RotationHeader.LongHelp="Используется для вращения тела вокруг указанной оси.";
CATPrtModelHeader.RotationHeader.ShortHelp="Поворот";


// == Symmetry == 

CATPrtModelHeader.SymmetryHeader.Title="Симметрия...";
CATPrtModelHeader.SymmetryHeader.Help="Отражение тела без дублирования относительно выбранной грани или поверхности.";
CATPrtModelHeader.SymmetryHeader.LongHelp="Симметрия\nОтражение тела без дублирования относительно \nвыбранной грани или поверхности.";
CATPrtModelHeader.SymmetryHeader.ShortHelp="Симметрия";

// == AxisToAxis == 

CATPrtModelHeader.AxisToAxisHeader.Title="Преобразование осей...";
CATPrtModelHeader.AxisToAxisHeader.Help="Преобразование осей используется для переноса тела с помощью опорной оси на целевую ось.";
CATPrtModelHeader.AxisToAxisHeader.LongHelp="Преобразование осей используется для переноса тела с помощью опорной оси на целевую ось.";
CATPrtModelHeader.AxisToAxisHeader.ShortHelp="Преобразование осей";

// == Affinity == 

CATPrtModelHeader.AffinityHeader.Title="Аффинное преобразование...";
CATPrtModelHeader.AffinityHeader.Help="Аффинное преобразование меняет и переносит согласно относительным значениям координат.";
CATPrtModelHeader.AffinityHeader.LongHelp="Аффинное преобразование меняет и переносит согласно относительным значениям координат.";
CATPrtModelHeader.AffinityHeader.ShortHelp="Аффинное преобразование";

// == MeasureBetween == 

CATPrtModelHeader.MeasureBetweenHeader.Title="Измерение между...";
CATPrtModelHeader.MeasureBetweenHeader.Help="Измерение между двумя элементами.";
CATPrtModelHeader.MeasureBetweenHeader.LongHelp="Измерение между двумя элементами.";
CATPrtModelHeader.MeasureBetweenHeader.ShortHelp="Измерение между";


// == MeasureItem == 

CATPrtModelHeader.MeasureItemHeader.Title="Измерение элемента...";
CATPrtModelHeader.MeasureItemHeader.Help="Используется для измерения элемента.";
CATPrtModelHeader.MeasureItemHeader.LongHelp="Используется для измерения элемента.";
CATPrtModelHeader.MeasureItemHeader.ShortHelp="Измерение элемента";


CATPrtModelHeader.BoolAssemble.Title="Сборка...";
CATPrtModelHeader.BoolAssemble.Help="Сборка выбранного тела с другим телом";
CATPrtModelHeader.BoolAssemble.ShortHelp="Сборка";
CATPrtModelHeader.BoolAssemble.LongHelp="Сборка/Сборка тела с другим телом";


CATPrtModelHeader.BoolAdd.Title="Добавление...";
CATPrtModelHeader.BoolAdd.Help="Добавление выбранного тела к другому телу.";
CATPrtModelHeader.BoolAdd.ShortHelp="Добавление";
CATPrtModelHeader.BoolAdd.LongHelp="Добавление/Добавление тела к другому телу";


CATPrtModelHeader.BoolIntersect.Title="Пересечение...";
CATPrtModelHeader.BoolIntersect.Help="Пересечение выбранного тела с другим телом";
CATPrtModelHeader.BoolIntersect.ShortHelp="Пересечение";
CATPrtModelHeader.BoolIntersect.LongHelp="Пересечение/Пересечение тела с другим телом";


CATPrtModelHeader.BoolTrim.Title="Обрезка при объединении...";
CATPrtModelHeader.BoolTrim.Help="Обрезка выбранного тела другим телом";
CATPrtModelHeader.BoolTrim.ShortHelp="Обрезка при объединении";
CATPrtModelHeader.BoolTrim.LongHelp="Обрезка при объединении/Обрезка выбранного тела другим телом";


CATPrtModelHeader.BoolRemoveLump.Title="Удаление фрагмента...";
CATPrtModelHeader.BoolRemoveLump.Help="Используется для удаления материала";
CATPrtModelHeader.BoolRemoveLump.ShortHelp="Удаление фрагмента";
CATPrtModelHeader.BoolRemoveLump.LongHelp="Удаление фрагмента/Удаление материала";


CATPrtModelHeader.BoolRemove.Title="Удаление...";
CATPrtModelHeader.BoolRemove.Help="Удаление выбранного тела из другого.";
CATPrtModelHeader.BoolRemove.ShortHelp="Удаление";
CATPrtModelHeader.BoolRemove.LongHelp="Удаление/Удаление тела из другого тела";


// == PositiveLoft == 

CATPrtModelHeader.PositiveLoftHeader.Title="Твердотельный лофт...";
CATPrtModelHeader.PositiveLoftHeader.Help="Создание твердотельного лофта.";
CATPrtModelHeader.PositiveLoftHeader.LongHelp="Твердотельный лофт\nСоздание твердотельного лофта.";
CATPrtModelHeader.PositiveLoftHeader.ShortHelp="Твердотельный лофт";


// == NegativeLoft == 

CATPrtModelHeader.NegativeLoftHeader.Title="Вычитаемый твердотельный элемент лофта...";
CATPrtModelHeader.NegativeLoftHeader.Help="Создание отрицательного твердотельного элемента лофта.";
CATPrtModelHeader.NegativeLoftHeader.LongHelp="Вычитаемый твердотельный элемент лофта\nСоздание отрицательного лофта.";
CATPrtModelHeader.NegativeLoftHeader.ShortHelp="Вычитаемый твердотельный элемент лофта";


// == PositiveBlend == 

CATPrtModelHeader.PositiveBlendHeader.Title="Сопряжение...";
CATPrtModelHeader.PositiveBlendHeader.Help="Создание положительного сопряжения.";
CATPrtModelHeader.PositiveBlendHeader.LongHelp="Сопряжение\nСоздание положительного сопряжения.";
CATPrtModelHeader.PositiveBlendHeader.ShortHelp="Сопряжение";


// == NegativeBlend == 

CATPrtModelHeader.NegativeBlendHeader.Title="Вычитаемое сопряжение...";
CATPrtModelHeader.NegativeBlendHeader.Help="Создание отрицательного сопряжения.";
CATPrtModelHeader.NegativeBlendHeader.LongHelp="Вычитаемое сопряжение\nСоздание отрицательного сопряжения.";
CATPrtModelHeader.NegativeBlendHeader.ShortHelp="Вычитаемое сопряжение";


// == PadDF == 

CATPrtModelHeader.PadDFHeader.Title="Скругленная призма с уклоном...";
CATPrtModelHeader.PadDFHeader.Help="Создание призмы с уклоном и скруглениями.";
CATPrtModelHeader.PadDFHeader.LongHelp="Призма\nСоздание призмы с уклоном и скруглениями.";
CATPrtModelHeader.PadDFHeader.ShortHelp="Скругленная призма с уклоном";


// == PocketDF == 

CATPrtModelHeader.PocketDFHeader.Title="Скругленная полость с уклоном...";
CATPrtModelHeader.PocketDFHeader.Help="Создание полости с уклоном и скруглениями.";
CATPrtModelHeader.PocketDFHeader.LongHelp="Полость\nСоздание полости с уклоном и скруглениями.";
CATPrtModelHeader.PocketDFHeader.ShortHelp="Скругленная полость с уклоном";


// == MultiPad == 

CATPrtModelHeader.MultiPadHeader.Title="Составная призма...";
CATPrtModelHeader.MultiPadHeader.Help="Создание составной призмы путем выдавливания многодоменного профиля.";
CATPrtModelHeader.MultiPadHeader.LongHelp="Составная призма\nСоздание составной призмы путем выдавливания многодоменного профиля.";
CATPrtModelHeader.MultiPadHeader.ShortHelp="Составная призма";


// == MultiPocket == 

CATPrtModelHeader.MultiPocketHeader.Title="Составная полость...";
CATPrtModelHeader.MultiPocketHeader.Help="Создание составной полости удалением материала.";
CATPrtModelHeader.MultiPocketHeader.LongHelp="Несколько полостей\nСоздание составной полости из многодоменного профиля.";
CATPrtModelHeader.MultiPocketHeader.ShortHelp="Составная полость";


// == PowerCopy and catalog ==

// == Templates Creation ==
//CATPrtModelHeader.PrtCreatePowerCopy.Title            = "PowerCopy Creation...";
//CATPrtModelHeader.PrtCreatePowerCopy.Help             = "Creates a PowerCopy";
//CATPrtModelHeader.PrtCreatePowerCopy.ShortHelp        = "PowerCopy Creation";
//CATPrtModelHeader.PrtCreatePowerCopy.LongHelp         = "Creates a PowerCopy";
// == Templates Insantiation ==
//CATPrtModelHeader.PrtInstanciatePowerCopy.Title            = "PowerCopy Instantiation...";
//CATPrtModelHeader.PrtInstanciatePowerCopy.Help             = "Instantiate a defined PowerCopy stored in a part";
//CATPrtModelHeader.PrtInstanciatePowerCopy.ShortHelp        = "PowerCopy Instantiation";
//CATPrtModelHeader.PrtInstanciatePowerCopy.LongHelp         = "Instantiate a defined PowerCopy stored in a part";
// == Udf Feature Save ==
//CATPrtModelHeader.PrtSaveInCatalog.Title                 = "PowerCopy Save in Catalog...";
//CATPrtModelHeader.PrtSaveInCatalog.Help                  = "Save PowerCopy in a catalog";
//CATPrtModelHeader.PrtSaveInCatalog.ShortHelp             = "PowerCopy Save in Catalog";
//CATPrtModelHeader.PrtSaveInCatalog.LongHelp              = "Save PowerCopy in a catalog";
// == Udf Feature Save ==


// ==== Point =====

CATPrtModelHeader.PrtPointHeader.Title                 = "Точка...";
CATPrtModelHeader.PrtPointHeader.Help                  = "Создание одной или нескольких точек";
CATPrtModelHeader.PrtPointHeader.ShortHelp             = "Точка";
CATPrtModelHeader.PrtPointHeader.LongHelp              = 
"Точка
Создание одной или нескольких точек.";


// ===== Line ======

CATPrtModelHeader.PrtLineHeader.Title                  = "Линия...";
CATPrtModelHeader.PrtLineHeader.Help                   = "Создание линии";
CATPrtModelHeader.PrtLineHeader.ShortHelp              = "Линия";
CATPrtModelHeader.PrtLineHeader.LongHelp               = 
"Линия
Создание линии.";


// == Plane == 

CATPrtModelHeader.PrtPlaneHeader.Title                 = "Плоскость...";
CATPrtModelHeader.PrtPlaneHeader.Help                  = "Создание плоскости";
CATPrtModelHeader.PrtPlaneHeader.ShortHelp             = "Плоскость";
CATPrtModelHeader.PrtPlaneHeader.LongHelp              = 
"Плоскость
Создание плоскости.";

// == InsertInNewBody == 
CATPrtModelHeader.SelFeatNewBody.Title="Вставить в новое тело";
CATPrtModelHeader.SelFeatNewBody.Help="Вставка выбранных примитивов в новое тело";
CATPrtModelHeader.SelFeatNewBody.ShortHelp="Вставить в новое тело";
CATPrtModelHeader.SelFeatNewBody.LongHelp="Вставка выбранных примитивов в новое тело";

// == SolidCombine == 

CATPrtModelHeader.SolidCombineHeader.Title="Твердотельное комбинирование...";
CATPrtModelHeader.SolidCombineHeader.Help="Используется для создания твердотельного элемента пересечения путем выдавливания двух разомкнутых или замкнутых профилей.";
CATPrtModelHeader.SolidCombineHeader.LongHelp="Твердотельное комбинирование\nИспользуется для создания твердотельного элемента пересечения путем выдавливания двух разомкнутых или замкнутых профилей.";
CATPrtModelHeader.SolidCombineHeader.ShortHelp="Твердотельное комбинирование";

// == AddPosition == 
CATPrtModelHeader.PrtPositionImportCom.Title="Добавление положения...";
CATPrtModelHeader.PrtPositionImportCom.Help="Добавление оси и изменение порядка преобразований, следующих за импортом";
CATPrtModelHeader.PrtPositionImportCom.ShortHelp="Добавление положения";
CATPrtModelHeader.PrtPositionImportCom.LongHelp="Добавление оси и изменение порядка преобразований, следующих за импортом";

// == Auto Fillet == 

CATPrtModelHeader.AutoFilletHeader.Title="Автоскругление...";
CATPrtModelHeader.AutoFilletHeader.Help="Автоматическое построение скруглений.";
CATPrtModelHeader.AutoFilletHeader.LongHelp="Автоскругление\nАвтоматическое построение скруглений.";
CATPrtModelHeader.AutoFilletHeader.ShortHelp="Автоматическое скругление";

// == Technological Results ==
CATPrtModelHeader.CreateTROutputHdr.Title="Создать технологические результаты";
CATPrtModelHeader.CreateTROutputHdr.Help="Создание примитива технологических результатов";
CATPrtModelHeader.CreateTROutputHdr.LongHelp="Создание примитива технологических результатов";
CATPrtModelHeader.CreateTROutputHdr.ShortHelp="Технологические результаты";

CATPrtModelHeader.ResetDeletedTRHdr.Title="Восстановление удаленных технологических результатов";
CATPrtModelHeader.ResetDeletedTRHdr.Help="Восстановление удаленных технологических результатов";
CATPrtModelHeader.ResetDeletedTRHdr.LongHelp="Включение возможности повторного создания технологических результатов";
CATPrtModelHeader.ResetDeletedTRHdr.ShortHelp="Восстановление удаленных технологических результатов";

// == Mean Dimensions == 
CATPrtModelHeader.MeanDimensions.Title     = "Средние размеры";
CATPrtModelHeader.MeanDimensions.ShortHelp = "Средние размеры";
CATPrtModelHeader.MeanDimensions.Help      = "Вычисление средних размеров";
CATPrtModelHeader.MeanDimensions.LongHelp  = "Вычисление средних размеров по параметрам допусков.";

// == Wall Thickness Analysis  == 
CATPrtModelHeader.WallThicknessAnalysisHeader.Title     = "Анализ толщины стенки";
CATPrtModelHeader.WallThicknessAnalysisHeader.Help      = "Анализ толщин текущей детали";
CATPrtModelHeader.WallThicknessAnalysisHeader.LongHelp  = "Анализ толщины текущих деталей. \nВозможность отображения символической геометрии \nи числовых характеристик.";
CATPrtModelHeader.WallThicknessAnalysisHeader.ShortHelp = "Анализ толщины стенки";

// == Auto Fillet == 

CATPrtModelHeader.AutoDraftHeader.Title="Автоуклон...";
CATPrtModelHeader.AutoDraftHeader.Help="Автоматическое построение уклона.";
CATPrtModelHeader.AutoDraftHeader.LongHelp="Автоуклон\nАвтоматическое построение уклона.";
CATPrtModelHeader.AutoDraftHeader.ShortHelp="Автоматический уклон";

// == LMG Sketch == 

CATPrtModelHeader.LMGSketchHeader.Title="Эскиз LMG ...";
CATPrtModelHeader.LMGSketchHeader.Help="Создание эскиза LMG.";
CATPrtModelHeader.LMGSketchHeader.LongHelp="Эскиз LMG\nСоздание эскиза LMG.";
CATPrtModelHeader.LMGSketchHeader.ShortHelp="Эскиз LMG ...";

// == Dynamic Sectioning  == 
CATPrtModelHeader.DynamicSectioningHeader.Title     = "Динамическое сечение";
CATPrtModelHeader.DynamicSectioningHeader.Help      = "Создайте разрез текущей детали при помощи операции динамического сечения";
//CATPrtModelHeader.DynamicSectioningHeader.LongHelp  = "Cut the current part by a dynamic section. \nProvides capability to manipulate a section in the 3D\nand cut the view of the part.";
CATPrtModelHeader.DynamicSectioningHeader.ShortHelp = "Динамическое сечение";

