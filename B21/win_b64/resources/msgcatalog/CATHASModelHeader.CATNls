//---------------------------------------------------
// Ressource File for CATHASModelHeader Class
// En_US
//---------------------------------------------------

// == Healing Assistant+
// =================================================
// Insert Geometrical Set
// ========================================================================================
// == GSMBody Insert == 
CATHASModelHeader.HASCreateGSMBody.Title            = "Geometrical Set...";
CATHASModelHeader.HASCreateGSMBody.Help             = "Creates an Geometrical Set";
CATHASModelHeader.HASCreateGSMBody.ShortHelp        = "Geometrical Set";
CATHASModelHeader.HASCreateGSMBody.LongHelp         = 
"Geometrical Set
Creates an geometrical set.";

// =================================================
// Insert Linear Geometrical Set
// ========================================================================================
// == ShapeBody Insert == 
//CATHASModelHeader.HASCreateShapeBody.Title		= "Linear Geometrical Set...";
//CATHASModelHeader.HASCreateShapeBody.Help			= "Creates an Linear Geometrical Set";
//CATHASModelHeader.HASCreateShapeBody.ShortHelp	= "Linear Geometrical Set";
//CATHASModelHeader.HASCreateShapeBody.LongHelp		= 
//"Linear Geometrical Set
//Creates an linear Geometrical set.";

// =================================================
// ToolBar Check Topologique
// =================================================
// == Local Check Topologique  == 
CATHASModelHeader.HASCheckTopo.Title				= "Face Checker ...";
CATHASModelHeader.HASCheckTopo.Help					= "Performs a topological check on faces";
CATHASModelHeader.HASCheckTopo.ShortHelp			= "Face Checker";
CATHASModelHeader.HASCheckTopo.LongHelp				= 
"Face Checker
Sorts input surfaces into different open bodies
according to topological check criteria.";

// == Oriented Faces  == 
CATHASModelHeader.HASOrientedFaces.Title			= "Face Orientation ...";
CATHASModelHeader.HASOrientedFaces.Help				= "Display the face orientation";
CATHASModelHeader.HASOrientedFaces.ShortHelp		= "Face Orientation";
CATHASModelHeader.HASOrientedFaces.LongHelp			= 
"Face Orientation
Displays the face orientation.";

// =================================================
// ToolBar Check Geometry
// =================================================
// == ConnectChecker == 
CATHASModelHeader.HASConnectChecker.Title			= "Surface Connection Checker...";
CATHASModelHeader.HASConnectChecker.Help			= "Checks surface connections";
CATHASModelHeader.HASConnectChecker.ShortHelp		= "Surface Connection Checker";
CATHASModelHeader.HASConnectChecker.LongHelp		= 
"Surface Connection Checker
Performs a distance,
angle, or curvature analysis
between several surfaces.";

// == Part Comparison  == 
CATHASModelHeader.HASPartCompare.Title			= "Compare Parts...";
CATHASModelHeader.HASPartCompare.Help			= "Compares parts";
CATHASModelHeader.HASPartCompare.ShortHelp		= "Compare Parts";
CATHASModelHeader.HASPartCompare.LongHelp		= 
"Compare Parts
Compares two parts in a double window and keeps comparison result.";

// == Review Comparison  == 
CATHASModelHeader.GVCReviewPartCompare.Title			= "Compare & Review...";
CATHASModelHeader.GVCReviewPartCompare.Help			= "Compares & Review";
CATHASModelHeader.GVCReviewPartCompare.ShortHelp		= "Compare & Review";
CATHASModelHeader.GVCReviewPartCompare.LongHelp		= 
"Compares two parts and creates a Review.";

// == Review New Area  == 
CATHASModelHeader.GVCReviewNewArea.Title			= "Create a new Modification...";
CATHASModelHeader.GVCReviewNewArea.Help			= "Create a new Modification";
CATHASModelHeader.GVCReviewNewArea.ShortHelp		= "Create a new Modification";
CATHASModelHeader.GVCReviewNewArea.LongHelp		= 
"Creates a new Modification feature. Then user can move geometries inside it.";

// == Review Annotations  == 
CATHASModelHeader.GVCReviewAnnotText.Title			= "Text annotation";
CATHASModelHeader.GVCReviewAnnotText.Help			= "Creates a new Text annotation";
CATHASModelHeader.GVCReviewAnnotText.ShortHelp		= "Text annotation";
CATHASModelHeader.GVCReviewAnnotText.LongHelp		= 
"Creates a new Text annotation.";

CATHASModelHeader.GVCReviewAnnotDistance.Title			= "Distance annotation";
CATHASModelHeader.GVCReviewAnnotDistance.Help			= "Creates a new Distance annotation";
CATHASModelHeader.GVCReviewAnnotDistance.ShortHelp		= "Distance annotation";
CATHASModelHeader.GVCReviewAnnotDistance.LongHelp		= 
"Creates a new Distance annotation.";

CATHASModelHeader.GVCReviewAnnotDeviation.Title			= "Deviation annotation";
CATHASModelHeader.GVCReviewAnnotDeviation.Help			= "Creates a new Deviation annotation";
CATHASModelHeader.GVCReviewAnnotDeviation.ShortHelp		= "new Deviation annotation";
CATHASModelHeader.GVCReviewAnnotDeviation.LongHelp		= 
"Creates a new Deviation annotation.";

// == CurveConnectChecker (nouvelle commande polyvalente)== 
CATHASModelHeader.HASCurveConnectChecker.Title		= "Connect Checker Analysis...";
CATHASModelHeader.HASCurveConnectChecker.Help		= "Performs a connection analysis";
CATHASModelHeader.HASCurveConnectChecker.ShortHelp	= "Connect Checker Analysis";
CATHASModelHeader.HASCurveConnectChecker.LongHelp	= 
"Connect Checker Analysis
Checks connections between surfaces/curves
and measures G0, G1, G2 and G3 deviations.";

// =================================================
// ToolBar Repair Topology 
// =================================================
// == GlobalJoin == 
CATHASModelHeader.HASGlobalJoin.Title               = "Join...";
CATHASModelHeader.HASGlobalJoin.Help                = "Joins curves or surfaces";
CATHASModelHeader.HASGlobalJoin.ShortHelp           = "Join";
CATHASModelHeader.HASGlobalJoin.LongHelp            = 
"Join
Joins curves or surfaces.";

// == LocalJoin == 
CATHASModelHeader.HASLocalJoin.Title               = "Local Join...";
CATHASModelHeader.HASLocalJoin.Help                = "Merges input edges";
CATHASModelHeader.HASLocalJoin.ShortHelp           = "Local Join";
CATHASModelHeader.HASLocalJoin.LongHelp            = 
"Local Join
Merges a set of user-defined edges
and heals surfaces.";


// =================================================
// ToolBar Repair Geometry
// =================================================
// == GlobalHealing == 
CATHASModelHeader.HASGlobalHealing.Title            = "Healing...";
CATHASModelHeader.HASGlobalHealing.Help             = "Heals surfaces";
CATHASModelHeader.HASGlobalHealing.ShortHelp        = "Healing";
CATHASModelHeader.HASGlobalHealing.LongHelp         = 
"Healing
Heals surfaces by filling in small gaps between the surfaces.";

// == LocalHealing == 
CATHASModelHeader.HASLocalHealing.Title				= "Local Healing...";
CATHASModelHeader.HASLocalHealing.Help				= "Heals surfaces locally";
CATHASModelHeader.HASLocalHealing.ShortHelp			= "Local Healing";
CATHASModelHeader.HASLocalHealing.LongHelp			= 
"Local Healing
Heals surfaces by filling in small gaps.";

// == Improved Face Boundary == 
CATHASModelHeader.HASImprovedFaces.Title			= "Face Smooth...";
CATHASModelHeader.HASImprovedFaces.Help				= "Smoothes the boundary of faces";
CATHASModelHeader.HASImprovedFaces.ShortHelp		= "Face Smooth";
CATHASModelHeader.HASImprovedFaces.LongHelp			=
"Face Smooth
Modifies boundaries to obtain G0, G1 or G2 quality 
and reduce the number of curves.";

// == CurveSmooth == 
CATHASModelHeader.HASCurveSmooth.Title              = "Curve Smooth...";
CATHASModelHeader.HASCurveSmooth.Help               = "Smoothes a curve";
CATHASModelHeader.HASCurveSmooth.ShortHelp          = "Curve Smooth";
CATHASModelHeader.HASCurveSmooth.LongHelp           =
"Curve Smooth
Smoothes tangency and curvature discontinuities of a curve under given thresholds.";

// =================================================
// ToolBar Shape Analysis
// =================================================
// == ApproxManager == 
CATHASModelHeader.HASApproxManager.Title            = "Converter Wizard...";
CATHASModelHeader.HASApproxManager.Help             = "Converts an existing curve or surface";
CATHASModelHeader.HASApproxManager.ShortHelp        = "Converter Wizard";
CATHASModelHeader.HASApproxManager.LongHelp         = 
"Converter Wizard
Converts a curve or a surface into NUPBS depending
on the tolerance or according to a specified 
order or maximum number of segments.";

// == PorcupineCurvatureAnalysis == 
CATHASModelHeader.HASPCurvatureAnalysis.Title		= "Porcupine Curvature Analysis...";
CATHASModelHeader.HASPCurvatureAnalysis.Help		= "Displays a porcupine analysis";
CATHASModelHeader.HASPCurvatureAnalysis.ShortHelp	= "Porcupine Curvature Analysis";
CATHASModelHeader.HASPCurvatureAnalysis.LongHelp	= 
"Porcupine Curvature Analysis
Analyses the curvature of a set of curves
using a porcupine representation.";

// =================================================
// ToolBar Generic Tools
// =================================================
// == GeomInfo == 
CATHASModelHeader.HASGeomInfo.Title                 = "Geometric Information...";
CATHASModelHeader.HASGeomInfo.Help                  = "Gives geometric information on a selected face/edge";
CATHASModelHeader.HASGeomInfo.ShortHelp             = "Geometric Information";
CATHASModelHeader.HASGeomInfo.LongHelp              = 
"Geometric Information
Gives geometric information on a selected face/edge.";

// == DressUp == 
CATHASModelHeader.HASDressUp.Title					= "Apply Dress-up ...";
CATHASModelHeader.HASDressUp.Help					= "Applies chosen dress-up options";
CATHASModelHeader.HASDressUp.ShortHelp				= "Apply Dress-up";
CATHASModelHeader.HASDressUp.LongHelp				= 
"Apply Dress-up
Applies the pre-defined dress-up options
to the selected elements.";

// == DressUpUndo == 
CATHASModelHeader.HASDressUpUndo.Title				= "Remove Dress-up...";
CATHASModelHeader.HASDressUpUndo.Help				= "Removes chosen visualization options";
CATHASModelHeader.HASDressUpUndo.ShortHelp			= "Remove Dress-up";
CATHASModelHeader.HASDressUpUndo.LongHelp			= 
"Remove Dress-up
Removes the pre-defined visualization options
from the selected elements.";

// == GeoBoundary == 
CATHASModelHeader.HASGeoBoundary.Title				= "Apply Boundary Options...";
CATHASModelHeader.HASGeoBoundary.Help				= "Applies chosen boundary options";
CATHASModelHeader.HASGeoBoundary.ShortHelp			= "Apply Boundary Options";
CATHASModelHeader.HASGeoBoundary.LongHelp			= 
"Apply Boundary Options
Applies display options on surface boundary
to the selected elements.";

// == GeoBoundaryUndo == 
CATHASModelHeader.HASGeoBoundaryUndo.Title			= "Remove Boundary Options...";
CATHASModelHeader.HASGeoBoundaryUndo.Help			= "Removes chosen boundary options";
CATHASModelHeader.HASGeoBoundaryUndo.ShortHelp		= "Remove Boundary Options";
CATHASModelHeader.HASGeoBoundaryUndo.LongHelp		= 
"Remove Boundary Options
Removes display options on the surface boundary 
from the selected elements.";

// == BorderEdgesMode == 
CATHASModelHeader.HASBorderEdgesMode.Title			= "Surface Boundaries...";
CATHASModelHeader.HASBorderEdgesMode.Help			= "Displays the surface boundaries";
CATHASModelHeader.HASBorderEdgesMode.ShortHelp		= "Surface Boundaries";
CATHASModelHeader.HASBorderEdgesMode.LongHelp		= 
"Surface Boundaries
Changes topological display on the surface boundaries.";

// =================================================
// ToolBar Wireframe
// =================================================
// == Point == 
CATHASModelHeader.HASPoint.Title                    = "Point...";
CATHASModelHeader.HASPoint.Help                     = "Creates one or more points";
CATHASModelHeader.HASPoint.ShortHelp                = "Point";
CATHASModelHeader.HASPoint.LongHelp                 = 
"Point
Creates one or more points.";

// == MultiplePoint == 
CATHASModelHeader.HASMultiplePoint.Title            = "Points and Planes Repetition...";
CATHASModelHeader.HASMultiplePoint.Help             = "Repeats several times the creation of points or planes";
CATHASModelHeader.HASMultiplePoint.ShortHelp        = "Points and Planes Repetition";
CATHASModelHeader.HASMultiplePoint.LongHelp         = 
"Points & Planes Repetition :
Creates several instances of points and planes at a time.";

// == Line == 
CATHASModelHeader.HASLine.Title                     = "Line...";
CATHASModelHeader.HASLine.Help                      = "Creates a line";
CATHASModelHeader.HASLine.ShortHelp                 = "Line";
CATHASModelHeader.HASLine.LongHelp                  = 
"Line
Creates a line.";

// == Plane == 
CATHASModelHeader.HASPlane.Title                    = "Plane...";
CATHASModelHeader.HASPlane.Help                     = "Creates a plane";
CATHASModelHeader.HASPlane.ShortHelp                = "Plane";
CATHASModelHeader.HASPlane.LongHelp                 = 
"Plane
Creates a plane.";

// == Project == 
CATHASModelHeader.HASProject.Title                  = "Projection...";
CATHASModelHeader.HASProject.Help                   = "Projects a point or curve onto a supporting element";
CATHASModelHeader.HASProject.ShortHelp              = "Projection";
CATHASModelHeader.HASProject.LongHelp				= 
"Projection
Projects a point or curve onto a support element.";

// == Intersect== 
CATHASModelHeader.HASIntersect.Title		    	= "Intersection...";
CATHASModelHeader.HASIntersect.Help				    = "Creates geometry by intersecting two geometric elements";
CATHASModelHeader.HASIntersect.ShortHelp		    = "Intersection";
CATHASModelHeader.HASIntersect.LongHelp			    = 
"Intersection
Creates geometry by intersecting 
two geometric elements.";

// == Connect Curve == 
CATHASModelHeader.HASConnect.Title                  = "Connect Curve...";
CATHASModelHeader.HASConnect.Help                   = "Creates a connecting curve between two curves";
CATHASModelHeader.HASConnect.ShortHelp              = "Connecting Curve";
CATHASModelHeader.HASConnect.LongHelp               = 
"Connect Curve
Creates a connecting curve between two curves
taking continuity constraints into account.";

// =================================================
// ToolBar Surface
// =================================================
// == Fill == 
CATHASModelHeader.HASFill.Title				    	= "Fill...";
CATHASModelHeader.HASFill.Help				    	= "Creates a filled surface inside a closed boundary";
CATHASModelHeader.HASFill.ShortHelp			    	= "Fill";
CATHASModelHeader.HASFill.LongHelp			    	= 
"Fill
Creates a fill surface inside a closed boundary.";

// ToolBar Operations
// =================================================
// == UnTrim == 
CATHASModelHeader.HASUnTrim.Title                   = "UnTrim...";
CATHASModelHeader.HASUnTrim.Help                    = "Untrims trimmed surfaces and curves";
CATHASModelHeader.HASUnTrim.ShortHelp               = "Untrim";
CATHASModelHeader.HASUnTrim.LongHelp                = 
"Untrim
Untrims previously trimmed
surfaces and curves.";

// == Disassemble == 
CATHASModelHeader.HASDisassemble.Title              = "Disassemble...";
CATHASModelHeader.HASDisassemble.Help               = "Disassembles multi-cell bodies into mono-cell bodies";
CATHASModelHeader.HASDisassemble.ShortHelp          = "Disassemble";
CATHASModelHeader.HASDisassemble.LongHelp           = 
"Disassemble
Disassembles multi-cell bodies
into mono-cell bodies.";

// == Split == 
CATHASModelHeader.HASSplit.Title                    = "Split...";
CATHASModelHeader.HASSplit.Help                     = "Cuts and relimits an element using a cutting element";
CATHASModelHeader.HASSplit.ShortHelp                = "Split";
CATHASModelHeader.HASSplit.LongHelp                 = 
"Split
Cuts and relimits an element using a cutting element.";

// == Trim == 
CATHASModelHeader.HASTrim.Title                     = "Trim...";
CATHASModelHeader.HASTrim.Help                      = "Cuts and assembles two elements";
CATHASModelHeader.HASTrim.ShortHelp                 = "Trim";
CATHASModelHeader.HASTrim.LongHelp                  = 
"Trim
Cuts and assembles two elements.";

// == Boundary ==
CATHASModelHeader.HASBoundary.Title                 = "Boundary...";
CATHASModelHeader.HASBoundary.Help                  = "Creates a boundary around a surface";
CATHASModelHeader.HASBoundary.ShortHelp             = "Boundary";
CATHASModelHeader.HASBoundary.LongHelp              = 
"Boundary
Creates a boundary from
the edge of a surface.";

// == Extract Solide == 
CATHASModelHeader.HASExtractSolide.Title            = "Extract...";
CATHASModelHeader.HASExtractSolide.Help             = "Extracts a face or a surface edge";
CATHASModelHeader.HASExtractSolide.ShortHelp        = "Extract";
CATHASModelHeader.HASExtractSolide.LongHelp         = 
"Extract
Extracts a face or a surface edge.";

// == Extrapol == 
CATHASModelHeader.HASExtrapol.Title			    	= "Extrapolate...";
CATHASModelHeader.HASExtrapol.Help			    	= "Creates a surface or curve by extrapolation";
CATHASModelHeader.HASExtrapol.ShortHelp		    	= "Extrapolate";
CATHASModelHeader.HASExtrapol.LongHelp		    	= 
"Extrapolate
Creates a surface by extrapolation of one of its boundaries,
or a curve at one of its endpoints.";

// == Inverse== 
CATHASModelHeader.HASInvert.Title                   = "Invert Orientation...";
CATHASModelHeader.HASInvert.Help                    = "Inverts an element's orientation";
CATHASModelHeader.HASInvert.ShortHelp               = "Invert Orientation";
CATHASModelHeader.HASInvert.LongHelp                = 
"Invert Orientation
Inverts an element's orientation.";

// == Near == 
CATHASModelHeader.HASNear.Title                     = "Near...";
CATHASModelHeader.HASNear.Help                      = "Extracts the nearest element";
CATHASModelHeader.HASNear.ShortHelp                 = "Near";
CATHASModelHeader.HASNear.LongHelp                  =
"Near
Creates, from the multi-element, 
the element nearest to the reference element.";

//
// ========================================================================================
// == Healing Assistant-











