// DO NOT EDIT :: THE CAA2 WIZARDS WILL ADD CODE HERE
// END WIZARD EDITION ZONE

//--------------------------------------
// TEMPO (waiting for KWE f(x) evolutions)
//--------------------------------------
CATFcaCmdHeader.FeatureEditHeader.Title="Edit Parameters";
CATFcaCmdHeader.FeatureEditHeader.Help="Edit Parameters";
CATFcaCmdHeader.FeatureEditHeader.ShortHelp="Edit Parameters";
//
//
// FcaObjectCreate
CATFcaCmdHeader.FcaObjectCreate.Title="Functional Object";
CATFcaCmdHeader.FcaObjectCreate.Help="Create a Functional Object in a Functional Description";
CATFcaCmdHeader.FcaObjectCreate.ShortHelp="Functional Object Create";
CATFcaCmdHeader.FcaObjectCreate.LongHelp="Functional ObjectCreate long help";
//
//
// FcaActionCreate
CATFcaCmdHeader.FcaActionCreate.Title="Functional Action";
CATFcaCmdHeader.FcaActionCreate.Help="Create a Functional Action between 2 Functional Objects";
CATFcaCmdHeader.FcaActionCreate.ShortHelp="Functional Action Create";
CATFcaCmdHeader.FcaActionCreate.LongHelp="Functional ActionCreate long help";
//
//
// FcaActionCreateNotOrient
CATFcaCmdHeader.FcaActionCreateNotOrient.Title="Not-oriented Functional Action";
CATFcaCmdHeader.FcaActionCreateNotOrient.Help="Create a not-oriented Functional Action between 2 Functional Objects";
CATFcaCmdHeader.FcaActionCreateNotOrient.ShortHelp="Not-oriented Functional Action Create";
CATFcaCmdHeader.FcaActionCreateNotOrient.LongHelp="Not-oriented Functional ActionCreate long help";
//
//
// FcaActionCreateBidir
CATFcaCmdHeader.FcaActionCreateBidir.Title="Bidirectional Functional Action";
CATFcaCmdHeader.FcaActionCreateBidir.Help="Create a bidirectional Functional Action between 2 Functional Objects";
CATFcaCmdHeader.FcaActionCreateBidir.ShortHelp="Bidirectional Functional Action Create";
CATFcaCmdHeader.FcaActionCreateBidir.LongHelp="Bidirectional Functional ActionCreate long help";
//
//
// FcaActionInvert
CATFcaCmdHeader.FcaActionInvert.Title="Functional Action Invert";
CATFcaCmdHeader.FcaActionInvert.Help="Invert the Direction of a Functional Action between 2 Functional Objects";
CATFcaCmdHeader.FcaActionInvert.ShortHelp="Invert Direction";
CATFcaCmdHeader.FcaActionInvert.LongHelp="Functional ActionInvert long help";
//
//
// FcaActionsGroupCreate
CATFcaCmdHeader.FcaActionsGroupCreate.Title="FunctionalActions Group";
CATFcaCmdHeader.FcaActionsGroupCreate.Help="Create a Group of Functional Actions";
CATFcaCmdHeader.FcaActionsGroupCreate.ShortHelp="Functional ActionsGroup Create";
CATFcaCmdHeader.FcaActionsGroupCreate.LongHelp="Functional ActionsGroupCreate long help";
//
//
// FcaObjectLinkToProduct
CATFcaCmdHeader.FcaObjectLinkToProduct.Title="Link to Product Item";
CATFcaCmdHeader.FcaObjectLinkToProduct.Help="Link a Functional Definition to a Product Item";
CATFcaCmdHeader.FcaObjectLinkToProduct.ShortHelp="Link Functional Definition to Product";
CATFcaCmdHeader.FcaObjectLinkToProduct.LongHelp="Link Functional Definition to Product long help";
//
//
// FcaEditGenerativeScript
CATFcaCmdHeader.FcaEditGenerativeScript.Title="Generative Script of Functional Object";
CATFcaCmdHeader.FcaEditGenerativeScript.Help="Edit the Generative Script of a Functional Object";
CATFcaCmdHeader.FcaEditGenerativeScript.ShortHelp="Edit the Generative Script";
CATFcaCmdHeader.FcaEditGenerativeScript.LongHelp="Edit the Generative Script long help";
//
//
// FsyGraphLayout
CATFcaCmdHeader.FsyGraphLayout.Title="Improve graph's layout";
CATFcaCmdHeader.FsyGraphLayout.Help="Run optimization algorithms to improve readability of the graph";
CATFcaCmdHeader.FsyGraphLayout.ShortHelp="Choose an optimization tool for graph layout";
CATFcaCmdHeader.FsyGraphLayout.LongHelp="Improve graph's layout long help";
//
//
// FsyRevEng
CATFcaCmdHeader.FsyRevEng.Title="Reverse Engineering of a Product";
CATFcaCmdHeader.FsyRevEng.Help="Analyse Mechanical relationships to deduce functional relationships";
CATFcaCmdHeader.FsyRevEng.ShortHelp="Translate Mechanical into Functional";
CATFcaCmdHeader.FsyRevEng.LongHelp="Reverse Engineering of a Product long help";
//
//
// FcaVariantCreate
CATFcaCmdHeader.FcaVariantCreate.Title="Create a Functional Variant";
CATFcaCmdHeader.FcaVariantCreate.Help="Create a Functional Variant from the Original Functional Description";
CATFcaCmdHeader.FcaVariantCreate.ShortHelp="Functional Variant";
CATFcaCmdHeader.FcaVariantCreate.LongHelp="Functional Variant long help";
//
//
// FcaEditOriginalDescription
CATFcaCmdHeader.FcaEditOriginalDescription.Title="Edit the Original Functional Description";
CATFcaCmdHeader.FcaEditOriginalDescription.Help="Edit the Original Functional Description";
CATFcaCmdHeader.FcaEditOriginalDescription.ShortHelp="Edit Original Description";
CATFcaCmdHeader.FcaEditOriginalDescription.LongHelp="Edit Original Description long help";
//
// FcaEditVariantDescription
CATFcaCmdHeader.FcaEditVariantDescription.Title="Edit a Variant Description";
CATFcaCmdHeader.FcaEditVariantDescription.Help="Edit an existing Variant Description";
CATFcaCmdHeader.FcaEditVariantDescription.ShortHelp="Edit Variant";
CATFcaCmdHeader.FcaEditVariantDescription.LongHelp="FcaEditVariantDescription long help";
//
//
// FcaDescriptionUnlock
CATFcaCmdHeader.FcaDescriptionUnlock.Title="Remove protection on Description";
CATFcaCmdHeader.FcaDescriptionUnlock.Help="Allow modifications on description";
CATFcaCmdHeader.FcaDescriptionUnlock.ShortHelp="Unlock description";
CATFcaCmdHeader.FcaDescriptionUnlock.LongHelp="FcaDescriptionUnlock long help";
//
//
// FcaOrthogonalLines
CATFcaCmdHeader.FcaOrthogonalLines.Title="Draw Actions orthogonally";
CATFcaCmdHeader.FcaOrthogonalLines.Help="Orthogonal lines for Actions";
CATFcaCmdHeader.FcaOrthogonalLines.ShortHelp="Orthogonal lines";
CATFcaCmdHeader.FcaOrthogonalLines.LongHelp="FcaOrthogonalLines long help";
//
// FcaDirectLines
CATFcaCmdHeader.FcaDirectLines.Title="Draw Actions as oblique lines";
CATFcaCmdHeader.FcaDirectLines.Help="Oblique lines for Actions";
CATFcaCmdHeader.FcaDirectLines.ShortHelp="Oblique lines";
CATFcaCmdHeader.FcaDirectLines.LongHelp="FcaDirectLines long help";

// CatalogBrowser
CATFcaCmdHeader.CatalogBrowser.Title="SubSystem extracted from a Components Catalog";
CATFcaCmdHeader.CatalogBrowser.Help="Insert a SubSystem extracted from a Components Catalog";
CATFcaCmdHeader.CatalogBrowser.ShortHelp="Insert a SubSystem extracted from a Components Catalog";
CATFcaCmdHeader.CatalogBrowser.LongHelp="Compose the current System by adding a SubSystem extracted from a Components Catalog";

// New_System
CATFcaCmdHeader.New_System.Title="SubSystem from scratch...";
CATFcaCmdHeader.New_System.Help="Insert a SubSystem from scratch (no reference system yet)";
CATFcaCmdHeader.New_System.ShortHelp="Insert a SubSystem from scratch";
CATFcaCmdHeader.New_System.LongHelp="Compose the current System by adding a SubSystem from scratch";

// Existing_System
CATFcaCmdHeader.Existing_System.Title="SubSystem referencing an existing System...";
CATFcaCmdHeader.Existing_System.Help="Insert a SubSystem referencing an existing System";
CATFcaCmdHeader.Existing_System.ShortHelp="Insert a SubSystem referencing an existing System";
CATFcaCmdHeader.Existing_System.LongHelp="Compose the current System by adding a SubSystem referencing another existing System";

// ManageData_System
CATFcaCmdHeader.ManageData_System.Title="Local Cache of System...";
CATFcaCmdHeader.ManageData_System.Help="Manage Parameters in Local Cache of System";
CATFcaCmdHeader.ManageData_System.ShortHelp="Cache of System";
CATFcaCmdHeader.ManageData_System.LongHelp="Manage parameters inside the Cache of System";

// Link_To_CATSystem
CATFcaCmdHeader.Link_To_CATSystem.Title="Link to Reference...";
CATFcaCmdHeader.Link_To_CATSystem.Help="Link the System to a Reference";
CATFcaCmdHeader.Link_To_CATSystem.ShortHelp="Link the System";
CATFcaCmdHeader.Link_To_CATSystem.LongHelp="Choose the Reference of the System";


// == Templates Creation ==
CATFcaCmdHeader.CreatePowerCopy.Title            = "PowerCopy Creation...";
CATFcaCmdHeader.CreatePowerCopy.Help             = "Creates a PowerCopy";
CATFcaCmdHeader.CreatePowerCopy.ShortHelp        = "PowerCopy Creation";
CATFcaCmdHeader.CreatePowerCopy.LongHelp         = "Creates a PowerCopy";

// == Save In Catalog ==
CATFcaCmdHeader.SavePowerCopyInCatalog.Title                 = "Save In Catalog...";
CATFcaCmdHeader.SavePowerCopyInCatalog.Help                  = "Save object in a catalog";
CATFcaCmdHeader.SavePowerCopyInCatalog.ShortHelp             = "Save in Catalog";
CATFcaCmdHeader.SavePowerCopyInCatalog.LongHelp              = "Save object in a catalog";

// == Templates Instantiation ==
CATFcaCmdHeader.InstantiatePowerCopyFromOtherFile.Title            = "Instantiate From Document...";
CATFcaCmdHeader.InstantiatePowerCopyFromOtherFile.Help             = "Instantiate a element stored in a part";
CATFcaCmdHeader.InstantiatePowerCopyFromOtherFile.ShortHelp        = "Instantiate from document";
CATFcaCmdHeader.InstantiatePowerCopyFromOtherFile.LongHelp         = "Instantiate a elements stored in a part";

// == Instanciate == 
CATFcaCmdHeader.Instanciate.Title     = "Instantiate...";
CATFcaCmdHeader.Instanciate.ShortHelp = "Instantiate";
CATFcaCmdHeader.Instanciate.Help      = "Instantiate";
CATFcaCmdHeader.Instanciate.LongHelp  = "Instantiate";


// Menu contextuel
//----------------------
CATFcaCmdHeader.Type_Manager.Title = "Type Manager";
CATFcaCmdHeader.Type_Manager.Help="Manage the Dynamics Types";
CATFcaCmdHeader.Type_Manager.ShortHelp="Type Manager";
CATFcaCmdHeader.Type_Manager.LongHelp="Activate/Deactivate the Dynamic Types";

CATFcaCmdHeader.Typer.Title = "Dynamically Typing";
CATFcaCmdHeader.Typer.Help="Dynamically Type an Object";
CATFcaCmdHeader.Typer.ShortHelp="Dynamically Typing";
CATFcaCmdHeader.Typer.LongHelp="Activate/Deactivate the Dynamic Types";
