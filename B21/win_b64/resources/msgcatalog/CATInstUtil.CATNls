//---------------------------------------------------------------------------
// MESSAGES FROM CXINSTUTIL LIBRARY
//---------------------------------------------------------------------------- 

ErrBadParameteres ="Bad parameters in call to  /p1\n";
ErrorFileNotFound="File /p1 is not found on the media\n";
ErrorOpeningFile="Error opening file /p1\n";

// Messages from CATInsIsRoot
NotRoot =  "You must be super-user(root) to install \n\Please try to become super-user by running the following commands:\nsu - root \nor  login root\nThen rerun \/start \n";
NotAdministrator="Installation program requires administrator pivileges.";
VistaNotAdminPrivileges ="Use an administrator command prompt to launch this program";

// Messages from CATInsDirectory.cpp
ErrWndSyntaxDir ="Pathname /p1 is incorrect\n"; 


// Messages from CATInsGetUnloadDir
CodeNotInstalled = "You need to install code level /p1 before installing Service Pack\n";

// Messages from CATInsCheckMedia
ErrEmptyMediaToc = "List of configurations and/or products on CD-ROM is empty.\n";

// Messages from  CATInsCheckInstall 
ErrWndProductAllInstalled = "All the configurations and products on the CD-ROM are already installed.\n";

// Messages from  CATInsCheckInstallCAA
ErrWndProductCodeNotInstalled = "If you want to install another CAA configuration and(or) product,\n you need to install another Code configuration and(or) product first.\n";  
 
// Messages from  CATInsCheckInstallSPK 
ErrWndFSPAllInstalled = "Every fixed configuration or product on the CD-ROM is
already installed\n";

// Messages from  CATInsCheckInstallCode
ErrorCannotGetCodeDir="Setup cannot retrieve directory where Code has been installed\nCAA is installed in /p1\n"; 
ErrNoPRESENTForAnyOS ="You need to install code level /p1 in /p2 before installing CAA\n" ;
ErrorMustReinstallSPKCode="You must re-install code Service Pack level /p1 for operating system /p2\n";


// Messages from  CATInsCheckInstallSPKCommitted
MsgCheckInstallSPKNotCommitted ="/p1 is not a valid installation path to install /p2 SP/p3 CAA CDROM because code SP is not committed\n";
MsgCheckBadInstalledSPK ="/p1 is not a valid installation path to install /p2 SP/p3 CAA CDROM because cInstalled SPK level is /p4\n";

// Messages from CATInsCheckIntegrityGA
ErrCheckCATIAIntegrity =  "Check Integrity failed\n";
ErrIntegrityServicePack = "Some components you have just installed are not at the correct level.\nYou must re-install Service Pack /p1\n";
ErrIntegrityServicePackCAA = "Some components you have just installed are not at the correct level.\nYou must re-install CAA Service Pack /p1\n";
CheckIntegrityOK ="Check Integrity successfully ended\n"; 

// Messages form CATInsCheckLevelCode
ErrWndNoPresent = "File /p1 is not found - /p2 doesn't contain any code installation\n";
ErrWndGALevelCode ="You can't install /p1 level CAA files in /p2 where /p3 level code is installed for /p4\n";
ErrWndNoDir="/p1 doesn't exist - You must install code, before installing CAA files\n";

// Messages from CATInsCheckMediaSPK
ErrorNoSPK ="There is no Service Pack to install on this media\n";

// Messages from CATInsCheckMediaHFX
ErrorNoHFX ="There is no Hot Fix to install on this media\n";

// Messages from CheckV5RunPortValue
ErrWndV5RunPortNotFree = "Port /p1 is busy.\nYou must specify a free port.\nYou can use the port /p2\n";
ErrWndV5RunPort= "Invalid port number:/p1. Port number must be greater than or equal to /p2\n";
ErrWndV5RunPortMax="Invalid port number:/p1. Port number must be less than or equal to /p2\n";
ErrWndV5Run2PortEqual="You cannot enter the same port number for the backbone process:/p1,\nand for the starting backbone process: /p2.\n"; 
ErrWndV5Run3PortEqual="Port number values for the backbone process:/p1,\nthe starting backbone process:/p2,\n and the peripheral device broker:/p3 must be different from each other."; 
ErrWndV5RunPortreserved="Port /p1 is reserved\n";
ErrWndV5RunRangereserved="Ports between /p1 and /p2 are reserved\n";

// Messages from UpdatePorts
ErrWndOpenServicesFile = "Setup cannot update /p1.\nFile cannot be opened :/p2.\n";
OKWriteServicesFile =  "Successful update of /p1\n";
ErrWndWriteServicesFile = "Setup cannot update /p1.\nWrite failed :/p2.\n";
ErrWndRenameServicesFile = "Setup cannot update /p1.\nRename failed :/p2.\n";
ErrWndAllocServicesFile =  "Setup cannot update /p1.\nCannot read file in memory : allocation of /p2 bytes failed.\n";

// Messages from  CATInsCheckOrbixValue
ErrWndOrbixPort = "Port number must be greater than or equal to /p1\n";
ErrWndOrbixPortNotFree =  "Port /p1 is busy.\nYou must specify a free port.\nYou can use the port /p2\n";
ErrWndOrbixServerBase = "Starting port number /p1  must be greater than the Port number for Orbix daemon /p2\n";
ErrWndOrbixServerRange =  "Range for daemon-run servers must be greater than 50\n";
ErrBadOrbixPort1   = "Bad value for Orbix daemon port : /p1. Value must be greater than /p2\n";
ErrBadOrbixPort2   = "Bad value for Orbix daemon port : /p1. Value must be less than /p2\n";
ErrBadServerBase1  = "Bad value for starting port number for daemon-run servers : /p1. Value must be greater than /p2\n";
ErrBadServerBase2  = "Bad value for starting port number for daemon-run servers : /p1. Value must be less than /p2\n";
ErrBadServerRange1 ="Bad value for Orbix server range : /p1. Value must be greater than /p2\n";
ErrBadServerRange2 ="Bad value for Orbix server range : /p1. Value must be less than /p2\n";



// Messages from GetFreePort
ErrValuePortTooBig ="Value /p1 is incorrect.Value for port number must be less than /p2\n";
ErrCreateSocket = "Setup cannot check if port /p1 is free , because creation of socket failed - /p2\n";
Errgetsockname  =  "Setup cannot check if port /p1 is free , because getsockname failed - /p2\n";
ErrSearchFreePort ="Setup cannot find a free port between /p1 and /p2\n";
// specifique NT
ErrWsock32 =  "Wsock32.dll was not found\n"; 
ErrRequestedWsock32 = "Required Wsock32.dll was not found\n";
ErrCreateSocketFailed ="Creation of socked failed\n"; 

// Messages from CATInsComputeAvailSpace
ErrWndBadDir = "Incorrect Installation Directory : /p1\n";
ErrWndAvailSpace ="Error computing available space on/p1\n/p2\n";
ErrWndDiskInfo = "Unable to get disk information on /p1\n/p2\n";

// Messages from CATInsCheckPrereqGA
ErrWndOS = "You cannot install /p1 operating system data onto the /p2 operating system.\n";
ErrWndGALevel ="You cannot install /p1 level data onto a /p2 level installation.\n";
// Messages from CATInsCheckPrereqGASP
ErrWndGASPLevel1 = "You cannot install GA /p1 with Service Pack /p2 onto GA /p3 with Service Pack /p4.\n";
ErrWndGASPLevel2 = "You cannot install GA /p1 with Service Pack /p2 onto GA /p3\n";

//  Messages from CATInsCheckEmptyDir
ErrWndNoWriteDir =" Directory /p1 has no write permission. Add write permission or change directory\n";
ErrWndFileAlreadyExist = "Cannot create the directory /p1\n. The name already exists.\n";
ErrWndEmptyDir ="/p1 must be empty\n";
ErrBadOS3264= "It is forbidden to install /p1-bit media onto /p2-bit installation\n";

// Messages from ExportV4
ErrWndV4IsNotaDir = "Directory /p1 doesn't exist\n"; 

// Messages from ExportTCK
ErrWndTCKPortNotFree =  "Port /p1 is busy.\nYou must specify a free port.\nYou can use the port /p2\n";
ErrWndTCKServerName =  "You must enter a name for Server\n";
ErrBadTCKServerPortMin   = "Bad value for TCK Server port : /p1. Value must be greater than /p2\n";
ErrBadTCKServerPortMax = "Bad value for TCK Server port : /p1. Value must be less than /p2\n";

// Messages from ExportServersTimeout 
ErrWndTimeout = "Incorrect timeout value : /p1. Timeout value can range from 2 to 35700 minutes\n";

// Messages from ExportSDAM
ErrWndSDAMPortNotFree =  "Port /p1 is busy.\nYou must specify a free port.\nYou can use the port /p2\n";
ErrWndSDAMServerBase = "Starting port number /p1  must be greater than the port number for SDAM daemon /p2\n";
ErrWndSDAMServerRange =  "Range for SDAM internal communication must be greater than 99\n";
ErrBadSDAMPort1   = "Bad value for SDAM daemon port : /p1. Value must be greater than /p2\n";
ErrBadSDAMPort2   = "Bad value for SDAM daemon port : /p1. Value must be less than /p2\n";
ErrWndSDAMServerBase_Range = "Value for SDAM daemon port plus range value : /p1 must be less than /p2\n";

// Messages from ExportVaultClient
ErrAliasNotSet="You must enter a value for alias name\n";
ErrHostnameNotSet="You must enter a value for hostname\n";
ErrPortNotSet="You must enter an integer value for port number\nValue must be greater than 0\n";
ErrServiceNotSet="You must enter a value for service name\n" ;

// Messages from InitMediaToc
ErrorInitMediaToc ="Cannot read file /p1 from media\n /p2\n"; 
ErrorInitNoToc="File /p1 is not found on the media\n";

// Messages from InitInstallToc
ErrorInitToc ="Cannot read file /p1 \n/p2\n";

// Messages frorm CATInsExistDir
DirNoWrite="Directory /p1 does not exist\n";
DirNotExist ="Directory /p1 has no write access\n";
DirNoWriteNT="Folder /p1 does not exist\n";
DirNotExistNT ="Folder /p1 is read-only\n";


// Messages from CATInsCheckSPKLevel
ErrWndNoCommit ="You need to commit or roll back Service Pack level /p1 before installing Service Pack level /p2\nRun /p3\n";
ErrWndErrorCD  ="Service Pack level /p1 has already been installed in /p2.\nYou cannot install Service Pack level /p3\n";
 
// Messages from CATInsCheckSPKLevel
ErrorNoFile="File /p1 doesn't exist\n";
ErrWndOpenControlFile = "Cannot open control file /p1 : /p2\n";
ErrorBadMedia_1="You need to install Service Pack level /p1 for code for /p2,before installing Service Pack level /p3 for caa\n";
ErrorBadMedia_2="Code Service Pack Level /p1 for /p2 is already installed. You need to install the same level of Service Pack for CAA\n";

// Messages from CATInsServicesbeforeFinish
ErrCmdFailed="Command [/p1] failed\n";
ErrCmdFailed2="Command [/p1] failed - rc = /p2\n";
CmdSuccessful="Command [/p1] was successful\n";
ErrFileNotExist="File /p1 was not found\n";
CreateFile_OK="File /p1 was sucessfully created\n";
CreateFile_KO="File /p1 could not be created\n";
EnoviaSetupRC_0="ENOVIA V5 VPM Database Setup successfully ended\n";
EnoviaSetupRC_1="After having corrected the ENOVIA V5 VPM Database Setup Error.\nLaunch the command : /p1\n";
EnoviaSetupRC_2="You have stopped ENOVIA V5 VPM Database Setup.\nIf you want to perform it later,\nlaunch the command : /p1\n";
EnoviaSetupDefault="ENOVIA V5 VPM Database Setup failed - Return code = /p1\n";
UpdateOpenInputFailed="Cannot open file /p1 for reading\n";
UpdateOpenAppendFailed="Cannot open file /p1 for writing\n";
InstallCopy="File /p1 has been created\n";
ChmodNotDone= "Cannot change mode for file: /p1";
InstallUpdate="File  /p1 has been updated\n";

// Messages from  CATInsJavaHome
ErrWndjreNotFound="Incorrect JAVA_HOME path. Program java was not found in path /p1\n";
ErrWndJavaHomeNULL="Path for JAVA_HOME is NULL\n";
ErrGetVersionCommand="Error while executing command : /p1\n";
ErrBadVersion="/p1 is not supported \n";
ErrBadJavaVersionWINDOWS64_64="64-bit Java version 1.5.0 or higher is required\n";
ErrBadJavaVersionAIX64_64="64-bit Java version 1.3.1 or higher is required\n";
ErrBadJavaVersionWINDOWS32_64="32-bit Java version 1.5.0_02 or higher is required\n";
ErrBadJavaVersionWINDOWS32_32="Java version 1.3.1 or higher is required\n";
ErrBadJavaVersionUNIX32_32="Java version 1.3.1 or higher is required\n";
ErrGetJavaVersion ="Cannot get java version. Command /p1 failed\n";
 
// Messages from CATInsServiceNT
ServiceWasStopped="Service /p1 was successfully stopped\n";
ServiceWasNotStopped="Service /p1 could not be stopped: /p2\n";
ControlServiceFailed="Control Service failed: /p1\nService /p2 was not stopped\n";
ServiceWasStarted="Service /p1 was started\n";
ServiceWasNotStarted="Service /p1 could not be started: /p2\n";
ServiceWasNotCreated="Service /p1 could not be created: /p2\n";
ServiceWasDeleted="Service /p1 was deleted\n";
ServiceWasNotDeleted="Service /p1 could not be deleted: /p2\n";

// Messages from CATInstallVBA
ErrVBANotEnoughSpace ="There is not enough space to install VBA files in /p1\nRequired space = /p2 Kb - Available space = /p3 Kb\n";
ErrVBANotEnoughSpaceSystem ="There is not enough space to install VBA system files in /p1\nRequired space = /p2 Kb - Available space = /p3 Kb\n";
ErrVBANotEnoughSpaceShared= "There is not enough space to install VBA shared files in /p1\nRequired space = /p2 Kb - Available space = /p3\Kbn";
InstallVBAOK="Install VBA was successful\n";
InstallVBAReboot="Install VBA needs reboot\n";
InstallVBAKO ="Install VBA failed rc = /p1\n";
InstallVBAKOInternal = "Install  VBA failed - GetProcAdress Failed\n";
ErrorLoadVBA="Install VBA failed - Cannot load library /p1 - rc = /p2\n";
//
ErrorAlloc="/p1 : Allocation of /p2 failed\n";

// Messages from CATInsPrereq
ErrorPrereq="This Windows version is not supported, please refer to the program directory for supported platforms.\n" ;
ErrorPrereqOS="To perform setup on /p1, Service Pack /p2 is required \n";

ErrorPrereq2000="Service Pack 4 is required for Windows 2000 to perform setup\n" ;
ErrorPrereqddraw="DirectX 8.1 is required. You can download it from URL:\n http://www.microsoft.com/downloads/details.aspx?FamilyID=7f54ebd3-00d1-47bc-81db-3157fba4c3a7\n";
// Messages from CATInsCheckHFXLevel
ErrHFXLevelSPK="It is impossible to install hot fix /p1 on /p2 with Service Pack level /p3\n";
ErrHFXAlreadyInstalled="Hot fix /p1 is already installed\n";
ErrHFXCommitSPK="You need to commit Service Pack level /p1 before installing hot fix /p2\n";
ErrHFXLevelold="You need to remove hot fix /p1 before installing /p2\n";
ErrHFXneedreinstallSPK="You need to reinstall Service Pack /p1 before installing /p2\n";
ErrWndFunctionFailed ="Function /p1 failed: rc= /p2n";


// Messages from CATInsValidIdent
EmptyIdent ="You must enter a value for ident";
BadTooLongIdent="Ident /p1 is too long: Ident must not exceed 20 characters"; 
BadAlphaNumIdent="Bad ident /p1: The ident must contain only uppercases letters or digits";

// Messages from CATInsSaveFilesBeforeInstall
ErrWndExtractCab.Text = "Cannot extract file /p1 from cabinet file /p2\n";
ErrWndExtractTar.Text = "Cannot extract file /p1 from tar file /p2\n";
CheckTmpDir = "Check if /p1 is not full\n";
ErrWndOpenControlFile.Text = "Cannot open control file /p1 : /p2\n";
ErrWndRenameFile.Text = "Cannot rename file /p1 to /p2";

// Messages from CATInsTransferCAF
ErrExtractCabinet = "Error extracting cabinet file /p1\n";
ErrCommandInterrupted ="Command /p1 was interrupted\n"; 

// Messages from CATCabExtract
ErrCreateDir = "Error creating folder /p1\n";
ErrInputCab = "cannot open file /p1\n";
ErrNotACab = "/p1 is not a cabinet file\n";
ErrCopyFailed ="FDICopy failed:\n";
FDI_Noerror="No error\n";
FDI_CabNotFound ="Cabinet not found\n";
FDI_NotACab="Not a cabinet\n";
FDI_UnknownCabinetVersion="Unknown cabinet version\n";
FDI_CabCorrupted="Corrupted cabinet\n";
FDI_AllocFailed="Memory allocation failed\n";
FDI_BadComprType="Unknown compression type\n";
FDI_MDIFailed="Failure decompressing data\n";
FDI_ErrorTargetFile="Failure writing to target file\n";
FDI_ReserveMismatch="Cabinets in set have different RESERVE sizes\n";
FDI_WrongCabinet="Cabinet returned on fdintNEXT_CABINET is incorrect\n";
FDI_UserAbort="User aborted\n";
FDI_default="Unknown error\n";
ErrExtractCaf = "Error extracting zip file /p1\n"; 
ErrMemoryZipExtract ="There  was  not  enough  memory\n";
ErrBadcafZipOpen ="The archive was corrupted or incomplete\n";
ErrBufferZipExtract ="There was not enough room in the output buffer\n";
ErrArgZipExtract ="ExtractDir is NULL\n";
ErrBadcafZipExtract ="The archive was corrupted or incomplete\n";
ErrUnknownZipExtract= "Unknown error\n";
ErrBadcafZipExtract ="The archive was corrupted or incomplete\n";
ErrUnknownZipExtract ="Unknown error\n";



// messages from DSYPostInstallDoc
DSYPostInstallDoc_RenameKO = "Renaming of /p1 to /p2 failed\n";
DSYPostInstallDoc_OpenKO   = "Opening file /p1 failed\n";
DSYPostInstallDoc_CreateOK = "File /p1 was succesfully created\n";
DSYPostInstallDoc_CreateKO = "File /p1 was  not created\n";
DSYPostInstallDoc_CreateIndexmkman ="Creating indexes for mkman\n";
DSYPostInstallDoc_CreateIndexmkdicdl ="Creating indexes for mkdicdl\n"; 
DSYPostInstallDoc_Command = "Command : /p1 /p2 - rc = /p3\n";
DSYPostInstallDoc_CreateJavaDoc="Creating java doc\n";

// messages from DSYAdmFic
DSYAdmFic_OpenKO   = "Opening file /p1 failed\n";
DSYAdmFic_WriteKO  = "Program has failed to write in /p1 file\n";
