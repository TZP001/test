nbMaxEvalSmy = "End of run status";
nbMaxEvalMsg = " Gradient reached the maximum number of updates\nThe solution may not be as good as what could have been found with more updates.";
timeExceededMsg = " Gradient reached the maximum time\n The solution may not be as good as what could have been found with more updates.";

timeExceededSmy = "End of run status";

consecutiveBadSmy = "End of run status";
consecutiveBadMsg = "Gradient reached the maximum number of updates without improvement.";

NoFeasibleRegionFound = "The algorithm is unable to find a feasible starting point.";

// SOC - 23/09/02
missingFreeParmMsg = "To run the optimization, choose at least one free parameter.\n";
missingFreeParmSmy = "Free parameter missing";
missingParamToOptimizeMsg = "This algorithm needs a parameter to optimize.";
missingParamToOptimizeSmy = "Missing parameter to optimize";
algorithmCompatibilityMsg = "This gradient algorithm cannot work without constraint.\nCreate at least one constraint or select the 'Gradient Algorithm Without Constraint' in the list of algorithms";
algorithmCompatibilitySmy = "Algorithm incompatible with defined optimization";
internalErrorSmy = "Internal error";


FirstUpdateError = "Error during first update in gradient. Local search Aborts.";

GradientEvaluationError = " Error during vector gradient evaluation. Abort.";

EvaluationErrorAfterGradient = "Unable to restore values after vector gradient calculus. Local search aborts.";

EqualityConstraintsIgnored="The chosen algorithm does not support equality constraints. All equality constraints were ignored. See documentation for further details.";

OptimizerForDerivativesProviderName=" Local Algorithm For Derivative Providers ";
OptimizerCurrentEvaluation= " Evaluation ";

ObjectiveNotDerProvider=" The objective is not a derivative provider.";
ConstraintsNoDer = "unable to get derivatives for constraint ";
ObjectiveNoDer = "unable to get derivatives for objective.";
ObjectiveUnableToGetOutputValues = "unable to get output values for objective.";

AbsoluteBoundsReached = "At least one Free Parameter Bound has been reached.";




